import * as $protobuf from "protobufjs";
/** Namespace cosmos. */
export namespace cosmos {

    /** Namespace adminmodule. */
    namespace adminmodule {

        /** Namespace adminmodule. */
        namespace adminmodule {

            /** Represents a Msg */
            class Msg extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Msg service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls DeleteAdmin.
                 * @param request MsgDeleteAdmin message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgDeleteAdminResponse
                 */
                public deleteAdmin(request: cosmos.adminmodule.adminmodule.IMsgDeleteAdmin, callback: cosmos.adminmodule.adminmodule.Msg.DeleteAdminCallback): void;

                /**
                 * Calls DeleteAdmin.
                 * @param request MsgDeleteAdmin message or plain object
                 * @returns Promise
                 */
                public deleteAdmin(request: cosmos.adminmodule.adminmodule.IMsgDeleteAdmin): Promise<cosmos.adminmodule.adminmodule.MsgDeleteAdminResponse>;

                /**
                 * Calls AddAdmin.
                 * @param request MsgAddAdmin message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgAddAdminResponse
                 */
                public addAdmin(request: cosmos.adminmodule.adminmodule.IMsgAddAdmin, callback: cosmos.adminmodule.adminmodule.Msg.AddAdminCallback): void;

                /**
                 * Calls AddAdmin.
                 * @param request MsgAddAdmin message or plain object
                 * @returns Promise
                 */
                public addAdmin(request: cosmos.adminmodule.adminmodule.IMsgAddAdmin): Promise<cosmos.adminmodule.adminmodule.MsgAddAdminResponse>;

                /**
                 * Calls SubmitProposal.
                 * @param request MsgSubmitProposal message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgSubmitProposalResponse
                 */
                public submitProposal(request: cosmos.adminmodule.adminmodule.IMsgSubmitProposal, callback: cosmos.adminmodule.adminmodule.Msg.SubmitProposalCallback): void;

                /**
                 * Calls SubmitProposal.
                 * @param request MsgSubmitProposal message or plain object
                 * @returns Promise
                 */
                public submitProposal(request: cosmos.adminmodule.adminmodule.IMsgSubmitProposal): Promise<cosmos.adminmodule.adminmodule.MsgSubmitProposalResponse>;

                /**
                 * Calls SubmitProposalLegacy.
                 * @param request MsgSubmitProposalLegacy message or plain object
                 * @param callback Node-style callback called with the error, if any, and MsgSubmitProposalLegacyResponse
                 */
                public submitProposalLegacy(request: cosmos.adminmodule.adminmodule.IMsgSubmitProposalLegacy, callback: cosmos.adminmodule.adminmodule.Msg.SubmitProposalLegacyCallback): void;

                /**
                 * Calls SubmitProposalLegacy.
                 * @param request MsgSubmitProposalLegacy message or plain object
                 * @returns Promise
                 */
                public submitProposalLegacy(request: cosmos.adminmodule.adminmodule.IMsgSubmitProposalLegacy): Promise<cosmos.adminmodule.adminmodule.MsgSubmitProposalLegacyResponse>;
            }

            namespace Msg {

                /**
                 * Callback as used by {@link cosmos.adminmodule.adminmodule.Msg#deleteAdmin}.
                 * @param error Error, if any
                 * @param [response] MsgDeleteAdminResponse
                 */
                type DeleteAdminCallback = (error: (Error|null), response?: cosmos.adminmodule.adminmodule.MsgDeleteAdminResponse) => void;

                /**
                 * Callback as used by {@link cosmos.adminmodule.adminmodule.Msg#addAdmin}.
                 * @param error Error, if any
                 * @param [response] MsgAddAdminResponse
                 */
                type AddAdminCallback = (error: (Error|null), response?: cosmos.adminmodule.adminmodule.MsgAddAdminResponse) => void;

                /**
                 * Callback as used by {@link cosmos.adminmodule.adminmodule.Msg#submitProposal}.
                 * @param error Error, if any
                 * @param [response] MsgSubmitProposalResponse
                 */
                type SubmitProposalCallback = (error: (Error|null), response?: cosmos.adminmodule.adminmodule.MsgSubmitProposalResponse) => void;

                /**
                 * Callback as used by {@link cosmos.adminmodule.adminmodule.Msg#submitProposalLegacy}.
                 * @param error Error, if any
                 * @param [response] MsgSubmitProposalLegacyResponse
                 */
                type SubmitProposalLegacyCallback = (error: (Error|null), response?: cosmos.adminmodule.adminmodule.MsgSubmitProposalLegacyResponse) => void;
            }

            /** Properties of a MsgDeleteAdmin. */
            interface IMsgDeleteAdmin {

                /** MsgDeleteAdmin creator */
                creator?: (string|null);

                /** MsgDeleteAdmin admin */
                admin?: (string|null);
            }

            /** Represents a MsgDeleteAdmin. */
            class MsgDeleteAdmin implements IMsgDeleteAdmin {

                /**
                 * Constructs a new MsgDeleteAdmin.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.adminmodule.adminmodule.IMsgDeleteAdmin);

                /** MsgDeleteAdmin creator. */
                public creator: string;

                /** MsgDeleteAdmin admin. */
                public admin: string;

                /**
                 * Encodes the specified MsgDeleteAdmin message. Does not implicitly {@link cosmos.adminmodule.adminmodule.MsgDeleteAdmin.verify|verify} messages.
                 * @param message MsgDeleteAdmin message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.adminmodule.adminmodule.IMsgDeleteAdmin, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgDeleteAdmin message, length delimited. Does not implicitly {@link cosmos.adminmodule.adminmodule.MsgDeleteAdmin.verify|verify} messages.
                 * @param message MsgDeleteAdmin message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.adminmodule.adminmodule.IMsgDeleteAdmin, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgDeleteAdmin message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgDeleteAdmin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.adminmodule.adminmodule.MsgDeleteAdmin;

                /**
                 * Decodes a MsgDeleteAdmin message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgDeleteAdmin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.adminmodule.adminmodule.MsgDeleteAdmin;

                /**
                 * Verifies a MsgDeleteAdmin message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgDeleteAdmin message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgDeleteAdmin
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.adminmodule.adminmodule.MsgDeleteAdmin;

                /**
                 * Creates a plain object from a MsgDeleteAdmin message. Also converts values to other types if specified.
                 * @param message MsgDeleteAdmin
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.adminmodule.adminmodule.MsgDeleteAdmin, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgDeleteAdmin to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgDeleteAdminResponse. */
            interface IMsgDeleteAdminResponse {
            }

            /** Represents a MsgDeleteAdminResponse. */
            class MsgDeleteAdminResponse implements IMsgDeleteAdminResponse {

                /**
                 * Constructs a new MsgDeleteAdminResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.adminmodule.adminmodule.IMsgDeleteAdminResponse);

                /**
                 * Encodes the specified MsgDeleteAdminResponse message. Does not implicitly {@link cosmos.adminmodule.adminmodule.MsgDeleteAdminResponse.verify|verify} messages.
                 * @param message MsgDeleteAdminResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.adminmodule.adminmodule.IMsgDeleteAdminResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgDeleteAdminResponse message, length delimited. Does not implicitly {@link cosmos.adminmodule.adminmodule.MsgDeleteAdminResponse.verify|verify} messages.
                 * @param message MsgDeleteAdminResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.adminmodule.adminmodule.IMsgDeleteAdminResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgDeleteAdminResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgDeleteAdminResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.adminmodule.adminmodule.MsgDeleteAdminResponse;

                /**
                 * Decodes a MsgDeleteAdminResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgDeleteAdminResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.adminmodule.adminmodule.MsgDeleteAdminResponse;

                /**
                 * Verifies a MsgDeleteAdminResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgDeleteAdminResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgDeleteAdminResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.adminmodule.adminmodule.MsgDeleteAdminResponse;

                /**
                 * Creates a plain object from a MsgDeleteAdminResponse message. Also converts values to other types if specified.
                 * @param message MsgDeleteAdminResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.adminmodule.adminmodule.MsgDeleteAdminResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgDeleteAdminResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgAddAdmin. */
            interface IMsgAddAdmin {

                /** MsgAddAdmin creator */
                creator?: (string|null);

                /** MsgAddAdmin admin */
                admin?: (string|null);
            }

            /** Represents a MsgAddAdmin. */
            class MsgAddAdmin implements IMsgAddAdmin {

                /**
                 * Constructs a new MsgAddAdmin.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.adminmodule.adminmodule.IMsgAddAdmin);

                /** MsgAddAdmin creator. */
                public creator: string;

                /** MsgAddAdmin admin. */
                public admin: string;

                /**
                 * Encodes the specified MsgAddAdmin message. Does not implicitly {@link cosmos.adminmodule.adminmodule.MsgAddAdmin.verify|verify} messages.
                 * @param message MsgAddAdmin message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.adminmodule.adminmodule.IMsgAddAdmin, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgAddAdmin message, length delimited. Does not implicitly {@link cosmos.adminmodule.adminmodule.MsgAddAdmin.verify|verify} messages.
                 * @param message MsgAddAdmin message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.adminmodule.adminmodule.IMsgAddAdmin, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgAddAdmin message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgAddAdmin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.adminmodule.adminmodule.MsgAddAdmin;

                /**
                 * Decodes a MsgAddAdmin message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgAddAdmin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.adminmodule.adminmodule.MsgAddAdmin;

                /**
                 * Verifies a MsgAddAdmin message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgAddAdmin message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgAddAdmin
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.adminmodule.adminmodule.MsgAddAdmin;

                /**
                 * Creates a plain object from a MsgAddAdmin message. Also converts values to other types if specified.
                 * @param message MsgAddAdmin
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.adminmodule.adminmodule.MsgAddAdmin, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgAddAdmin to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgAddAdminResponse. */
            interface IMsgAddAdminResponse {
            }

            /** Represents a MsgAddAdminResponse. */
            class MsgAddAdminResponse implements IMsgAddAdminResponse {

                /**
                 * Constructs a new MsgAddAdminResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.adminmodule.adminmodule.IMsgAddAdminResponse);

                /**
                 * Encodes the specified MsgAddAdminResponse message. Does not implicitly {@link cosmos.adminmodule.adminmodule.MsgAddAdminResponse.verify|verify} messages.
                 * @param message MsgAddAdminResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.adminmodule.adminmodule.IMsgAddAdminResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgAddAdminResponse message, length delimited. Does not implicitly {@link cosmos.adminmodule.adminmodule.MsgAddAdminResponse.verify|verify} messages.
                 * @param message MsgAddAdminResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.adminmodule.adminmodule.IMsgAddAdminResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgAddAdminResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgAddAdminResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.adminmodule.adminmodule.MsgAddAdminResponse;

                /**
                 * Decodes a MsgAddAdminResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgAddAdminResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.adminmodule.adminmodule.MsgAddAdminResponse;

                /**
                 * Verifies a MsgAddAdminResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgAddAdminResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgAddAdminResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.adminmodule.adminmodule.MsgAddAdminResponse;

                /**
                 * Creates a plain object from a MsgAddAdminResponse message. Also converts values to other types if specified.
                 * @param message MsgAddAdminResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.adminmodule.adminmodule.MsgAddAdminResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgAddAdminResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgSubmitProposalLegacy. */
            interface IMsgSubmitProposalLegacy {

                /** MsgSubmitProposalLegacy content */
                content?: (google.protobuf.IAny|null);

                /** MsgSubmitProposalLegacy proposer */
                proposer?: (string|null);
            }

            /** Represents a MsgSubmitProposalLegacy. */
            class MsgSubmitProposalLegacy implements IMsgSubmitProposalLegacy {

                /**
                 * Constructs a new MsgSubmitProposalLegacy.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.adminmodule.adminmodule.IMsgSubmitProposalLegacy);

                /** MsgSubmitProposalLegacy content. */
                public content?: (google.protobuf.IAny|null);

                /** MsgSubmitProposalLegacy proposer. */
                public proposer: string;

                /**
                 * Encodes the specified MsgSubmitProposalLegacy message. Does not implicitly {@link cosmos.adminmodule.adminmodule.MsgSubmitProposalLegacy.verify|verify} messages.
                 * @param message MsgSubmitProposalLegacy message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.adminmodule.adminmodule.IMsgSubmitProposalLegacy, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSubmitProposalLegacy message, length delimited. Does not implicitly {@link cosmos.adminmodule.adminmodule.MsgSubmitProposalLegacy.verify|verify} messages.
                 * @param message MsgSubmitProposalLegacy message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.adminmodule.adminmodule.IMsgSubmitProposalLegacy, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSubmitProposalLegacy message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSubmitProposalLegacy
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.adminmodule.adminmodule.MsgSubmitProposalLegacy;

                /**
                 * Decodes a MsgSubmitProposalLegacy message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSubmitProposalLegacy
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.adminmodule.adminmodule.MsgSubmitProposalLegacy;

                /**
                 * Verifies a MsgSubmitProposalLegacy message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSubmitProposalLegacy message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSubmitProposalLegacy
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.adminmodule.adminmodule.MsgSubmitProposalLegacy;

                /**
                 * Creates a plain object from a MsgSubmitProposalLegacy message. Also converts values to other types if specified.
                 * @param message MsgSubmitProposalLegacy
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.adminmodule.adminmodule.MsgSubmitProposalLegacy, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSubmitProposalLegacy to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgSubmitProposalLegacyResponse. */
            interface IMsgSubmitProposalLegacyResponse {

                /** MsgSubmitProposalLegacyResponse proposal_id */
                proposal_id?: (Long|null);
            }

            /** Represents a MsgSubmitProposalLegacyResponse. */
            class MsgSubmitProposalLegacyResponse implements IMsgSubmitProposalLegacyResponse {

                /**
                 * Constructs a new MsgSubmitProposalLegacyResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.adminmodule.adminmodule.IMsgSubmitProposalLegacyResponse);

                /** MsgSubmitProposalLegacyResponse proposal_id. */
                public proposal_id: Long;

                /**
                 * Encodes the specified MsgSubmitProposalLegacyResponse message. Does not implicitly {@link cosmos.adminmodule.adminmodule.MsgSubmitProposalLegacyResponse.verify|verify} messages.
                 * @param message MsgSubmitProposalLegacyResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.adminmodule.adminmodule.IMsgSubmitProposalLegacyResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSubmitProposalLegacyResponse message, length delimited. Does not implicitly {@link cosmos.adminmodule.adminmodule.MsgSubmitProposalLegacyResponse.verify|verify} messages.
                 * @param message MsgSubmitProposalLegacyResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.adminmodule.adminmodule.IMsgSubmitProposalLegacyResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSubmitProposalLegacyResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSubmitProposalLegacyResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.adminmodule.adminmodule.MsgSubmitProposalLegacyResponse;

                /**
                 * Decodes a MsgSubmitProposalLegacyResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSubmitProposalLegacyResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.adminmodule.adminmodule.MsgSubmitProposalLegacyResponse;

                /**
                 * Verifies a MsgSubmitProposalLegacyResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSubmitProposalLegacyResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSubmitProposalLegacyResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.adminmodule.adminmodule.MsgSubmitProposalLegacyResponse;

                /**
                 * Creates a plain object from a MsgSubmitProposalLegacyResponse message. Also converts values to other types if specified.
                 * @param message MsgSubmitProposalLegacyResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.adminmodule.adminmodule.MsgSubmitProposalLegacyResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSubmitProposalLegacyResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgSubmitProposal. */
            interface IMsgSubmitProposal {

                /** MsgSubmitProposal messages */
                messages?: (google.protobuf.IAny[]|null);

                /** MsgSubmitProposal proposer */
                proposer?: (string|null);
            }

            /** Represents a MsgSubmitProposal. */
            class MsgSubmitProposal implements IMsgSubmitProposal {

                /**
                 * Constructs a new MsgSubmitProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.adminmodule.adminmodule.IMsgSubmitProposal);

                /** MsgSubmitProposal messages. */
                public messages: google.protobuf.IAny[];

                /** MsgSubmitProposal proposer. */
                public proposer: string;

                /**
                 * Encodes the specified MsgSubmitProposal message. Does not implicitly {@link cosmos.adminmodule.adminmodule.MsgSubmitProposal.verify|verify} messages.
                 * @param message MsgSubmitProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.adminmodule.adminmodule.IMsgSubmitProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSubmitProposal message, length delimited. Does not implicitly {@link cosmos.adminmodule.adminmodule.MsgSubmitProposal.verify|verify} messages.
                 * @param message MsgSubmitProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.adminmodule.adminmodule.IMsgSubmitProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSubmitProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSubmitProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.adminmodule.adminmodule.MsgSubmitProposal;

                /**
                 * Decodes a MsgSubmitProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSubmitProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.adminmodule.adminmodule.MsgSubmitProposal;

                /**
                 * Verifies a MsgSubmitProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSubmitProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSubmitProposal
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.adminmodule.adminmodule.MsgSubmitProposal;

                /**
                 * Creates a plain object from a MsgSubmitProposal message. Also converts values to other types if specified.
                 * @param message MsgSubmitProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.adminmodule.adminmodule.MsgSubmitProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSubmitProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a MsgSubmitProposalResponse. */
            interface IMsgSubmitProposalResponse {

                /** MsgSubmitProposalResponse proposal_id */
                proposal_id?: (Long|null);
            }

            /** Represents a MsgSubmitProposalResponse. */
            class MsgSubmitProposalResponse implements IMsgSubmitProposalResponse {

                /**
                 * Constructs a new MsgSubmitProposalResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.adminmodule.adminmodule.IMsgSubmitProposalResponse);

                /** MsgSubmitProposalResponse proposal_id. */
                public proposal_id: Long;

                /**
                 * Encodes the specified MsgSubmitProposalResponse message. Does not implicitly {@link cosmos.adminmodule.adminmodule.MsgSubmitProposalResponse.verify|verify} messages.
                 * @param message MsgSubmitProposalResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.adminmodule.adminmodule.IMsgSubmitProposalResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MsgSubmitProposalResponse message, length delimited. Does not implicitly {@link cosmos.adminmodule.adminmodule.MsgSubmitProposalResponse.verify|verify} messages.
                 * @param message MsgSubmitProposalResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.adminmodule.adminmodule.IMsgSubmitProposalResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MsgSubmitProposalResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MsgSubmitProposalResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.adminmodule.adminmodule.MsgSubmitProposalResponse;

                /**
                 * Decodes a MsgSubmitProposalResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MsgSubmitProposalResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.adminmodule.adminmodule.MsgSubmitProposalResponse;

                /**
                 * Verifies a MsgSubmitProposalResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MsgSubmitProposalResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MsgSubmitProposalResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.adminmodule.adminmodule.MsgSubmitProposalResponse;

                /**
                 * Creates a plain object from a MsgSubmitProposalResponse message. Also converts values to other types if specified.
                 * @param message MsgSubmitProposalResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.adminmodule.adminmodule.MsgSubmitProposalResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MsgSubmitProposalResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Represents a Query */
            class Query extends $protobuf.rpc.Service {

                /**
                 * Constructs a new Query service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Calls Admins.
                 * @param request QueryAdminsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryAdminsResponse
                 */
                public admins(request: cosmos.adminmodule.adminmodule.IQueryAdminsRequest, callback: cosmos.adminmodule.adminmodule.Query.AdminsCallback): void;

                /**
                 * Calls Admins.
                 * @param request QueryAdminsRequest message or plain object
                 * @returns Promise
                 */
                public admins(request: cosmos.adminmodule.adminmodule.IQueryAdminsRequest): Promise<cosmos.adminmodule.adminmodule.QueryAdminsResponse>;

                /**
                 * Calls ArchivedProposals.
                 * @param request QueryArchivedProposalsRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryArchivedProposalsResponse
                 */
                public archivedProposals(request: cosmos.adminmodule.adminmodule.IQueryArchivedProposalsRequest, callback: cosmos.adminmodule.adminmodule.Query.ArchivedProposalsCallback): void;

                /**
                 * Calls ArchivedProposals.
                 * @param request QueryArchivedProposalsRequest message or plain object
                 * @returns Promise
                 */
                public archivedProposals(request: cosmos.adminmodule.adminmodule.IQueryArchivedProposalsRequest): Promise<cosmos.adminmodule.adminmodule.QueryArchivedProposalsResponse>;

                /**
                 * Calls ArchivedProposalsLegacy.
                 * @param request QueryArchivedProposalsLegacyRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and QueryArchivedProposalsLegacyResponse
                 */
                public archivedProposalsLegacy(request: cosmos.adminmodule.adminmodule.IQueryArchivedProposalsLegacyRequest, callback: cosmos.adminmodule.adminmodule.Query.ArchivedProposalsLegacyCallback): void;

                /**
                 * Calls ArchivedProposalsLegacy.
                 * @param request QueryArchivedProposalsLegacyRequest message or plain object
                 * @returns Promise
                 */
                public archivedProposalsLegacy(request: cosmos.adminmodule.adminmodule.IQueryArchivedProposalsLegacyRequest): Promise<cosmos.adminmodule.adminmodule.QueryArchivedProposalsLegacyResponse>;
            }

            namespace Query {

                /**
                 * Callback as used by {@link cosmos.adminmodule.adminmodule.Query#admins}.
                 * @param error Error, if any
                 * @param [response] QueryAdminsResponse
                 */
                type AdminsCallback = (error: (Error|null), response?: cosmos.adminmodule.adminmodule.QueryAdminsResponse) => void;

                /**
                 * Callback as used by {@link cosmos.adminmodule.adminmodule.Query#archivedProposals}.
                 * @param error Error, if any
                 * @param [response] QueryArchivedProposalsResponse
                 */
                type ArchivedProposalsCallback = (error: (Error|null), response?: cosmos.adminmodule.adminmodule.QueryArchivedProposalsResponse) => void;

                /**
                 * Callback as used by {@link cosmos.adminmodule.adminmodule.Query#archivedProposalsLegacy}.
                 * @param error Error, if any
                 * @param [response] QueryArchivedProposalsLegacyResponse
                 */
                type ArchivedProposalsLegacyCallback = (error: (Error|null), response?: cosmos.adminmodule.adminmodule.QueryArchivedProposalsLegacyResponse) => void;
            }

            /** Properties of a QueryAdminsRequest. */
            interface IQueryAdminsRequest {
            }

            /** Represents a QueryAdminsRequest. */
            class QueryAdminsRequest implements IQueryAdminsRequest {

                /**
                 * Constructs a new QueryAdminsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.adminmodule.adminmodule.IQueryAdminsRequest);

                /**
                 * Encodes the specified QueryAdminsRequest message. Does not implicitly {@link cosmos.adminmodule.adminmodule.QueryAdminsRequest.verify|verify} messages.
                 * @param message QueryAdminsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.adminmodule.adminmodule.IQueryAdminsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryAdminsRequest message, length delimited. Does not implicitly {@link cosmos.adminmodule.adminmodule.QueryAdminsRequest.verify|verify} messages.
                 * @param message QueryAdminsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.adminmodule.adminmodule.IQueryAdminsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAdminsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryAdminsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.adminmodule.adminmodule.QueryAdminsRequest;

                /**
                 * Decodes a QueryAdminsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryAdminsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.adminmodule.adminmodule.QueryAdminsRequest;

                /**
                 * Verifies a QueryAdminsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryAdminsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryAdminsRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.adminmodule.adminmodule.QueryAdminsRequest;

                /**
                 * Creates a plain object from a QueryAdminsRequest message. Also converts values to other types if specified.
                 * @param message QueryAdminsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.adminmodule.adminmodule.QueryAdminsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryAdminsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryAdminsResponse. */
            interface IQueryAdminsResponse {

                /** QueryAdminsResponse admins */
                admins?: (string[]|null);
            }

            /** Represents a QueryAdminsResponse. */
            class QueryAdminsResponse implements IQueryAdminsResponse {

                /**
                 * Constructs a new QueryAdminsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.adminmodule.adminmodule.IQueryAdminsResponse);

                /** QueryAdminsResponse admins. */
                public admins: string[];

                /**
                 * Encodes the specified QueryAdminsResponse message. Does not implicitly {@link cosmos.adminmodule.adminmodule.QueryAdminsResponse.verify|verify} messages.
                 * @param message QueryAdminsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.adminmodule.adminmodule.IQueryAdminsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryAdminsResponse message, length delimited. Does not implicitly {@link cosmos.adminmodule.adminmodule.QueryAdminsResponse.verify|verify} messages.
                 * @param message QueryAdminsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.adminmodule.adminmodule.IQueryAdminsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryAdminsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryAdminsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.adminmodule.adminmodule.QueryAdminsResponse;

                /**
                 * Decodes a QueryAdminsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryAdminsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.adminmodule.adminmodule.QueryAdminsResponse;

                /**
                 * Verifies a QueryAdminsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryAdminsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryAdminsResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.adminmodule.adminmodule.QueryAdminsResponse;

                /**
                 * Creates a plain object from a QueryAdminsResponse message. Also converts values to other types if specified.
                 * @param message QueryAdminsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.adminmodule.adminmodule.QueryAdminsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryAdminsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryArchivedProposalsRequest. */
            interface IQueryArchivedProposalsRequest {
            }

            /** Represents a QueryArchivedProposalsRequest. */
            class QueryArchivedProposalsRequest implements IQueryArchivedProposalsRequest {

                /**
                 * Constructs a new QueryArchivedProposalsRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.adminmodule.adminmodule.IQueryArchivedProposalsRequest);

                /**
                 * Encodes the specified QueryArchivedProposalsRequest message. Does not implicitly {@link cosmos.adminmodule.adminmodule.QueryArchivedProposalsRequest.verify|verify} messages.
                 * @param message QueryArchivedProposalsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.adminmodule.adminmodule.IQueryArchivedProposalsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryArchivedProposalsRequest message, length delimited. Does not implicitly {@link cosmos.adminmodule.adminmodule.QueryArchivedProposalsRequest.verify|verify} messages.
                 * @param message QueryArchivedProposalsRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.adminmodule.adminmodule.IQueryArchivedProposalsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryArchivedProposalsRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryArchivedProposalsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.adminmodule.adminmodule.QueryArchivedProposalsRequest;

                /**
                 * Decodes a QueryArchivedProposalsRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryArchivedProposalsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.adminmodule.adminmodule.QueryArchivedProposalsRequest;

                /**
                 * Verifies a QueryArchivedProposalsRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryArchivedProposalsRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryArchivedProposalsRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.adminmodule.adminmodule.QueryArchivedProposalsRequest;

                /**
                 * Creates a plain object from a QueryArchivedProposalsRequest message. Also converts values to other types if specified.
                 * @param message QueryArchivedProposalsRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.adminmodule.adminmodule.QueryArchivedProposalsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryArchivedProposalsRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryArchivedProposalsLegacyRequest. */
            interface IQueryArchivedProposalsLegacyRequest {
            }

            /** Represents a QueryArchivedProposalsLegacyRequest. */
            class QueryArchivedProposalsLegacyRequest implements IQueryArchivedProposalsLegacyRequest {

                /**
                 * Constructs a new QueryArchivedProposalsLegacyRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.adminmodule.adminmodule.IQueryArchivedProposalsLegacyRequest);

                /**
                 * Encodes the specified QueryArchivedProposalsLegacyRequest message. Does not implicitly {@link cosmos.adminmodule.adminmodule.QueryArchivedProposalsLegacyRequest.verify|verify} messages.
                 * @param message QueryArchivedProposalsLegacyRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.adminmodule.adminmodule.IQueryArchivedProposalsLegacyRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryArchivedProposalsLegacyRequest message, length delimited. Does not implicitly {@link cosmos.adminmodule.adminmodule.QueryArchivedProposalsLegacyRequest.verify|verify} messages.
                 * @param message QueryArchivedProposalsLegacyRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.adminmodule.adminmodule.IQueryArchivedProposalsLegacyRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryArchivedProposalsLegacyRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryArchivedProposalsLegacyRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.adminmodule.adminmodule.QueryArchivedProposalsLegacyRequest;

                /**
                 * Decodes a QueryArchivedProposalsLegacyRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryArchivedProposalsLegacyRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.adminmodule.adminmodule.QueryArchivedProposalsLegacyRequest;

                /**
                 * Verifies a QueryArchivedProposalsLegacyRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryArchivedProposalsLegacyRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryArchivedProposalsLegacyRequest
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.adminmodule.adminmodule.QueryArchivedProposalsLegacyRequest;

                /**
                 * Creates a plain object from a QueryArchivedProposalsLegacyRequest message. Also converts values to other types if specified.
                 * @param message QueryArchivedProposalsLegacyRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.adminmodule.adminmodule.QueryArchivedProposalsLegacyRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryArchivedProposalsLegacyRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryProposalsResponse. */
            interface IQueryProposalsResponse {

                /** QueryProposalsResponse proposals */
                proposals?: (cosmos.gov.v1.IProposal[]|null);
            }

            /** Represents a QueryProposalsResponse. */
            class QueryProposalsResponse implements IQueryProposalsResponse {

                /**
                 * Constructs a new QueryProposalsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.adminmodule.adminmodule.IQueryProposalsResponse);

                /** QueryProposalsResponse proposals. */
                public proposals: cosmos.gov.v1.IProposal[];

                /**
                 * Encodes the specified QueryProposalsResponse message. Does not implicitly {@link cosmos.adminmodule.adminmodule.QueryProposalsResponse.verify|verify} messages.
                 * @param message QueryProposalsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.adminmodule.adminmodule.IQueryProposalsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryProposalsResponse message, length delimited. Does not implicitly {@link cosmos.adminmodule.adminmodule.QueryProposalsResponse.verify|verify} messages.
                 * @param message QueryProposalsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.adminmodule.adminmodule.IQueryProposalsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryProposalsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryProposalsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.adminmodule.adminmodule.QueryProposalsResponse;

                /**
                 * Decodes a QueryProposalsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryProposalsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.adminmodule.adminmodule.QueryProposalsResponse;

                /**
                 * Verifies a QueryProposalsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryProposalsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryProposalsResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.adminmodule.adminmodule.QueryProposalsResponse;

                /**
                 * Creates a plain object from a QueryProposalsResponse message. Also converts values to other types if specified.
                 * @param message QueryProposalsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.adminmodule.adminmodule.QueryProposalsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryProposalsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryArchivedProposalsResponse. */
            interface IQueryArchivedProposalsResponse {

                /** QueryArchivedProposalsResponse proposals */
                proposals?: (cosmos.gov.v1.IProposal[]|null);
            }

            /** Represents a QueryArchivedProposalsResponse. */
            class QueryArchivedProposalsResponse implements IQueryArchivedProposalsResponse {

                /**
                 * Constructs a new QueryArchivedProposalsResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.adminmodule.adminmodule.IQueryArchivedProposalsResponse);

                /** QueryArchivedProposalsResponse proposals. */
                public proposals: cosmos.gov.v1.IProposal[];

                /**
                 * Encodes the specified QueryArchivedProposalsResponse message. Does not implicitly {@link cosmos.adminmodule.adminmodule.QueryArchivedProposalsResponse.verify|verify} messages.
                 * @param message QueryArchivedProposalsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.adminmodule.adminmodule.IQueryArchivedProposalsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryArchivedProposalsResponse message, length delimited. Does not implicitly {@link cosmos.adminmodule.adminmodule.QueryArchivedProposalsResponse.verify|verify} messages.
                 * @param message QueryArchivedProposalsResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.adminmodule.adminmodule.IQueryArchivedProposalsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryArchivedProposalsResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryArchivedProposalsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.adminmodule.adminmodule.QueryArchivedProposalsResponse;

                /**
                 * Decodes a QueryArchivedProposalsResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryArchivedProposalsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.adminmodule.adminmodule.QueryArchivedProposalsResponse;

                /**
                 * Verifies a QueryArchivedProposalsResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryArchivedProposalsResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryArchivedProposalsResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.adminmodule.adminmodule.QueryArchivedProposalsResponse;

                /**
                 * Creates a plain object from a QueryArchivedProposalsResponse message. Also converts values to other types if specified.
                 * @param message QueryArchivedProposalsResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.adminmodule.adminmodule.QueryArchivedProposalsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryArchivedProposalsResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a QueryArchivedProposalsLegacyResponse. */
            interface IQueryArchivedProposalsLegacyResponse {

                /** QueryArchivedProposalsLegacyResponse proposalsLegacy */
                proposalsLegacy?: (cosmos.gov.v1beta1.IProposal[]|null);
            }

            /** Represents a QueryArchivedProposalsLegacyResponse. */
            class QueryArchivedProposalsLegacyResponse implements IQueryArchivedProposalsLegacyResponse {

                /**
                 * Constructs a new QueryArchivedProposalsLegacyResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.adminmodule.adminmodule.IQueryArchivedProposalsLegacyResponse);

                /** QueryArchivedProposalsLegacyResponse proposalsLegacy. */
                public proposalsLegacy: cosmos.gov.v1beta1.IProposal[];

                /**
                 * Encodes the specified QueryArchivedProposalsLegacyResponse message. Does not implicitly {@link cosmos.adminmodule.adminmodule.QueryArchivedProposalsLegacyResponse.verify|verify} messages.
                 * @param message QueryArchivedProposalsLegacyResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.adminmodule.adminmodule.IQueryArchivedProposalsLegacyResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QueryArchivedProposalsLegacyResponse message, length delimited. Does not implicitly {@link cosmos.adminmodule.adminmodule.QueryArchivedProposalsLegacyResponse.verify|verify} messages.
                 * @param message QueryArchivedProposalsLegacyResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.adminmodule.adminmodule.IQueryArchivedProposalsLegacyResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QueryArchivedProposalsLegacyResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QueryArchivedProposalsLegacyResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.adminmodule.adminmodule.QueryArchivedProposalsLegacyResponse;

                /**
                 * Decodes a QueryArchivedProposalsLegacyResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QueryArchivedProposalsLegacyResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.adminmodule.adminmodule.QueryArchivedProposalsLegacyResponse;

                /**
                 * Verifies a QueryArchivedProposalsLegacyResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QueryArchivedProposalsLegacyResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QueryArchivedProposalsLegacyResponse
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.adminmodule.adminmodule.QueryArchivedProposalsLegacyResponse;

                /**
                 * Creates a plain object from a QueryArchivedProposalsLegacyResponse message. Also converts values to other types if specified.
                 * @param message QueryArchivedProposalsLegacyResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.adminmodule.adminmodule.QueryArchivedProposalsLegacyResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QueryArchivedProposalsLegacyResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a GenesisState. */
            interface IGenesisState {

                /** GenesisState admins */
                admins?: (string[]|null);
            }

            /** Represents a GenesisState. */
            class GenesisState implements IGenesisState {

                /**
                 * Constructs a new GenesisState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.adminmodule.adminmodule.IGenesisState);

                /** GenesisState admins. */
                public admins: string[];

                /**
                 * Encodes the specified GenesisState message. Does not implicitly {@link cosmos.adminmodule.adminmodule.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.adminmodule.adminmodule.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link cosmos.adminmodule.adminmodule.GenesisState.verify|verify} messages.
                 * @param message GenesisState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.adminmodule.adminmodule.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.adminmodule.adminmodule.GenesisState;

                /**
                 * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.adminmodule.adminmodule.GenesisState;

                /**
                 * Verifies a GenesisState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisState
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.adminmodule.adminmodule.GenesisState;

                /**
                 * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                 * @param message GenesisState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.adminmodule.adminmodule.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace gov. */
    namespace gov {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** VoteOption enum. */
            enum VoteOption {
                VOTE_OPTION_UNSPECIFIED = 0,
                VOTE_OPTION_YES = 1,
                VOTE_OPTION_ABSTAIN = 2,
                VOTE_OPTION_NO = 3,
                VOTE_OPTION_NO_WITH_VETO = 4
            }

            /** Properties of a WeightedVoteOption. */
            interface IWeightedVoteOption {

                /** WeightedVoteOption option */
                option?: (cosmos.gov.v1beta1.VoteOption|null);

                /** WeightedVoteOption weight */
                weight?: (string|null);
            }

            /** Represents a WeightedVoteOption. */
            class WeightedVoteOption implements IWeightedVoteOption {

                /**
                 * Constructs a new WeightedVoteOption.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IWeightedVoteOption);

                /** WeightedVoteOption option. */
                public option: cosmos.gov.v1beta1.VoteOption;

                /** WeightedVoteOption weight. */
                public weight: string;

                /**
                 * Encodes the specified WeightedVoteOption message. Does not implicitly {@link cosmos.gov.v1beta1.WeightedVoteOption.verify|verify} messages.
                 * @param message WeightedVoteOption message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IWeightedVoteOption, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified WeightedVoteOption message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.WeightedVoteOption.verify|verify} messages.
                 * @param message WeightedVoteOption message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IWeightedVoteOption, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a WeightedVoteOption message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns WeightedVoteOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.WeightedVoteOption;

                /**
                 * Decodes a WeightedVoteOption message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns WeightedVoteOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.WeightedVoteOption;

                /**
                 * Verifies a WeightedVoteOption message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a WeightedVoteOption message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns WeightedVoteOption
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.WeightedVoteOption;

                /**
                 * Creates a plain object from a WeightedVoteOption message. Also converts values to other types if specified.
                 * @param message WeightedVoteOption
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.WeightedVoteOption, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this WeightedVoteOption to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a TextProposal. */
            interface ITextProposal {

                /** TextProposal title */
                title?: (string|null);

                /** TextProposal description */
                description?: (string|null);
            }

            /** Represents a TextProposal. */
            class TextProposal implements ITextProposal {

                /**
                 * Constructs a new TextProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.ITextProposal);

                /** TextProposal title. */
                public title: string;

                /** TextProposal description. */
                public description: string;

                /**
                 * Encodes the specified TextProposal message. Does not implicitly {@link cosmos.gov.v1beta1.TextProposal.verify|verify} messages.
                 * @param message TextProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.ITextProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TextProposal message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.TextProposal.verify|verify} messages.
                 * @param message TextProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.ITextProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TextProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TextProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.TextProposal;

                /**
                 * Decodes a TextProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TextProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.TextProposal;

                /**
                 * Verifies a TextProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TextProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TextProposal
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.TextProposal;

                /**
                 * Creates a plain object from a TextProposal message. Also converts values to other types if specified.
                 * @param message TextProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.TextProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TextProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Deposit. */
            interface IDeposit {

                /** Deposit proposal_id */
                proposal_id?: (Long|null);

                /** Deposit depositor */
                depositor?: (string|null);

                /** Deposit amount */
                amount?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a Deposit. */
            class Deposit implements IDeposit {

                /**
                 * Constructs a new Deposit.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IDeposit);

                /** Deposit proposal_id. */
                public proposal_id: Long;

                /** Deposit depositor. */
                public depositor: string;

                /** Deposit amount. */
                public amount: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified Deposit message. Does not implicitly {@link cosmos.gov.v1beta1.Deposit.verify|verify} messages.
                 * @param message Deposit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IDeposit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Deposit message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.Deposit.verify|verify} messages.
                 * @param message Deposit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IDeposit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Deposit message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Deposit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.Deposit;

                /**
                 * Decodes a Deposit message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Deposit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.Deposit;

                /**
                 * Verifies a Deposit message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Deposit message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Deposit
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.Deposit;

                /**
                 * Creates a plain object from a Deposit message. Also converts values to other types if specified.
                 * @param message Deposit
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.Deposit, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Deposit to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Proposal. */
            interface IProposal {

                /** Proposal proposal_id */
                proposal_id?: (Long|null);

                /** Proposal content */
                content?: (google.protobuf.IAny|null);

                /** Proposal status */
                status?: (cosmos.gov.v1beta1.ProposalStatus|null);

                /** Proposal final_tally_result */
                final_tally_result?: (cosmos.gov.v1beta1.ITallyResult|null);

                /** Proposal submit_time */
                submit_time?: (google.protobuf.ITimestamp|null);

                /** Proposal deposit_end_time */
                deposit_end_time?: (google.protobuf.ITimestamp|null);

                /** Proposal total_deposit */
                total_deposit?: (cosmos.base.v1beta1.ICoin[]|null);

                /** Proposal voting_start_time */
                voting_start_time?: (google.protobuf.ITimestamp|null);

                /** Proposal voting_end_time */
                voting_end_time?: (google.protobuf.ITimestamp|null);
            }

            /** Represents a Proposal. */
            class Proposal implements IProposal {

                /**
                 * Constructs a new Proposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IProposal);

                /** Proposal proposal_id. */
                public proposal_id: Long;

                /** Proposal content. */
                public content?: (google.protobuf.IAny|null);

                /** Proposal status. */
                public status: cosmos.gov.v1beta1.ProposalStatus;

                /** Proposal final_tally_result. */
                public final_tally_result?: (cosmos.gov.v1beta1.ITallyResult|null);

                /** Proposal submit_time. */
                public submit_time?: (google.protobuf.ITimestamp|null);

                /** Proposal deposit_end_time. */
                public deposit_end_time?: (google.protobuf.ITimestamp|null);

                /** Proposal total_deposit. */
                public total_deposit: cosmos.base.v1beta1.ICoin[];

                /** Proposal voting_start_time. */
                public voting_start_time?: (google.protobuf.ITimestamp|null);

                /** Proposal voting_end_time. */
                public voting_end_time?: (google.protobuf.ITimestamp|null);

                /**
                 * Encodes the specified Proposal message. Does not implicitly {@link cosmos.gov.v1beta1.Proposal.verify|verify} messages.
                 * @param message Proposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Proposal message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.Proposal.verify|verify} messages.
                 * @param message Proposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Proposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Proposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.Proposal;

                /**
                 * Decodes a Proposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Proposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.Proposal;

                /**
                 * Verifies a Proposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Proposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Proposal
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.Proposal;

                /**
                 * Creates a plain object from a Proposal message. Also converts values to other types if specified.
                 * @param message Proposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.Proposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Proposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** ProposalStatus enum. */
            enum ProposalStatus {
                PROPOSAL_STATUS_UNSPECIFIED = 0,
                PROPOSAL_STATUS_DEPOSIT_PERIOD = 1,
                PROPOSAL_STATUS_VOTING_PERIOD = 2,
                PROPOSAL_STATUS_PASSED = 3,
                PROPOSAL_STATUS_REJECTED = 4,
                PROPOSAL_STATUS_FAILED = 5
            }

            /** Properties of a TallyResult. */
            interface ITallyResult {

                /** TallyResult yes */
                yes?: (string|null);

                /** TallyResult abstain */
                abstain?: (string|null);

                /** TallyResult no */
                no?: (string|null);

                /** TallyResult no_with_veto */
                no_with_veto?: (string|null);
            }

            /** Represents a TallyResult. */
            class TallyResult implements ITallyResult {

                /**
                 * Constructs a new TallyResult.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.ITallyResult);

                /** TallyResult yes. */
                public yes: string;

                /** TallyResult abstain. */
                public abstain: string;

                /** TallyResult no. */
                public no: string;

                /** TallyResult no_with_veto. */
                public no_with_veto: string;

                /**
                 * Encodes the specified TallyResult message. Does not implicitly {@link cosmos.gov.v1beta1.TallyResult.verify|verify} messages.
                 * @param message TallyResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.ITallyResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TallyResult message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.TallyResult.verify|verify} messages.
                 * @param message TallyResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.ITallyResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TallyResult message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TallyResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.TallyResult;

                /**
                 * Decodes a TallyResult message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TallyResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.TallyResult;

                /**
                 * Verifies a TallyResult message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TallyResult message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TallyResult
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.TallyResult;

                /**
                 * Creates a plain object from a TallyResult message. Also converts values to other types if specified.
                 * @param message TallyResult
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.TallyResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TallyResult to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Vote. */
            interface IVote {

                /** Vote proposal_id */
                proposal_id?: (Long|null);

                /** Vote voter */
                voter?: (string|null);

                /** Vote option */
                option?: (cosmos.gov.v1beta1.VoteOption|null);

                /** Vote options */
                options?: (cosmos.gov.v1beta1.IWeightedVoteOption[]|null);
            }

            /** Represents a Vote. */
            class Vote implements IVote {

                /**
                 * Constructs a new Vote.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IVote);

                /** Vote proposal_id. */
                public proposal_id: Long;

                /** Vote voter. */
                public voter: string;

                /** Vote option. */
                public option: cosmos.gov.v1beta1.VoteOption;

                /** Vote options. */
                public options: cosmos.gov.v1beta1.IWeightedVoteOption[];

                /**
                 * Encodes the specified Vote message. Does not implicitly {@link cosmos.gov.v1beta1.Vote.verify|verify} messages.
                 * @param message Vote message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IVote, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Vote message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.Vote.verify|verify} messages.
                 * @param message Vote message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IVote, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Vote message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Vote
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.Vote;

                /**
                 * Decodes a Vote message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Vote
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.Vote;

                /**
                 * Verifies a Vote message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Vote message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Vote
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.Vote;

                /**
                 * Creates a plain object from a Vote message. Also converts values to other types if specified.
                 * @param message Vote
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.Vote, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Vote to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DepositParams. */
            interface IDepositParams {

                /** DepositParams min_deposit */
                min_deposit?: (cosmos.base.v1beta1.ICoin[]|null);

                /** DepositParams max_deposit_period */
                max_deposit_period?: (google.protobuf.IDuration|null);
            }

            /** Represents a DepositParams. */
            class DepositParams implements IDepositParams {

                /**
                 * Constructs a new DepositParams.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IDepositParams);

                /** DepositParams min_deposit. */
                public min_deposit: cosmos.base.v1beta1.ICoin[];

                /** DepositParams max_deposit_period. */
                public max_deposit_period?: (google.protobuf.IDuration|null);

                /**
                 * Encodes the specified DepositParams message. Does not implicitly {@link cosmos.gov.v1beta1.DepositParams.verify|verify} messages.
                 * @param message DepositParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IDepositParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DepositParams message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.DepositParams.verify|verify} messages.
                 * @param message DepositParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IDepositParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DepositParams message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DepositParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.DepositParams;

                /**
                 * Decodes a DepositParams message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DepositParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.DepositParams;

                /**
                 * Verifies a DepositParams message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DepositParams message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DepositParams
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.DepositParams;

                /**
                 * Creates a plain object from a DepositParams message. Also converts values to other types if specified.
                 * @param message DepositParams
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.DepositParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DepositParams to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a VotingParams. */
            interface IVotingParams {

                /** VotingParams voting_period */
                voting_period?: (google.protobuf.IDuration|null);
            }

            /** Represents a VotingParams. */
            class VotingParams implements IVotingParams {

                /**
                 * Constructs a new VotingParams.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.IVotingParams);

                /** VotingParams voting_period. */
                public voting_period?: (google.protobuf.IDuration|null);

                /**
                 * Encodes the specified VotingParams message. Does not implicitly {@link cosmos.gov.v1beta1.VotingParams.verify|verify} messages.
                 * @param message VotingParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.IVotingParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified VotingParams message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.VotingParams.verify|verify} messages.
                 * @param message VotingParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.IVotingParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a VotingParams message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns VotingParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.VotingParams;

                /**
                 * Decodes a VotingParams message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns VotingParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.VotingParams;

                /**
                 * Verifies a VotingParams message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a VotingParams message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns VotingParams
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.VotingParams;

                /**
                 * Creates a plain object from a VotingParams message. Also converts values to other types if specified.
                 * @param message VotingParams
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.VotingParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this VotingParams to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a TallyParams. */
            interface ITallyParams {

                /** TallyParams quorum */
                quorum?: (Uint8Array|null);

                /** TallyParams threshold */
                threshold?: (Uint8Array|null);

                /** TallyParams veto_threshold */
                veto_threshold?: (Uint8Array|null);
            }

            /** Represents a TallyParams. */
            class TallyParams implements ITallyParams {

                /**
                 * Constructs a new TallyParams.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1beta1.ITallyParams);

                /** TallyParams quorum. */
                public quorum: Uint8Array;

                /** TallyParams threshold. */
                public threshold: Uint8Array;

                /** TallyParams veto_threshold. */
                public veto_threshold: Uint8Array;

                /**
                 * Encodes the specified TallyParams message. Does not implicitly {@link cosmos.gov.v1beta1.TallyParams.verify|verify} messages.
                 * @param message TallyParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1beta1.ITallyParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TallyParams message, length delimited. Does not implicitly {@link cosmos.gov.v1beta1.TallyParams.verify|verify} messages.
                 * @param message TallyParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1beta1.ITallyParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TallyParams message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TallyParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1beta1.TallyParams;

                /**
                 * Decodes a TallyParams message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TallyParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1beta1.TallyParams;

                /**
                 * Verifies a TallyParams message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TallyParams message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TallyParams
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1beta1.TallyParams;

                /**
                 * Creates a plain object from a TallyParams message. Also converts values to other types if specified.
                 * @param message TallyParams
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1beta1.TallyParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TallyParams to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Namespace v1. */
        namespace v1 {

            /** VoteOption enum. */
            enum VoteOption {
                VOTE_OPTION_UNSPECIFIED = 0,
                VOTE_OPTION_YES = 1,
                VOTE_OPTION_ABSTAIN = 2,
                VOTE_OPTION_NO = 3,
                VOTE_OPTION_NO_WITH_VETO = 4
            }

            /** Properties of a WeightedVoteOption. */
            interface IWeightedVoteOption {

                /** WeightedVoteOption option */
                option?: (cosmos.gov.v1.VoteOption|null);

                /** WeightedVoteOption weight */
                weight?: (string|null);
            }

            /** Represents a WeightedVoteOption. */
            class WeightedVoteOption implements IWeightedVoteOption {

                /**
                 * Constructs a new WeightedVoteOption.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1.IWeightedVoteOption);

                /** WeightedVoteOption option. */
                public option: cosmos.gov.v1.VoteOption;

                /** WeightedVoteOption weight. */
                public weight: string;

                /**
                 * Encodes the specified WeightedVoteOption message. Does not implicitly {@link cosmos.gov.v1.WeightedVoteOption.verify|verify} messages.
                 * @param message WeightedVoteOption message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1.IWeightedVoteOption, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified WeightedVoteOption message, length delimited. Does not implicitly {@link cosmos.gov.v1.WeightedVoteOption.verify|verify} messages.
                 * @param message WeightedVoteOption message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1.IWeightedVoteOption, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a WeightedVoteOption message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns WeightedVoteOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1.WeightedVoteOption;

                /**
                 * Decodes a WeightedVoteOption message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns WeightedVoteOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1.WeightedVoteOption;

                /**
                 * Verifies a WeightedVoteOption message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a WeightedVoteOption message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns WeightedVoteOption
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1.WeightedVoteOption;

                /**
                 * Creates a plain object from a WeightedVoteOption message. Also converts values to other types if specified.
                 * @param message WeightedVoteOption
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1.WeightedVoteOption, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this WeightedVoteOption to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Deposit. */
            interface IDeposit {

                /** Deposit proposal_id */
                proposal_id?: (Long|null);

                /** Deposit depositor */
                depositor?: (string|null);

                /** Deposit amount */
                amount?: (cosmos.base.v1beta1.ICoin[]|null);
            }

            /** Represents a Deposit. */
            class Deposit implements IDeposit {

                /**
                 * Constructs a new Deposit.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1.IDeposit);

                /** Deposit proposal_id. */
                public proposal_id: Long;

                /** Deposit depositor. */
                public depositor: string;

                /** Deposit amount. */
                public amount: cosmos.base.v1beta1.ICoin[];

                /**
                 * Encodes the specified Deposit message. Does not implicitly {@link cosmos.gov.v1.Deposit.verify|verify} messages.
                 * @param message Deposit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1.IDeposit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Deposit message, length delimited. Does not implicitly {@link cosmos.gov.v1.Deposit.verify|verify} messages.
                 * @param message Deposit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1.IDeposit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Deposit message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Deposit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1.Deposit;

                /**
                 * Decodes a Deposit message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Deposit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1.Deposit;

                /**
                 * Verifies a Deposit message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Deposit message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Deposit
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1.Deposit;

                /**
                 * Creates a plain object from a Deposit message. Also converts values to other types if specified.
                 * @param message Deposit
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1.Deposit, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Deposit to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Proposal. */
            interface IProposal {

                /** Proposal id */
                id?: (Long|null);

                /** Proposal messages */
                messages?: (google.protobuf.IAny[]|null);

                /** Proposal status */
                status?: (cosmos.gov.v1.ProposalStatus|null);

                /** Proposal final_tally_result */
                final_tally_result?: (cosmos.gov.v1.ITallyResult|null);

                /** Proposal submit_time */
                submit_time?: (google.protobuf.ITimestamp|null);

                /** Proposal deposit_end_time */
                deposit_end_time?: (google.protobuf.ITimestamp|null);

                /** Proposal total_deposit */
                total_deposit?: (cosmos.base.v1beta1.ICoin[]|null);

                /** Proposal voting_start_time */
                voting_start_time?: (google.protobuf.ITimestamp|null);

                /** Proposal voting_end_time */
                voting_end_time?: (google.protobuf.ITimestamp|null);

                /** Proposal metadata */
                metadata?: (string|null);

                /** Proposal title */
                title?: (string|null);

                /** Proposal summary */
                summary?: (string|null);

                /** Proposal proposer */
                proposer?: (string|null);
            }

            /** Represents a Proposal. */
            class Proposal implements IProposal {

                /**
                 * Constructs a new Proposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1.IProposal);

                /** Proposal id. */
                public id: Long;

                /** Proposal messages. */
                public messages: google.protobuf.IAny[];

                /** Proposal status. */
                public status: cosmos.gov.v1.ProposalStatus;

                /** Proposal final_tally_result. */
                public final_tally_result?: (cosmos.gov.v1.ITallyResult|null);

                /** Proposal submit_time. */
                public submit_time?: (google.protobuf.ITimestamp|null);

                /** Proposal deposit_end_time. */
                public deposit_end_time?: (google.protobuf.ITimestamp|null);

                /** Proposal total_deposit. */
                public total_deposit: cosmos.base.v1beta1.ICoin[];

                /** Proposal voting_start_time. */
                public voting_start_time?: (google.protobuf.ITimestamp|null);

                /** Proposal voting_end_time. */
                public voting_end_time?: (google.protobuf.ITimestamp|null);

                /** Proposal metadata. */
                public metadata: string;

                /** Proposal title. */
                public title: string;

                /** Proposal summary. */
                public summary: string;

                /** Proposal proposer. */
                public proposer: string;

                /**
                 * Encodes the specified Proposal message. Does not implicitly {@link cosmos.gov.v1.Proposal.verify|verify} messages.
                 * @param message Proposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1.IProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Proposal message, length delimited. Does not implicitly {@link cosmos.gov.v1.Proposal.verify|verify} messages.
                 * @param message Proposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1.IProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Proposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Proposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1.Proposal;

                /**
                 * Decodes a Proposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Proposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1.Proposal;

                /**
                 * Verifies a Proposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Proposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Proposal
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1.Proposal;

                /**
                 * Creates a plain object from a Proposal message. Also converts values to other types if specified.
                 * @param message Proposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1.Proposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Proposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** ProposalStatus enum. */
            enum ProposalStatus {
                PROPOSAL_STATUS_UNSPECIFIED = 0,
                PROPOSAL_STATUS_DEPOSIT_PERIOD = 1,
                PROPOSAL_STATUS_VOTING_PERIOD = 2,
                PROPOSAL_STATUS_PASSED = 3,
                PROPOSAL_STATUS_REJECTED = 4,
                PROPOSAL_STATUS_FAILED = 5
            }

            /** Properties of a TallyResult. */
            interface ITallyResult {

                /** TallyResult yes_count */
                yes_count?: (string|null);

                /** TallyResult abstain_count */
                abstain_count?: (string|null);

                /** TallyResult no_count */
                no_count?: (string|null);

                /** TallyResult no_with_veto_count */
                no_with_veto_count?: (string|null);
            }

            /** Represents a TallyResult. */
            class TallyResult implements ITallyResult {

                /**
                 * Constructs a new TallyResult.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1.ITallyResult);

                /** TallyResult yes_count. */
                public yes_count: string;

                /** TallyResult abstain_count. */
                public abstain_count: string;

                /** TallyResult no_count. */
                public no_count: string;

                /** TallyResult no_with_veto_count. */
                public no_with_veto_count: string;

                /**
                 * Encodes the specified TallyResult message. Does not implicitly {@link cosmos.gov.v1.TallyResult.verify|verify} messages.
                 * @param message TallyResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1.ITallyResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TallyResult message, length delimited. Does not implicitly {@link cosmos.gov.v1.TallyResult.verify|verify} messages.
                 * @param message TallyResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1.ITallyResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TallyResult message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TallyResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1.TallyResult;

                /**
                 * Decodes a TallyResult message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TallyResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1.TallyResult;

                /**
                 * Verifies a TallyResult message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TallyResult message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TallyResult
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1.TallyResult;

                /**
                 * Creates a plain object from a TallyResult message. Also converts values to other types if specified.
                 * @param message TallyResult
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1.TallyResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TallyResult to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Vote. */
            interface IVote {

                /** Vote proposal_id */
                proposal_id?: (Long|null);

                /** Vote voter */
                voter?: (string|null);

                /** Vote options */
                options?: (cosmos.gov.v1.IWeightedVoteOption[]|null);

                /** Vote metadata */
                metadata?: (string|null);
            }

            /** Represents a Vote. */
            class Vote implements IVote {

                /**
                 * Constructs a new Vote.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1.IVote);

                /** Vote proposal_id. */
                public proposal_id: Long;

                /** Vote voter. */
                public voter: string;

                /** Vote options. */
                public options: cosmos.gov.v1.IWeightedVoteOption[];

                /** Vote metadata. */
                public metadata: string;

                /**
                 * Encodes the specified Vote message. Does not implicitly {@link cosmos.gov.v1.Vote.verify|verify} messages.
                 * @param message Vote message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1.IVote, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Vote message, length delimited. Does not implicitly {@link cosmos.gov.v1.Vote.verify|verify} messages.
                 * @param message Vote message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1.IVote, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Vote message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Vote
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1.Vote;

                /**
                 * Decodes a Vote message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Vote
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1.Vote;

                /**
                 * Verifies a Vote message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Vote message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Vote
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1.Vote;

                /**
                 * Creates a plain object from a Vote message. Also converts values to other types if specified.
                 * @param message Vote
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1.Vote, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Vote to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DepositParams. */
            interface IDepositParams {

                /** DepositParams min_deposit */
                min_deposit?: (cosmos.base.v1beta1.ICoin[]|null);

                /** DepositParams max_deposit_period */
                max_deposit_period?: (google.protobuf.IDuration|null);
            }

            /** Represents a DepositParams. */
            class DepositParams implements IDepositParams {

                /**
                 * Constructs a new DepositParams.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1.IDepositParams);

                /** DepositParams min_deposit. */
                public min_deposit: cosmos.base.v1beta1.ICoin[];

                /** DepositParams max_deposit_period. */
                public max_deposit_period?: (google.protobuf.IDuration|null);

                /**
                 * Encodes the specified DepositParams message. Does not implicitly {@link cosmos.gov.v1.DepositParams.verify|verify} messages.
                 * @param message DepositParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1.IDepositParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DepositParams message, length delimited. Does not implicitly {@link cosmos.gov.v1.DepositParams.verify|verify} messages.
                 * @param message DepositParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1.IDepositParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DepositParams message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DepositParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1.DepositParams;

                /**
                 * Decodes a DepositParams message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DepositParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1.DepositParams;

                /**
                 * Verifies a DepositParams message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DepositParams message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DepositParams
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1.DepositParams;

                /**
                 * Creates a plain object from a DepositParams message. Also converts values to other types if specified.
                 * @param message DepositParams
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1.DepositParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DepositParams to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a VotingParams. */
            interface IVotingParams {

                /** VotingParams voting_period */
                voting_period?: (google.protobuf.IDuration|null);
            }

            /** Represents a VotingParams. */
            class VotingParams implements IVotingParams {

                /**
                 * Constructs a new VotingParams.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1.IVotingParams);

                /** VotingParams voting_period. */
                public voting_period?: (google.protobuf.IDuration|null);

                /**
                 * Encodes the specified VotingParams message. Does not implicitly {@link cosmos.gov.v1.VotingParams.verify|verify} messages.
                 * @param message VotingParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1.IVotingParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified VotingParams message, length delimited. Does not implicitly {@link cosmos.gov.v1.VotingParams.verify|verify} messages.
                 * @param message VotingParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1.IVotingParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a VotingParams message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns VotingParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1.VotingParams;

                /**
                 * Decodes a VotingParams message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns VotingParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1.VotingParams;

                /**
                 * Verifies a VotingParams message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a VotingParams message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns VotingParams
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1.VotingParams;

                /**
                 * Creates a plain object from a VotingParams message. Also converts values to other types if specified.
                 * @param message VotingParams
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1.VotingParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this VotingParams to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a TallyParams. */
            interface ITallyParams {

                /** TallyParams quorum */
                quorum?: (string|null);

                /** TallyParams threshold */
                threshold?: (string|null);

                /** TallyParams veto_threshold */
                veto_threshold?: (string|null);
            }

            /** Represents a TallyParams. */
            class TallyParams implements ITallyParams {

                /**
                 * Constructs a new TallyParams.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1.ITallyParams);

                /** TallyParams quorum. */
                public quorum: string;

                /** TallyParams threshold. */
                public threshold: string;

                /** TallyParams veto_threshold. */
                public veto_threshold: string;

                /**
                 * Encodes the specified TallyParams message. Does not implicitly {@link cosmos.gov.v1.TallyParams.verify|verify} messages.
                 * @param message TallyParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1.ITallyParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TallyParams message, length delimited. Does not implicitly {@link cosmos.gov.v1.TallyParams.verify|verify} messages.
                 * @param message TallyParams message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1.ITallyParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TallyParams message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TallyParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1.TallyParams;

                /**
                 * Decodes a TallyParams message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TallyParams
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1.TallyParams;

                /**
                 * Verifies a TallyParams message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TallyParams message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TallyParams
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1.TallyParams;

                /**
                 * Creates a plain object from a TallyParams message. Also converts values to other types if specified.
                 * @param message TallyParams
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1.TallyParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TallyParams to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params min_deposit */
                min_deposit?: (cosmos.base.v1beta1.ICoin[]|null);

                /** Params max_deposit_period */
                max_deposit_period?: (google.protobuf.IDuration|null);

                /** Params voting_period */
                voting_period?: (google.protobuf.IDuration|null);

                /** Params quorum */
                quorum?: (string|null);

                /** Params threshold */
                threshold?: (string|null);

                /** Params veto_threshold */
                veto_threshold?: (string|null);

                /** Params min_initial_deposit_ratio */
                min_initial_deposit_ratio?: (string|null);

                /** Params burn_vote_quorum */
                burn_vote_quorum?: (boolean|null);

                /** Params burn_proposal_deposit_prevote */
                burn_proposal_deposit_prevote?: (boolean|null);

                /** Params burn_vote_veto */
                burn_vote_veto?: (boolean|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.gov.v1.IParams);

                /** Params min_deposit. */
                public min_deposit: cosmos.base.v1beta1.ICoin[];

                /** Params max_deposit_period. */
                public max_deposit_period?: (google.protobuf.IDuration|null);

                /** Params voting_period. */
                public voting_period?: (google.protobuf.IDuration|null);

                /** Params quorum. */
                public quorum: string;

                /** Params threshold. */
                public threshold: string;

                /** Params veto_threshold. */
                public veto_threshold: string;

                /** Params min_initial_deposit_ratio. */
                public min_initial_deposit_ratio: string;

                /** Params burn_vote_quorum. */
                public burn_vote_quorum: boolean;

                /** Params burn_proposal_deposit_prevote. */
                public burn_proposal_deposit_prevote: boolean;

                /** Params burn_vote_veto. */
                public burn_vote_veto: boolean;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link cosmos.gov.v1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.gov.v1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Params message, length delimited. Does not implicitly {@link cosmos.gov.v1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.gov.v1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.gov.v1.Params;

                /**
                 * Decodes a Params message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.gov.v1.Params;

                /**
                 * Verifies a Params message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Params message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Params
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.gov.v1.Params;

                /**
                 * Creates a plain object from a Params message. Also converts values to other types if specified.
                 * @param message Params
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.gov.v1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Params to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace base. */
    namespace base {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a Coin. */
            interface ICoin {

                /** Coin denom */
                denom?: (string|null);

                /** Coin amount */
                amount?: (string|null);
            }

            /** Represents a Coin. */
            class Coin implements ICoin {

                /**
                 * Constructs a new Coin.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.base.v1beta1.ICoin);

                /** Coin denom. */
                public denom: string;

                /** Coin amount. */
                public amount: string;

                /**
                 * Encodes the specified Coin message. Does not implicitly {@link cosmos.base.v1beta1.Coin.verify|verify} messages.
                 * @param message Coin message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.base.v1beta1.ICoin, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Coin message, length delimited. Does not implicitly {@link cosmos.base.v1beta1.Coin.verify|verify} messages.
                 * @param message Coin message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.base.v1beta1.ICoin, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Coin message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Coin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.v1beta1.Coin;

                /**
                 * Decodes a Coin message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Coin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.v1beta1.Coin;

                /**
                 * Verifies a Coin message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Coin message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Coin
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.base.v1beta1.Coin;

                /**
                 * Creates a plain object from a Coin message. Also converts values to other types if specified.
                 * @param message Coin
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.base.v1beta1.Coin, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Coin to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DecCoin. */
            interface IDecCoin {

                /** DecCoin denom */
                denom?: (string|null);

                /** DecCoin amount */
                amount?: (string|null);
            }

            /** Represents a DecCoin. */
            class DecCoin implements IDecCoin {

                /**
                 * Constructs a new DecCoin.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.base.v1beta1.IDecCoin);

                /** DecCoin denom. */
                public denom: string;

                /** DecCoin amount. */
                public amount: string;

                /**
                 * Encodes the specified DecCoin message. Does not implicitly {@link cosmos.base.v1beta1.DecCoin.verify|verify} messages.
                 * @param message DecCoin message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.base.v1beta1.IDecCoin, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DecCoin message, length delimited. Does not implicitly {@link cosmos.base.v1beta1.DecCoin.verify|verify} messages.
                 * @param message DecCoin message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.base.v1beta1.IDecCoin, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DecCoin message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DecCoin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.v1beta1.DecCoin;

                /**
                 * Decodes a DecCoin message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DecCoin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.v1beta1.DecCoin;

                /**
                 * Verifies a DecCoin message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DecCoin message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DecCoin
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.base.v1beta1.DecCoin;

                /**
                 * Creates a plain object from a DecCoin message. Also converts values to other types if specified.
                 * @param message DecCoin
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.base.v1beta1.DecCoin, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DecCoin to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an IntProto. */
            interface IIntProto {

                /** IntProto int */
                int?: (string|null);
            }

            /** Represents an IntProto. */
            class IntProto implements IIntProto {

                /**
                 * Constructs a new IntProto.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.base.v1beta1.IIntProto);

                /** IntProto int. */
                public int: string;

                /**
                 * Encodes the specified IntProto message. Does not implicitly {@link cosmos.base.v1beta1.IntProto.verify|verify} messages.
                 * @param message IntProto message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.base.v1beta1.IIntProto, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified IntProto message, length delimited. Does not implicitly {@link cosmos.base.v1beta1.IntProto.verify|verify} messages.
                 * @param message IntProto message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.base.v1beta1.IIntProto, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an IntProto message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns IntProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.v1beta1.IntProto;

                /**
                 * Decodes an IntProto message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns IntProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.v1beta1.IntProto;

                /**
                 * Verifies an IntProto message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an IntProto message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns IntProto
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.base.v1beta1.IntProto;

                /**
                 * Creates a plain object from an IntProto message. Also converts values to other types if specified.
                 * @param message IntProto
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.base.v1beta1.IntProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this IntProto to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a DecProto. */
            interface IDecProto {

                /** DecProto dec */
                dec?: (string|null);
            }

            /** Represents a DecProto. */
            class DecProto implements IDecProto {

                /**
                 * Constructs a new DecProto.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.base.v1beta1.IDecProto);

                /** DecProto dec. */
                public dec: string;

                /**
                 * Encodes the specified DecProto message. Does not implicitly {@link cosmos.base.v1beta1.DecProto.verify|verify} messages.
                 * @param message DecProto message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.base.v1beta1.IDecProto, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DecProto message, length delimited. Does not implicitly {@link cosmos.base.v1beta1.DecProto.verify|verify} messages.
                 * @param message DecProto message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.base.v1beta1.IDecProto, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DecProto message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DecProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.v1beta1.DecProto;

                /**
                 * Decodes a DecProto message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DecProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.v1beta1.DecProto;

                /**
                 * Verifies a DecProto message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DecProto message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DecProto
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.base.v1beta1.DecProto;

                /**
                 * Creates a plain object from a DecProto message. Also converts values to other types if specified.
                 * @param message DecProto
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.base.v1beta1.DecProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DecProto to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Namespace query. */
        namespace query {

            /** Namespace v1beta1. */
            namespace v1beta1 {

                /** Properties of a PageRequest. */
                interface IPageRequest {

                    /** PageRequest key */
                    key?: (Uint8Array|null);

                    /** PageRequest offset */
                    offset?: (Long|null);

                    /** PageRequest limit */
                    limit?: (Long|null);

                    /** PageRequest count_total */
                    count_total?: (boolean|null);

                    /** PageRequest reverse */
                    reverse?: (boolean|null);
                }

                /** Represents a PageRequest. */
                class PageRequest implements IPageRequest {

                    /**
                     * Constructs a new PageRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.query.v1beta1.IPageRequest);

                    /** PageRequest key. */
                    public key: Uint8Array;

                    /** PageRequest offset. */
                    public offset: Long;

                    /** PageRequest limit. */
                    public limit: Long;

                    /** PageRequest count_total. */
                    public count_total: boolean;

                    /** PageRequest reverse. */
                    public reverse: boolean;

                    /**
                     * Encodes the specified PageRequest message. Does not implicitly {@link cosmos.base.query.v1beta1.PageRequest.verify|verify} messages.
                     * @param message PageRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.query.v1beta1.IPageRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified PageRequest message, length delimited. Does not implicitly {@link cosmos.base.query.v1beta1.PageRequest.verify|verify} messages.
                     * @param message PageRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.query.v1beta1.IPageRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a PageRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns PageRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.query.v1beta1.PageRequest;

                    /**
                     * Decodes a PageRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns PageRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.query.v1beta1.PageRequest;

                    /**
                     * Verifies a PageRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a PageRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns PageRequest
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.query.v1beta1.PageRequest;

                    /**
                     * Creates a plain object from a PageRequest message. Also converts values to other types if specified.
                     * @param message PageRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.query.v1beta1.PageRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this PageRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a PageResponse. */
                interface IPageResponse {

                    /** PageResponse next_key */
                    next_key?: (Uint8Array|null);

                    /** PageResponse total */
                    total?: (Long|null);
                }

                /** Represents a PageResponse. */
                class PageResponse implements IPageResponse {

                    /**
                     * Constructs a new PageResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: cosmos.base.query.v1beta1.IPageResponse);

                    /** PageResponse next_key. */
                    public next_key: Uint8Array;

                    /** PageResponse total. */
                    public total: Long;

                    /**
                     * Encodes the specified PageResponse message. Does not implicitly {@link cosmos.base.query.v1beta1.PageResponse.verify|verify} messages.
                     * @param message PageResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: cosmos.base.query.v1beta1.IPageResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified PageResponse message, length delimited. Does not implicitly {@link cosmos.base.query.v1beta1.PageResponse.verify|verify} messages.
                     * @param message PageResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: cosmos.base.query.v1beta1.IPageResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a PageResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns PageResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.base.query.v1beta1.PageResponse;

                    /**
                     * Decodes a PageResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns PageResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.base.query.v1beta1.PageResponse;

                    /**
                     * Verifies a PageResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a PageResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns PageResponse
                     */
                    public static fromObject(object: { [k: string]: any }): cosmos.base.query.v1beta1.PageResponse;

                    /**
                     * Creates a plain object from a PageResponse message. Also converts values to other types if specified.
                     * @param message PageResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: cosmos.base.query.v1beta1.PageResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this PageResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }
        }
    }

    /** Namespace upgrade. */
    namespace upgrade {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a Plan. */
            interface IPlan {

                /** Plan name */
                name?: (string|null);

                /** Plan time */
                time?: (google.protobuf.ITimestamp|null);

                /** Plan height */
                height?: (Long|null);

                /** Plan info */
                info?: (string|null);

                /** Plan upgraded_client_state */
                upgraded_client_state?: (google.protobuf.IAny|null);
            }

            /** Represents a Plan. */
            class Plan implements IPlan {

                /**
                 * Constructs a new Plan.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.upgrade.v1beta1.IPlan);

                /** Plan name. */
                public name: string;

                /** Plan time. */
                public time?: (google.protobuf.ITimestamp|null);

                /** Plan height. */
                public height: Long;

                /** Plan info. */
                public info: string;

                /** Plan upgraded_client_state. */
                public upgraded_client_state?: (google.protobuf.IAny|null);

                /**
                 * Encodes the specified Plan message. Does not implicitly {@link cosmos.upgrade.v1beta1.Plan.verify|verify} messages.
                 * @param message Plan message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.upgrade.v1beta1.IPlan, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Plan message, length delimited. Does not implicitly {@link cosmos.upgrade.v1beta1.Plan.verify|verify} messages.
                 * @param message Plan message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.upgrade.v1beta1.IPlan, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Plan message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Plan
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.upgrade.v1beta1.Plan;

                /**
                 * Decodes a Plan message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Plan
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.upgrade.v1beta1.Plan;

                /**
                 * Verifies a Plan message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Plan message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Plan
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.upgrade.v1beta1.Plan;

                /**
                 * Creates a plain object from a Plan message. Also converts values to other types if specified.
                 * @param message Plan
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.upgrade.v1beta1.Plan, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Plan to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a SoftwareUpgradeProposal. */
            interface ISoftwareUpgradeProposal {

                /** SoftwareUpgradeProposal title */
                title?: (string|null);

                /** SoftwareUpgradeProposal description */
                description?: (string|null);

                /** SoftwareUpgradeProposal plan */
                plan?: (cosmos.upgrade.v1beta1.IPlan|null);
            }

            /** Represents a SoftwareUpgradeProposal. */
            class SoftwareUpgradeProposal implements ISoftwareUpgradeProposal {

                /**
                 * Constructs a new SoftwareUpgradeProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.upgrade.v1beta1.ISoftwareUpgradeProposal);

                /** SoftwareUpgradeProposal title. */
                public title: string;

                /** SoftwareUpgradeProposal description. */
                public description: string;

                /** SoftwareUpgradeProposal plan. */
                public plan?: (cosmos.upgrade.v1beta1.IPlan|null);

                /**
                 * Encodes the specified SoftwareUpgradeProposal message. Does not implicitly {@link cosmos.upgrade.v1beta1.SoftwareUpgradeProposal.verify|verify} messages.
                 * @param message SoftwareUpgradeProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.upgrade.v1beta1.ISoftwareUpgradeProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SoftwareUpgradeProposal message, length delimited. Does not implicitly {@link cosmos.upgrade.v1beta1.SoftwareUpgradeProposal.verify|verify} messages.
                 * @param message SoftwareUpgradeProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.upgrade.v1beta1.ISoftwareUpgradeProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SoftwareUpgradeProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SoftwareUpgradeProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.upgrade.v1beta1.SoftwareUpgradeProposal;

                /**
                 * Decodes a SoftwareUpgradeProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SoftwareUpgradeProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.upgrade.v1beta1.SoftwareUpgradeProposal;

                /**
                 * Verifies a SoftwareUpgradeProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SoftwareUpgradeProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SoftwareUpgradeProposal
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.upgrade.v1beta1.SoftwareUpgradeProposal;

                /**
                 * Creates a plain object from a SoftwareUpgradeProposal message. Also converts values to other types if specified.
                 * @param message SoftwareUpgradeProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.upgrade.v1beta1.SoftwareUpgradeProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SoftwareUpgradeProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a CancelSoftwareUpgradeProposal. */
            interface ICancelSoftwareUpgradeProposal {

                /** CancelSoftwareUpgradeProposal title */
                title?: (string|null);

                /** CancelSoftwareUpgradeProposal description */
                description?: (string|null);
            }

            /** Represents a CancelSoftwareUpgradeProposal. */
            class CancelSoftwareUpgradeProposal implements ICancelSoftwareUpgradeProposal {

                /**
                 * Constructs a new CancelSoftwareUpgradeProposal.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.upgrade.v1beta1.ICancelSoftwareUpgradeProposal);

                /** CancelSoftwareUpgradeProposal title. */
                public title: string;

                /** CancelSoftwareUpgradeProposal description. */
                public description: string;

                /**
                 * Encodes the specified CancelSoftwareUpgradeProposal message. Does not implicitly {@link cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal.verify|verify} messages.
                 * @param message CancelSoftwareUpgradeProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.upgrade.v1beta1.ICancelSoftwareUpgradeProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CancelSoftwareUpgradeProposal message, length delimited. Does not implicitly {@link cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal.verify|verify} messages.
                 * @param message CancelSoftwareUpgradeProposal message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.upgrade.v1beta1.ICancelSoftwareUpgradeProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CancelSoftwareUpgradeProposal message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CancelSoftwareUpgradeProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal;

                /**
                 * Decodes a CancelSoftwareUpgradeProposal message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CancelSoftwareUpgradeProposal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal;

                /**
                 * Verifies a CancelSoftwareUpgradeProposal message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CancelSoftwareUpgradeProposal message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CancelSoftwareUpgradeProposal
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal;

                /**
                 * Creates a plain object from a CancelSoftwareUpgradeProposal message. Also converts values to other types if specified.
                 * @param message CancelSoftwareUpgradeProposal
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CancelSoftwareUpgradeProposal to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ModuleVersion. */
            interface IModuleVersion {

                /** ModuleVersion name */
                name?: (string|null);

                /** ModuleVersion version */
                version?: (Long|null);
            }

            /** Represents a ModuleVersion. */
            class ModuleVersion implements IModuleVersion {

                /**
                 * Constructs a new ModuleVersion.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.upgrade.v1beta1.IModuleVersion);

                /** ModuleVersion name. */
                public name: string;

                /** ModuleVersion version. */
                public version: Long;

                /**
                 * Encodes the specified ModuleVersion message. Does not implicitly {@link cosmos.upgrade.v1beta1.ModuleVersion.verify|verify} messages.
                 * @param message ModuleVersion message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.upgrade.v1beta1.IModuleVersion, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ModuleVersion message, length delimited. Does not implicitly {@link cosmos.upgrade.v1beta1.ModuleVersion.verify|verify} messages.
                 * @param message ModuleVersion message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.upgrade.v1beta1.IModuleVersion, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ModuleVersion message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ModuleVersion
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.upgrade.v1beta1.ModuleVersion;

                /**
                 * Decodes a ModuleVersion message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ModuleVersion
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.upgrade.v1beta1.ModuleVersion;

                /**
                 * Verifies a ModuleVersion message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ModuleVersion message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ModuleVersion
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.upgrade.v1beta1.ModuleVersion;

                /**
                 * Creates a plain object from a ModuleVersion message. Also converts values to other types if specified.
                 * @param message ModuleVersion
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.upgrade.v1beta1.ModuleVersion, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ModuleVersion to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace auth. */
    namespace auth {

        /** Namespace v1beta1. */
        namespace v1beta1 {

            /** Properties of a BaseAccount. */
            interface IBaseAccount {

                /** BaseAccount address */
                address?: (string|null);

                /** BaseAccount pub_key */
                pub_key?: (google.protobuf.IAny|null);

                /** BaseAccount account_number */
                account_number?: (Long|null);

                /** BaseAccount sequence */
                sequence?: (Long|null);
            }

            /** Represents a BaseAccount. */
            class BaseAccount implements IBaseAccount {

                /**
                 * Constructs a new BaseAccount.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.auth.v1beta1.IBaseAccount);

                /** BaseAccount address. */
                public address: string;

                /** BaseAccount pub_key. */
                public pub_key?: (google.protobuf.IAny|null);

                /** BaseAccount account_number. */
                public account_number: Long;

                /** BaseAccount sequence. */
                public sequence: Long;

                /**
                 * Encodes the specified BaseAccount message. Does not implicitly {@link cosmos.auth.v1beta1.BaseAccount.verify|verify} messages.
                 * @param message BaseAccount message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.auth.v1beta1.IBaseAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BaseAccount message, length delimited. Does not implicitly {@link cosmos.auth.v1beta1.BaseAccount.verify|verify} messages.
                 * @param message BaseAccount message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.auth.v1beta1.IBaseAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BaseAccount message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BaseAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.auth.v1beta1.BaseAccount;

                /**
                 * Decodes a BaseAccount message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BaseAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.auth.v1beta1.BaseAccount;

                /**
                 * Verifies a BaseAccount message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BaseAccount message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BaseAccount
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.auth.v1beta1.BaseAccount;

                /**
                 * Creates a plain object from a BaseAccount message. Also converts values to other types if specified.
                 * @param message BaseAccount
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.auth.v1beta1.BaseAccount, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BaseAccount to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ModuleAccount. */
            interface IModuleAccount {

                /** ModuleAccount base_account */
                base_account?: (cosmos.auth.v1beta1.IBaseAccount|null);

                /** ModuleAccount name */
                name?: (string|null);

                /** ModuleAccount permissions */
                permissions?: (string[]|null);
            }

            /** Represents a ModuleAccount. */
            class ModuleAccount implements IModuleAccount {

                /**
                 * Constructs a new ModuleAccount.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.auth.v1beta1.IModuleAccount);

                /** ModuleAccount base_account. */
                public base_account?: (cosmos.auth.v1beta1.IBaseAccount|null);

                /** ModuleAccount name. */
                public name: string;

                /** ModuleAccount permissions. */
                public permissions: string[];

                /**
                 * Encodes the specified ModuleAccount message. Does not implicitly {@link cosmos.auth.v1beta1.ModuleAccount.verify|verify} messages.
                 * @param message ModuleAccount message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.auth.v1beta1.IModuleAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ModuleAccount message, length delimited. Does not implicitly {@link cosmos.auth.v1beta1.ModuleAccount.verify|verify} messages.
                 * @param message ModuleAccount message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.auth.v1beta1.IModuleAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ModuleAccount message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ModuleAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.auth.v1beta1.ModuleAccount;

                /**
                 * Decodes a ModuleAccount message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ModuleAccount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.auth.v1beta1.ModuleAccount;

                /**
                 * Verifies a ModuleAccount message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ModuleAccount message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ModuleAccount
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.auth.v1beta1.ModuleAccount;

                /**
                 * Creates a plain object from a ModuleAccount message. Also converts values to other types if specified.
                 * @param message ModuleAccount
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.auth.v1beta1.ModuleAccount, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ModuleAccount to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ModuleCredential. */
            interface IModuleCredential {

                /** ModuleCredential module_name */
                module_name?: (string|null);

                /** ModuleCredential derivation_keys */
                derivation_keys?: (Uint8Array[]|null);
            }

            /** Represents a ModuleCredential. */
            class ModuleCredential implements IModuleCredential {

                /**
                 * Constructs a new ModuleCredential.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.auth.v1beta1.IModuleCredential);

                /** ModuleCredential module_name. */
                public module_name: string;

                /** ModuleCredential derivation_keys. */
                public derivation_keys: Uint8Array[];

                /**
                 * Encodes the specified ModuleCredential message. Does not implicitly {@link cosmos.auth.v1beta1.ModuleCredential.verify|verify} messages.
                 * @param message ModuleCredential message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.auth.v1beta1.IModuleCredential, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ModuleCredential message, length delimited. Does not implicitly {@link cosmos.auth.v1beta1.ModuleCredential.verify|verify} messages.
                 * @param message ModuleCredential message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.auth.v1beta1.IModuleCredential, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ModuleCredential message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ModuleCredential
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.auth.v1beta1.ModuleCredential;

                /**
                 * Decodes a ModuleCredential message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ModuleCredential
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.auth.v1beta1.ModuleCredential;

                /**
                 * Verifies a ModuleCredential message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ModuleCredential message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ModuleCredential
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.auth.v1beta1.ModuleCredential;

                /**
                 * Creates a plain object from a ModuleCredential message. Also converts values to other types if specified.
                 * @param message ModuleCredential
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.auth.v1beta1.ModuleCredential, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ModuleCredential to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a Params. */
            interface IParams {

                /** Params max_memo_characters */
                max_memo_characters?: (Long|null);

                /** Params tx_sig_limit */
                tx_sig_limit?: (Long|null);

                /** Params tx_size_cost_per_byte */
                tx_size_cost_per_byte?: (Long|null);

                /** Params sig_verify_cost_ed25519 */
                sig_verify_cost_ed25519?: (Long|null);

                /** Params sig_verify_cost_secp256k1 */
                sig_verify_cost_secp256k1?: (Long|null);
            }

            /** Represents a Params. */
            class Params implements IParams {

                /**
                 * Constructs a new Params.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.auth.v1beta1.IParams);

                /** Params max_memo_characters. */
                public max_memo_characters: Long;

                /** Params tx_sig_limit. */
                public tx_sig_limit: Long;

                /** Params tx_size_cost_per_byte. */
                public tx_size_cost_per_byte: Long;

                /** Params sig_verify_cost_ed25519. */
                public sig_verify_cost_ed25519: Long;

                /** Params sig_verify_cost_secp256k1. */
                public sig_verify_cost_secp256k1: Long;

                /**
                 * Encodes the specified Params message. Does not implicitly {@link cosmos.auth.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.auth.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Params message, length delimited. Does not implicitly {@link cosmos.auth.v1beta1.Params.verify|verify} messages.
                 * @param message Params message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.auth.v1beta1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Params message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.auth.v1beta1.Params;

                /**
                 * Decodes a Params message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Params
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.auth.v1beta1.Params;

                /**
                 * Verifies a Params message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Params message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Params
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.auth.v1beta1.Params;

                /**
                 * Creates a plain object from a Params message. Also converts values to other types if specified.
                 * @param message Params
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.auth.v1beta1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Params to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace ics23. */
    namespace ics23 {

        /** Namespace v1. */
        namespace v1 {

            /** HashOp enum. */
            enum HashOp {
                NO_HASH = 0,
                SHA256 = 1,
                SHA512 = 2,
                KECCAK = 3,
                RIPEMD160 = 4,
                BITCOIN = 5,
                SHA512_256 = 6
            }

            /**
             * LengthOp defines how to process the key and value of the LeafOp
             * to include length information. After encoding the length with the given
             * algorithm, the length will be prepended to the key and value bytes.
             * (Each one with it's own encoded length)
             */
            enum LengthOp {
                NO_PREFIX = 0,
                VAR_PROTO = 1,
                VAR_RLP = 2,
                FIXED32_BIG = 3,
                FIXED32_LITTLE = 4,
                FIXED64_BIG = 5,
                FIXED64_LITTLE = 6,
                REQUIRE_32_BYTES = 7,
                REQUIRE_64_BYTES = 8
            }

            /** Properties of an ExistenceProof. */
            interface IExistenceProof {

                /** ExistenceProof key */
                key?: (Uint8Array|null);

                /** ExistenceProof value */
                value?: (Uint8Array|null);

                /** ExistenceProof leaf */
                leaf?: (cosmos.ics23.v1.ILeafOp|null);

                /** ExistenceProof path */
                path?: (cosmos.ics23.v1.IInnerOp[]|null);
            }

            /**
             * ExistenceProof takes a key and a value and a set of steps to perform on it.
             * The result of peforming all these steps will provide a "root hash", which can
             * be compared to the value in a header.
             *
             * Since it is computationally infeasible to produce a hash collission for any of the used
             * cryptographic hash functions, if someone can provide a series of operations to transform
             * a given key and value into a root hash that matches some trusted root, these key and values
             * must be in the referenced merkle tree.
             *
             * The only possible issue is maliablity in LeafOp, such as providing extra prefix data,
             * which should be controlled by a spec. Eg. with lengthOp as NONE,
             * prefix = FOO, key = BAR, value = CHOICE
             * and
             * prefix = F, key = OOBAR, value = CHOICE
             * would produce the same value.
             *
             * With LengthOp this is tricker but not impossible. Which is why the "leafPrefixEqual" field
             * in the ProofSpec is valuable to prevent this mutability. And why all trees should
             * length-prefix the data before hashing it.
             */
            class ExistenceProof implements IExistenceProof {

                /**
                 * Constructs a new ExistenceProof.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.ics23.v1.IExistenceProof);

                /** ExistenceProof key. */
                public key: Uint8Array;

                /** ExistenceProof value. */
                public value: Uint8Array;

                /** ExistenceProof leaf. */
                public leaf?: (cosmos.ics23.v1.ILeafOp|null);

                /** ExistenceProof path. */
                public path: cosmos.ics23.v1.IInnerOp[];

                /**
                 * Encodes the specified ExistenceProof message. Does not implicitly {@link cosmos.ics23.v1.ExistenceProof.verify|verify} messages.
                 * @param message ExistenceProof message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.ics23.v1.IExistenceProof, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ExistenceProof message, length delimited. Does not implicitly {@link cosmos.ics23.v1.ExistenceProof.verify|verify} messages.
                 * @param message ExistenceProof message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.ics23.v1.IExistenceProof, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an ExistenceProof message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExistenceProof
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.ics23.v1.ExistenceProof;

                /**
                 * Decodes an ExistenceProof message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExistenceProof
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.ics23.v1.ExistenceProof;

                /**
                 * Verifies an ExistenceProof message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExistenceProof message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExistenceProof
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.ics23.v1.ExistenceProof;

                /**
                 * Creates a plain object from an ExistenceProof message. Also converts values to other types if specified.
                 * @param message ExistenceProof
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.ics23.v1.ExistenceProof, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExistenceProof to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a NonExistenceProof. */
            interface INonExistenceProof {

                /** NonExistenceProof key */
                key?: (Uint8Array|null);

                /** NonExistenceProof left */
                left?: (cosmos.ics23.v1.IExistenceProof|null);

                /** NonExistenceProof right */
                right?: (cosmos.ics23.v1.IExistenceProof|null);
            }

            /** Represents a NonExistenceProof. */
            class NonExistenceProof implements INonExistenceProof {

                /**
                 * Constructs a new NonExistenceProof.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.ics23.v1.INonExistenceProof);

                /** NonExistenceProof key. */
                public key: Uint8Array;

                /** NonExistenceProof left. */
                public left?: (cosmos.ics23.v1.IExistenceProof|null);

                /** NonExistenceProof right. */
                public right?: (cosmos.ics23.v1.IExistenceProof|null);

                /**
                 * Encodes the specified NonExistenceProof message. Does not implicitly {@link cosmos.ics23.v1.NonExistenceProof.verify|verify} messages.
                 * @param message NonExistenceProof message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.ics23.v1.INonExistenceProof, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified NonExistenceProof message, length delimited. Does not implicitly {@link cosmos.ics23.v1.NonExistenceProof.verify|verify} messages.
                 * @param message NonExistenceProof message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.ics23.v1.INonExistenceProof, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a NonExistenceProof message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns NonExistenceProof
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.ics23.v1.NonExistenceProof;

                /**
                 * Decodes a NonExistenceProof message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns NonExistenceProof
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.ics23.v1.NonExistenceProof;

                /**
                 * Verifies a NonExistenceProof message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a NonExistenceProof message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns NonExistenceProof
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.ics23.v1.NonExistenceProof;

                /**
                 * Creates a plain object from a NonExistenceProof message. Also converts values to other types if specified.
                 * @param message NonExistenceProof
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.ics23.v1.NonExistenceProof, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this NonExistenceProof to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a CommitmentProof. */
            interface ICommitmentProof {

                /** CommitmentProof exist */
                exist?: (cosmos.ics23.v1.IExistenceProof|null);

                /** CommitmentProof nonexist */
                nonexist?: (cosmos.ics23.v1.INonExistenceProof|null);

                /** CommitmentProof batch */
                batch?: (cosmos.ics23.v1.IBatchProof|null);

                /** CommitmentProof compressed */
                compressed?: (cosmos.ics23.v1.ICompressedBatchProof|null);
            }

            /** Represents a CommitmentProof. */
            class CommitmentProof implements ICommitmentProof {

                /**
                 * Constructs a new CommitmentProof.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.ics23.v1.ICommitmentProof);

                /** CommitmentProof exist. */
                public exist?: (cosmos.ics23.v1.IExistenceProof|null);

                /** CommitmentProof nonexist. */
                public nonexist?: (cosmos.ics23.v1.INonExistenceProof|null);

                /** CommitmentProof batch. */
                public batch?: (cosmos.ics23.v1.IBatchProof|null);

                /** CommitmentProof compressed. */
                public compressed?: (cosmos.ics23.v1.ICompressedBatchProof|null);

                /** CommitmentProof proof. */
                public proof?: ("exist"|"nonexist"|"batch"|"compressed");

                /**
                 * Encodes the specified CommitmentProof message. Does not implicitly {@link cosmos.ics23.v1.CommitmentProof.verify|verify} messages.
                 * @param message CommitmentProof message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.ics23.v1.ICommitmentProof, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CommitmentProof message, length delimited. Does not implicitly {@link cosmos.ics23.v1.CommitmentProof.verify|verify} messages.
                 * @param message CommitmentProof message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.ics23.v1.ICommitmentProof, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CommitmentProof message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CommitmentProof
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.ics23.v1.CommitmentProof;

                /**
                 * Decodes a CommitmentProof message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CommitmentProof
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.ics23.v1.CommitmentProof;

                /**
                 * Verifies a CommitmentProof message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CommitmentProof message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CommitmentProof
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.ics23.v1.CommitmentProof;

                /**
                 * Creates a plain object from a CommitmentProof message. Also converts values to other types if specified.
                 * @param message CommitmentProof
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.ics23.v1.CommitmentProof, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CommitmentProof to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a LeafOp. */
            interface ILeafOp {

                /** LeafOp hash */
                hash?: (cosmos.ics23.v1.HashOp|null);

                /** LeafOp prehash_key */
                prehash_key?: (cosmos.ics23.v1.HashOp|null);

                /** LeafOp prehash_value */
                prehash_value?: (cosmos.ics23.v1.HashOp|null);

                /** LeafOp length */
                length?: (cosmos.ics23.v1.LengthOp|null);

                /** LeafOp prefix */
                prefix?: (Uint8Array|null);
            }

            /**
             * LeafOp represents the raw key-value data we wish to prove, and
             * must be flexible to represent the internal transformation from
             * the original key-value pairs into the basis hash, for many existing
             * merkle trees.
             *
             * key and value are passed in. So that the signature of this operation is:
             * leafOp(key, value) -> output
             *
             * To process this, first prehash the keys and values if needed (ANY means no hash in this case):
             * hkey = prehashKey(key)
             * hvalue = prehashValue(value)
             *
             * Then combine the bytes, and hash it
             * output = hash(prefix || length(hkey) || hkey || length(hvalue) || hvalue)
             */
            class LeafOp implements ILeafOp {

                /**
                 * Constructs a new LeafOp.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.ics23.v1.ILeafOp);

                /** LeafOp hash. */
                public hash: cosmos.ics23.v1.HashOp;

                /** LeafOp prehash_key. */
                public prehash_key: cosmos.ics23.v1.HashOp;

                /** LeafOp prehash_value. */
                public prehash_value: cosmos.ics23.v1.HashOp;

                /** LeafOp length. */
                public length: cosmos.ics23.v1.LengthOp;

                /** LeafOp prefix. */
                public prefix: Uint8Array;

                /**
                 * Encodes the specified LeafOp message. Does not implicitly {@link cosmos.ics23.v1.LeafOp.verify|verify} messages.
                 * @param message LeafOp message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.ics23.v1.ILeafOp, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified LeafOp message, length delimited. Does not implicitly {@link cosmos.ics23.v1.LeafOp.verify|verify} messages.
                 * @param message LeafOp message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.ics23.v1.ILeafOp, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a LeafOp message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns LeafOp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.ics23.v1.LeafOp;

                /**
                 * Decodes a LeafOp message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns LeafOp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.ics23.v1.LeafOp;

                /**
                 * Verifies a LeafOp message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a LeafOp message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns LeafOp
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.ics23.v1.LeafOp;

                /**
                 * Creates a plain object from a LeafOp message. Also converts values to other types if specified.
                 * @param message LeafOp
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.ics23.v1.LeafOp, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this LeafOp to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an InnerOp. */
            interface IInnerOp {

                /** InnerOp hash */
                hash?: (cosmos.ics23.v1.HashOp|null);

                /** InnerOp prefix */
                prefix?: (Uint8Array|null);

                /** InnerOp suffix */
                suffix?: (Uint8Array|null);
            }

            /**
             * InnerOp represents a merkle-proof step that is not a leaf.
             * It represents concatenating two children and hashing them to provide the next result.
             *
             * The result of the previous step is passed in, so the signature of this op is:
             * innerOp(child) -> output
             *
             * The result of applying InnerOp should be:
             * output = op.hash(op.prefix || child || op.suffix)
             *
             * where the || operator is concatenation of binary data,
             * and child is the result of hashing all the tree below this step.
             *
             * Any special data, like prepending child with the length, or prepending the entire operation with
             * some value to differentiate from leaf nodes, should be included in prefix and suffix.
             * If either of prefix or suffix is empty, we just treat it as an empty string
             */
            class InnerOp implements IInnerOp {

                /**
                 * Constructs a new InnerOp.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.ics23.v1.IInnerOp);

                /** InnerOp hash. */
                public hash: cosmos.ics23.v1.HashOp;

                /** InnerOp prefix. */
                public prefix: Uint8Array;

                /** InnerOp suffix. */
                public suffix: Uint8Array;

                /**
                 * Encodes the specified InnerOp message. Does not implicitly {@link cosmos.ics23.v1.InnerOp.verify|verify} messages.
                 * @param message InnerOp message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.ics23.v1.IInnerOp, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified InnerOp message, length delimited. Does not implicitly {@link cosmos.ics23.v1.InnerOp.verify|verify} messages.
                 * @param message InnerOp message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.ics23.v1.IInnerOp, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an InnerOp message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns InnerOp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.ics23.v1.InnerOp;

                /**
                 * Decodes an InnerOp message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns InnerOp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.ics23.v1.InnerOp;

                /**
                 * Verifies an InnerOp message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an InnerOp message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns InnerOp
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.ics23.v1.InnerOp;

                /**
                 * Creates a plain object from an InnerOp message. Also converts values to other types if specified.
                 * @param message InnerOp
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.ics23.v1.InnerOp, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this InnerOp to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ProofSpec. */
            interface IProofSpec {

                /** ProofSpec leaf_spec */
                leaf_spec?: (cosmos.ics23.v1.ILeafOp|null);

                /** ProofSpec inner_spec */
                inner_spec?: (cosmos.ics23.v1.IInnerSpec|null);

                /** ProofSpec max_depth */
                max_depth?: (number|null);

                /** ProofSpec min_depth */
                min_depth?: (number|null);
            }

            /**
             * ProofSpec defines what the expected parameters are for a given proof type.
             * This can be stored in the client and used to validate any incoming proofs.
             *
             * verify(ProofSpec, Proof) -> Proof | Error
             *
             * As demonstrated in tests, if we don't fix the algorithm used to calculate the
             * LeafHash for a given tree, there are many possible key-value pairs that can
             * generate a given hash (by interpretting the preimage differently).
             * We need this for proper security, requires client knows a priori what
             * tree format server uses. But not in code, rather a configuration object.
             */
            class ProofSpec implements IProofSpec {

                /**
                 * Constructs a new ProofSpec.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.ics23.v1.IProofSpec);

                /** ProofSpec leaf_spec. */
                public leaf_spec?: (cosmos.ics23.v1.ILeafOp|null);

                /** ProofSpec inner_spec. */
                public inner_spec?: (cosmos.ics23.v1.IInnerSpec|null);

                /** ProofSpec max_depth. */
                public max_depth: number;

                /** ProofSpec min_depth. */
                public min_depth: number;

                /**
                 * Encodes the specified ProofSpec message. Does not implicitly {@link cosmos.ics23.v1.ProofSpec.verify|verify} messages.
                 * @param message ProofSpec message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.ics23.v1.IProofSpec, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ProofSpec message, length delimited. Does not implicitly {@link cosmos.ics23.v1.ProofSpec.verify|verify} messages.
                 * @param message ProofSpec message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.ics23.v1.IProofSpec, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ProofSpec message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ProofSpec
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.ics23.v1.ProofSpec;

                /**
                 * Decodes a ProofSpec message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ProofSpec
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.ics23.v1.ProofSpec;

                /**
                 * Verifies a ProofSpec message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ProofSpec message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ProofSpec
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.ics23.v1.ProofSpec;

                /**
                 * Creates a plain object from a ProofSpec message. Also converts values to other types if specified.
                 * @param message ProofSpec
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.ics23.v1.ProofSpec, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ProofSpec to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an InnerSpec. */
            interface IInnerSpec {

                /** InnerSpec child_order */
                child_order?: (number[]|null);

                /** InnerSpec child_size */
                child_size?: (number|null);

                /** InnerSpec min_prefix_length */
                min_prefix_length?: (number|null);

                /** InnerSpec max_prefix_length */
                max_prefix_length?: (number|null);

                /** InnerSpec empty_child */
                empty_child?: (Uint8Array|null);

                /** InnerSpec hash */
                hash?: (cosmos.ics23.v1.HashOp|null);
            }

            /** Represents an InnerSpec. */
            class InnerSpec implements IInnerSpec {

                /**
                 * Constructs a new InnerSpec.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.ics23.v1.IInnerSpec);

                /** InnerSpec child_order. */
                public child_order: number[];

                /** InnerSpec child_size. */
                public child_size: number;

                /** InnerSpec min_prefix_length. */
                public min_prefix_length: number;

                /** InnerSpec max_prefix_length. */
                public max_prefix_length: number;

                /** InnerSpec empty_child. */
                public empty_child: Uint8Array;

                /** InnerSpec hash. */
                public hash: cosmos.ics23.v1.HashOp;

                /**
                 * Encodes the specified InnerSpec message. Does not implicitly {@link cosmos.ics23.v1.InnerSpec.verify|verify} messages.
                 * @param message InnerSpec message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.ics23.v1.IInnerSpec, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified InnerSpec message, length delimited. Does not implicitly {@link cosmos.ics23.v1.InnerSpec.verify|verify} messages.
                 * @param message InnerSpec message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.ics23.v1.IInnerSpec, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an InnerSpec message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns InnerSpec
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.ics23.v1.InnerSpec;

                /**
                 * Decodes an InnerSpec message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns InnerSpec
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.ics23.v1.InnerSpec;

                /**
                 * Verifies an InnerSpec message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an InnerSpec message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns InnerSpec
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.ics23.v1.InnerSpec;

                /**
                 * Creates a plain object from an InnerSpec message. Also converts values to other types if specified.
                 * @param message InnerSpec
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.ics23.v1.InnerSpec, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this InnerSpec to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a BatchProof. */
            interface IBatchProof {

                /** BatchProof entries */
                entries?: (cosmos.ics23.v1.IBatchEntry[]|null);
            }

            /** Represents a BatchProof. */
            class BatchProof implements IBatchProof {

                /**
                 * Constructs a new BatchProof.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.ics23.v1.IBatchProof);

                /** BatchProof entries. */
                public entries: cosmos.ics23.v1.IBatchEntry[];

                /**
                 * Encodes the specified BatchProof message. Does not implicitly {@link cosmos.ics23.v1.BatchProof.verify|verify} messages.
                 * @param message BatchProof message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.ics23.v1.IBatchProof, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BatchProof message, length delimited. Does not implicitly {@link cosmos.ics23.v1.BatchProof.verify|verify} messages.
                 * @param message BatchProof message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.ics23.v1.IBatchProof, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BatchProof message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BatchProof
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.ics23.v1.BatchProof;

                /**
                 * Decodes a BatchProof message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BatchProof
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.ics23.v1.BatchProof;

                /**
                 * Verifies a BatchProof message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BatchProof message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BatchProof
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.ics23.v1.BatchProof;

                /**
                 * Creates a plain object from a BatchProof message. Also converts values to other types if specified.
                 * @param message BatchProof
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.ics23.v1.BatchProof, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BatchProof to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a BatchEntry. */
            interface IBatchEntry {

                /** BatchEntry exist */
                exist?: (cosmos.ics23.v1.IExistenceProof|null);

                /** BatchEntry nonexist */
                nonexist?: (cosmos.ics23.v1.INonExistenceProof|null);
            }

            /** Represents a BatchEntry. */
            class BatchEntry implements IBatchEntry {

                /**
                 * Constructs a new BatchEntry.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.ics23.v1.IBatchEntry);

                /** BatchEntry exist. */
                public exist?: (cosmos.ics23.v1.IExistenceProof|null);

                /** BatchEntry nonexist. */
                public nonexist?: (cosmos.ics23.v1.INonExistenceProof|null);

                /** BatchEntry proof. */
                public proof?: ("exist"|"nonexist");

                /**
                 * Encodes the specified BatchEntry message. Does not implicitly {@link cosmos.ics23.v1.BatchEntry.verify|verify} messages.
                 * @param message BatchEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.ics23.v1.IBatchEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BatchEntry message, length delimited. Does not implicitly {@link cosmos.ics23.v1.BatchEntry.verify|verify} messages.
                 * @param message BatchEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.ics23.v1.IBatchEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BatchEntry message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BatchEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.ics23.v1.BatchEntry;

                /**
                 * Decodes a BatchEntry message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BatchEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.ics23.v1.BatchEntry;

                /**
                 * Verifies a BatchEntry message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BatchEntry message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BatchEntry
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.ics23.v1.BatchEntry;

                /**
                 * Creates a plain object from a BatchEntry message. Also converts values to other types if specified.
                 * @param message BatchEntry
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.ics23.v1.BatchEntry, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BatchEntry to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a CompressedBatchProof. */
            interface ICompressedBatchProof {

                /** CompressedBatchProof entries */
                entries?: (cosmos.ics23.v1.ICompressedBatchEntry[]|null);

                /** CompressedBatchProof lookup_inners */
                lookup_inners?: (cosmos.ics23.v1.IInnerOp[]|null);
            }

            /** Represents a CompressedBatchProof. */
            class CompressedBatchProof implements ICompressedBatchProof {

                /**
                 * Constructs a new CompressedBatchProof.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.ics23.v1.ICompressedBatchProof);

                /** CompressedBatchProof entries. */
                public entries: cosmos.ics23.v1.ICompressedBatchEntry[];

                /** CompressedBatchProof lookup_inners. */
                public lookup_inners: cosmos.ics23.v1.IInnerOp[];

                /**
                 * Encodes the specified CompressedBatchProof message. Does not implicitly {@link cosmos.ics23.v1.CompressedBatchProof.verify|verify} messages.
                 * @param message CompressedBatchProof message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.ics23.v1.ICompressedBatchProof, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CompressedBatchProof message, length delimited. Does not implicitly {@link cosmos.ics23.v1.CompressedBatchProof.verify|verify} messages.
                 * @param message CompressedBatchProof message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.ics23.v1.ICompressedBatchProof, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CompressedBatchProof message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CompressedBatchProof
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.ics23.v1.CompressedBatchProof;

                /**
                 * Decodes a CompressedBatchProof message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CompressedBatchProof
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.ics23.v1.CompressedBatchProof;

                /**
                 * Verifies a CompressedBatchProof message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CompressedBatchProof message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CompressedBatchProof
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.ics23.v1.CompressedBatchProof;

                /**
                 * Creates a plain object from a CompressedBatchProof message. Also converts values to other types if specified.
                 * @param message CompressedBatchProof
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.ics23.v1.CompressedBatchProof, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CompressedBatchProof to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a CompressedBatchEntry. */
            interface ICompressedBatchEntry {

                /** CompressedBatchEntry exist */
                exist?: (cosmos.ics23.v1.ICompressedExistenceProof|null);

                /** CompressedBatchEntry nonexist */
                nonexist?: (cosmos.ics23.v1.ICompressedNonExistenceProof|null);
            }

            /** Represents a CompressedBatchEntry. */
            class CompressedBatchEntry implements ICompressedBatchEntry {

                /**
                 * Constructs a new CompressedBatchEntry.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.ics23.v1.ICompressedBatchEntry);

                /** CompressedBatchEntry exist. */
                public exist?: (cosmos.ics23.v1.ICompressedExistenceProof|null);

                /** CompressedBatchEntry nonexist. */
                public nonexist?: (cosmos.ics23.v1.ICompressedNonExistenceProof|null);

                /** CompressedBatchEntry proof. */
                public proof?: ("exist"|"nonexist");

                /**
                 * Encodes the specified CompressedBatchEntry message. Does not implicitly {@link cosmos.ics23.v1.CompressedBatchEntry.verify|verify} messages.
                 * @param message CompressedBatchEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.ics23.v1.ICompressedBatchEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CompressedBatchEntry message, length delimited. Does not implicitly {@link cosmos.ics23.v1.CompressedBatchEntry.verify|verify} messages.
                 * @param message CompressedBatchEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.ics23.v1.ICompressedBatchEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CompressedBatchEntry message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CompressedBatchEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.ics23.v1.CompressedBatchEntry;

                /**
                 * Decodes a CompressedBatchEntry message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CompressedBatchEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.ics23.v1.CompressedBatchEntry;

                /**
                 * Verifies a CompressedBatchEntry message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CompressedBatchEntry message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CompressedBatchEntry
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.ics23.v1.CompressedBatchEntry;

                /**
                 * Creates a plain object from a CompressedBatchEntry message. Also converts values to other types if specified.
                 * @param message CompressedBatchEntry
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.ics23.v1.CompressedBatchEntry, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CompressedBatchEntry to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a CompressedExistenceProof. */
            interface ICompressedExistenceProof {

                /** CompressedExistenceProof key */
                key?: (Uint8Array|null);

                /** CompressedExistenceProof value */
                value?: (Uint8Array|null);

                /** CompressedExistenceProof leaf */
                leaf?: (cosmos.ics23.v1.ILeafOp|null);

                /** CompressedExistenceProof path */
                path?: (number[]|null);
            }

            /** Represents a CompressedExistenceProof. */
            class CompressedExistenceProof implements ICompressedExistenceProof {

                /**
                 * Constructs a new CompressedExistenceProof.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.ics23.v1.ICompressedExistenceProof);

                /** CompressedExistenceProof key. */
                public key: Uint8Array;

                /** CompressedExistenceProof value. */
                public value: Uint8Array;

                /** CompressedExistenceProof leaf. */
                public leaf?: (cosmos.ics23.v1.ILeafOp|null);

                /** CompressedExistenceProof path. */
                public path: number[];

                /**
                 * Encodes the specified CompressedExistenceProof message. Does not implicitly {@link cosmos.ics23.v1.CompressedExistenceProof.verify|verify} messages.
                 * @param message CompressedExistenceProof message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.ics23.v1.ICompressedExistenceProof, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CompressedExistenceProof message, length delimited. Does not implicitly {@link cosmos.ics23.v1.CompressedExistenceProof.verify|verify} messages.
                 * @param message CompressedExistenceProof message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.ics23.v1.ICompressedExistenceProof, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CompressedExistenceProof message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CompressedExistenceProof
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.ics23.v1.CompressedExistenceProof;

                /**
                 * Decodes a CompressedExistenceProof message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CompressedExistenceProof
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.ics23.v1.CompressedExistenceProof;

                /**
                 * Verifies a CompressedExistenceProof message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CompressedExistenceProof message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CompressedExistenceProof
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.ics23.v1.CompressedExistenceProof;

                /**
                 * Creates a plain object from a CompressedExistenceProof message. Also converts values to other types if specified.
                 * @param message CompressedExistenceProof
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.ics23.v1.CompressedExistenceProof, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CompressedExistenceProof to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a CompressedNonExistenceProof. */
            interface ICompressedNonExistenceProof {

                /** CompressedNonExistenceProof key */
                key?: (Uint8Array|null);

                /** CompressedNonExistenceProof left */
                left?: (cosmos.ics23.v1.ICompressedExistenceProof|null);

                /** CompressedNonExistenceProof right */
                right?: (cosmos.ics23.v1.ICompressedExistenceProof|null);
            }

            /** Represents a CompressedNonExistenceProof. */
            class CompressedNonExistenceProof implements ICompressedNonExistenceProof {

                /**
                 * Constructs a new CompressedNonExistenceProof.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: cosmos.ics23.v1.ICompressedNonExistenceProof);

                /** CompressedNonExistenceProof key. */
                public key: Uint8Array;

                /** CompressedNonExistenceProof left. */
                public left?: (cosmos.ics23.v1.ICompressedExistenceProof|null);

                /** CompressedNonExistenceProof right. */
                public right?: (cosmos.ics23.v1.ICompressedExistenceProof|null);

                /**
                 * Encodes the specified CompressedNonExistenceProof message. Does not implicitly {@link cosmos.ics23.v1.CompressedNonExistenceProof.verify|verify} messages.
                 * @param message CompressedNonExistenceProof message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: cosmos.ics23.v1.ICompressedNonExistenceProof, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CompressedNonExistenceProof message, length delimited. Does not implicitly {@link cosmos.ics23.v1.CompressedNonExistenceProof.verify|verify} messages.
                 * @param message CompressedNonExistenceProof message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: cosmos.ics23.v1.ICompressedNonExistenceProof, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CompressedNonExistenceProof message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CompressedNonExistenceProof
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos.ics23.v1.CompressedNonExistenceProof;

                /**
                 * Decodes a CompressedNonExistenceProof message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CompressedNonExistenceProof
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos.ics23.v1.CompressedNonExistenceProof;

                /**
                 * Verifies a CompressedNonExistenceProof message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CompressedNonExistenceProof message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CompressedNonExistenceProof
                 */
                public static fromObject(object: { [k: string]: any }): cosmos.ics23.v1.CompressedNonExistenceProof;

                /**
                 * Creates a plain object from a CompressedNonExistenceProof message. Also converts values to other types if specified.
                 * @param message CompressedNonExistenceProof
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: cosmos.ics23.v1.CompressedNonExistenceProof, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CompressedNonExistenceProof to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }
}

/** Namespace cosmos_proto. */
export namespace cosmos_proto {

    /** Properties of an InterfaceDescriptor. */
    interface IInterfaceDescriptor {

        /** InterfaceDescriptor name */
        name?: (string|null);

        /** InterfaceDescriptor description */
        description?: (string|null);
    }

    /** Represents an InterfaceDescriptor. */
    class InterfaceDescriptor implements IInterfaceDescriptor {

        /**
         * Constructs a new InterfaceDescriptor.
         * @param [properties] Properties to set
         */
        constructor(properties?: cosmos_proto.IInterfaceDescriptor);

        /** InterfaceDescriptor name. */
        public name: string;

        /** InterfaceDescriptor description. */
        public description: string;

        /**
         * Encodes the specified InterfaceDescriptor message. Does not implicitly {@link cosmos_proto.InterfaceDescriptor.verify|verify} messages.
         * @param message InterfaceDescriptor message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: cosmos_proto.IInterfaceDescriptor, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified InterfaceDescriptor message, length delimited. Does not implicitly {@link cosmos_proto.InterfaceDescriptor.verify|verify} messages.
         * @param message InterfaceDescriptor message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: cosmos_proto.IInterfaceDescriptor, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an InterfaceDescriptor message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns InterfaceDescriptor
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos_proto.InterfaceDescriptor;

        /**
         * Decodes an InterfaceDescriptor message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns InterfaceDescriptor
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos_proto.InterfaceDescriptor;

        /**
         * Verifies an InterfaceDescriptor message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an InterfaceDescriptor message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns InterfaceDescriptor
         */
        public static fromObject(object: { [k: string]: any }): cosmos_proto.InterfaceDescriptor;

        /**
         * Creates a plain object from an InterfaceDescriptor message. Also converts values to other types if specified.
         * @param message InterfaceDescriptor
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: cosmos_proto.InterfaceDescriptor, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this InterfaceDescriptor to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ScalarDescriptor. */
    interface IScalarDescriptor {

        /** ScalarDescriptor name */
        name?: (string|null);

        /** ScalarDescriptor description */
        description?: (string|null);

        /** ScalarDescriptor field_type */
        field_type?: (cosmos_proto.ScalarType[]|null);
    }

    /** Represents a ScalarDescriptor. */
    class ScalarDescriptor implements IScalarDescriptor {

        /**
         * Constructs a new ScalarDescriptor.
         * @param [properties] Properties to set
         */
        constructor(properties?: cosmos_proto.IScalarDescriptor);

        /** ScalarDescriptor name. */
        public name: string;

        /** ScalarDescriptor description. */
        public description: string;

        /** ScalarDescriptor field_type. */
        public field_type: cosmos_proto.ScalarType[];

        /**
         * Encodes the specified ScalarDescriptor message. Does not implicitly {@link cosmos_proto.ScalarDescriptor.verify|verify} messages.
         * @param message ScalarDescriptor message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: cosmos_proto.IScalarDescriptor, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ScalarDescriptor message, length delimited. Does not implicitly {@link cosmos_proto.ScalarDescriptor.verify|verify} messages.
         * @param message ScalarDescriptor message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: cosmos_proto.IScalarDescriptor, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ScalarDescriptor message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ScalarDescriptor
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): cosmos_proto.ScalarDescriptor;

        /**
         * Decodes a ScalarDescriptor message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ScalarDescriptor
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): cosmos_proto.ScalarDescriptor;

        /**
         * Verifies a ScalarDescriptor message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ScalarDescriptor message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ScalarDescriptor
         */
        public static fromObject(object: { [k: string]: any }): cosmos_proto.ScalarDescriptor;

        /**
         * Creates a plain object from a ScalarDescriptor message. Also converts values to other types if specified.
         * @param message ScalarDescriptor
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: cosmos_proto.ScalarDescriptor, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ScalarDescriptor to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** ScalarType enum. */
    enum ScalarType {
        SCALAR_TYPE_UNSPECIFIED = 0,
        SCALAR_TYPE_STRING = 1,
        SCALAR_TYPE_BYTES = 2
    }
}

/** Namespace google. */
export namespace google {

    /** Namespace protobuf. */
    namespace protobuf {

        /** Properties of a FileDescriptorSet. */
        interface IFileDescriptorSet {

            /** FileDescriptorSet file */
            file?: (google.protobuf.IFileDescriptorProto[]|null);
        }

        /** Represents a FileDescriptorSet. */
        class FileDescriptorSet implements IFileDescriptorSet {

            /**
             * Constructs a new FileDescriptorSet.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IFileDescriptorSet);

            /** FileDescriptorSet file. */
            public file: google.protobuf.IFileDescriptorProto[];

            /**
             * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
             * @param message FileDescriptorSet message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IFileDescriptorSet, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
             * @param message FileDescriptorSet message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IFileDescriptorSet, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FileDescriptorSet message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FileDescriptorSet
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.FileDescriptorSet;

            /**
             * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FileDescriptorSet
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.FileDescriptorSet;

            /**
             * Verifies a FileDescriptorSet message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FileDescriptorSet
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.FileDescriptorSet;

            /**
             * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
             * @param message FileDescriptorSet
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.FileDescriptorSet, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FileDescriptorSet to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a FileDescriptorProto. */
        interface IFileDescriptorProto {

            /** FileDescriptorProto name */
            name?: (string|null);

            /** FileDescriptorProto package */
            "package"?: (string|null);

            /** FileDescriptorProto dependency */
            dependency?: (string[]|null);

            /** FileDescriptorProto public_dependency */
            public_dependency?: (number[]|null);

            /** FileDescriptorProto weak_dependency */
            weak_dependency?: (number[]|null);

            /** FileDescriptorProto message_type */
            message_type?: (google.protobuf.IDescriptorProto[]|null);

            /** FileDescriptorProto enum_type */
            enum_type?: (google.protobuf.IEnumDescriptorProto[]|null);

            /** FileDescriptorProto service */
            service?: (google.protobuf.IServiceDescriptorProto[]|null);

            /** FileDescriptorProto extension */
            extension?: (google.protobuf.IFieldDescriptorProto[]|null);

            /** FileDescriptorProto options */
            options?: (google.protobuf.IFileOptions|null);

            /** FileDescriptorProto source_code_info */
            source_code_info?: (google.protobuf.ISourceCodeInfo|null);

            /** FileDescriptorProto syntax */
            syntax?: (string|null);
        }

        /** Represents a FileDescriptorProto. */
        class FileDescriptorProto implements IFileDescriptorProto {

            /**
             * Constructs a new FileDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IFileDescriptorProto);

            /** FileDescriptorProto name. */
            public name: string;

            /** FileDescriptorProto package. */
            public package: string;

            /** FileDescriptorProto dependency. */
            public dependency: string[];

            /** FileDescriptorProto public_dependency. */
            public public_dependency: number[];

            /** FileDescriptorProto weak_dependency. */
            public weak_dependency: number[];

            /** FileDescriptorProto message_type. */
            public message_type: google.protobuf.IDescriptorProto[];

            /** FileDescriptorProto enum_type. */
            public enum_type: google.protobuf.IEnumDescriptorProto[];

            /** FileDescriptorProto service. */
            public service: google.protobuf.IServiceDescriptorProto[];

            /** FileDescriptorProto extension. */
            public extension: google.protobuf.IFieldDescriptorProto[];

            /** FileDescriptorProto options. */
            public options?: (google.protobuf.IFileOptions|null);

            /** FileDescriptorProto source_code_info. */
            public source_code_info?: (google.protobuf.ISourceCodeInfo|null);

            /** FileDescriptorProto syntax. */
            public syntax: string;

            /**
             * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
             * @param message FileDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IFileDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
             * @param message FileDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IFileDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FileDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FileDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.FileDescriptorProto;

            /**
             * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FileDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.FileDescriptorProto;

            /**
             * Verifies a FileDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FileDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.FileDescriptorProto;

            /**
             * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
             * @param message FileDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.FileDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FileDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a DescriptorProto. */
        interface IDescriptorProto {

            /** DescriptorProto name */
            name?: (string|null);

            /** DescriptorProto field */
            field?: (google.protobuf.IFieldDescriptorProto[]|null);

            /** DescriptorProto extension */
            extension?: (google.protobuf.IFieldDescriptorProto[]|null);

            /** DescriptorProto nested_type */
            nested_type?: (google.protobuf.IDescriptorProto[]|null);

            /** DescriptorProto enum_type */
            enum_type?: (google.protobuf.IEnumDescriptorProto[]|null);

            /** DescriptorProto extension_range */
            extension_range?: (google.protobuf.DescriptorProto.IExtensionRange[]|null);

            /** DescriptorProto oneof_decl */
            oneof_decl?: (google.protobuf.IOneofDescriptorProto[]|null);

            /** DescriptorProto options */
            options?: (google.protobuf.IMessageOptions|null);

            /** DescriptorProto reserved_range */
            reserved_range?: (google.protobuf.DescriptorProto.IReservedRange[]|null);

            /** DescriptorProto reserved_name */
            reserved_name?: (string[]|null);
        }

        /** Represents a DescriptorProto. */
        class DescriptorProto implements IDescriptorProto {

            /**
             * Constructs a new DescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IDescriptorProto);

            /** DescriptorProto name. */
            public name: string;

            /** DescriptorProto field. */
            public field: google.protobuf.IFieldDescriptorProto[];

            /** DescriptorProto extension. */
            public extension: google.protobuf.IFieldDescriptorProto[];

            /** DescriptorProto nested_type. */
            public nested_type: google.protobuf.IDescriptorProto[];

            /** DescriptorProto enum_type. */
            public enum_type: google.protobuf.IEnumDescriptorProto[];

            /** DescriptorProto extension_range. */
            public extension_range: google.protobuf.DescriptorProto.IExtensionRange[];

            /** DescriptorProto oneof_decl. */
            public oneof_decl: google.protobuf.IOneofDescriptorProto[];

            /** DescriptorProto options. */
            public options?: (google.protobuf.IMessageOptions|null);

            /** DescriptorProto reserved_range. */
            public reserved_range: google.protobuf.DescriptorProto.IReservedRange[];

            /** DescriptorProto reserved_name. */
            public reserved_name: string[];

            /**
             * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
             * @param message DescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
             * @param message DescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.DescriptorProto;

            /**
             * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.DescriptorProto;

            /**
             * Verifies a DescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.DescriptorProto;

            /**
             * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
             * @param message DescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.DescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace DescriptorProto {

            /** Properties of an ExtensionRange. */
            interface IExtensionRange {

                /** ExtensionRange start */
                start?: (number|null);

                /** ExtensionRange end */
                end?: (number|null);
            }

            /** Represents an ExtensionRange. */
            class ExtensionRange implements IExtensionRange {

                /**
                 * Constructs a new ExtensionRange.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: google.protobuf.DescriptorProto.IExtensionRange);

                /** ExtensionRange start. */
                public start: number;

                /** ExtensionRange end. */
                public end: number;

                /**
                 * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                 * @param message ExtensionRange message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: google.protobuf.DescriptorProto.IExtensionRange, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                 * @param message ExtensionRange message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: google.protobuf.DescriptorProto.IExtensionRange, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an ExtensionRange message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtensionRange
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.DescriptorProto.ExtensionRange;

                /**
                 * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtensionRange
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.DescriptorProto.ExtensionRange;

                /**
                 * Verifies an ExtensionRange message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtensionRange
                 */
                public static fromObject(object: { [k: string]: any }): google.protobuf.DescriptorProto.ExtensionRange;

                /**
                 * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                 * @param message ExtensionRange
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: google.protobuf.DescriptorProto.ExtensionRange, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtensionRange to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ReservedRange. */
            interface IReservedRange {

                /** ReservedRange start */
                start?: (number|null);

                /** ReservedRange end */
                end?: (number|null);
            }

            /** Represents a ReservedRange. */
            class ReservedRange implements IReservedRange {

                /**
                 * Constructs a new ReservedRange.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: google.protobuf.DescriptorProto.IReservedRange);

                /** ReservedRange start. */
                public start: number;

                /** ReservedRange end. */
                public end: number;

                /**
                 * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                 * @param message ReservedRange message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: google.protobuf.DescriptorProto.IReservedRange, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                 * @param message ReservedRange message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: google.protobuf.DescriptorProto.IReservedRange, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ReservedRange message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ReservedRange
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.DescriptorProto.ReservedRange;

                /**
                 * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ReservedRange
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.DescriptorProto.ReservedRange;

                /**
                 * Verifies a ReservedRange message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ReservedRange
                 */
                public static fromObject(object: { [k: string]: any }): google.protobuf.DescriptorProto.ReservedRange;

                /**
                 * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                 * @param message ReservedRange
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: google.protobuf.DescriptorProto.ReservedRange, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ReservedRange to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a FieldDescriptorProto. */
        interface IFieldDescriptorProto {

            /** FieldDescriptorProto name */
            name?: (string|null);

            /** FieldDescriptorProto number */
            number?: (number|null);

            /** FieldDescriptorProto label */
            label?: (google.protobuf.FieldDescriptorProto.Label|null);

            /** FieldDescriptorProto type */
            type?: (google.protobuf.FieldDescriptorProto.Type|null);

            /** FieldDescriptorProto type_name */
            type_name?: (string|null);

            /** FieldDescriptorProto extendee */
            extendee?: (string|null);

            /** FieldDescriptorProto default_value */
            default_value?: (string|null);

            /** FieldDescriptorProto oneof_index */
            oneof_index?: (number|null);

            /** FieldDescriptorProto json_name */
            json_name?: (string|null);

            /** FieldDescriptorProto options */
            options?: (google.protobuf.IFieldOptions|null);
        }

        /** Represents a FieldDescriptorProto. */
        class FieldDescriptorProto implements IFieldDescriptorProto {

            /**
             * Constructs a new FieldDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IFieldDescriptorProto);

            /** FieldDescriptorProto name. */
            public name: string;

            /** FieldDescriptorProto number. */
            public number: number;

            /** FieldDescriptorProto label. */
            public label: google.protobuf.FieldDescriptorProto.Label;

            /** FieldDescriptorProto type. */
            public type: google.protobuf.FieldDescriptorProto.Type;

            /** FieldDescriptorProto type_name. */
            public type_name: string;

            /** FieldDescriptorProto extendee. */
            public extendee: string;

            /** FieldDescriptorProto default_value. */
            public default_value: string;

            /** FieldDescriptorProto oneof_index. */
            public oneof_index: number;

            /** FieldDescriptorProto json_name. */
            public json_name: string;

            /** FieldDescriptorProto options. */
            public options?: (google.protobuf.IFieldOptions|null);

            /**
             * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
             * @param message FieldDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IFieldDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
             * @param message FieldDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IFieldDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FieldDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FieldDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.FieldDescriptorProto;

            /**
             * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FieldDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.FieldDescriptorProto;

            /**
             * Verifies a FieldDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FieldDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.FieldDescriptorProto;

            /**
             * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
             * @param message FieldDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.FieldDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FieldDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace FieldDescriptorProto {

            /** Type enum. */
            enum Type {
                TYPE_DOUBLE = 1,
                TYPE_FLOAT = 2,
                TYPE_INT64 = 3,
                TYPE_UINT64 = 4,
                TYPE_INT32 = 5,
                TYPE_FIXED64 = 6,
                TYPE_FIXED32 = 7,
                TYPE_BOOL = 8,
                TYPE_STRING = 9,
                TYPE_GROUP = 10,
                TYPE_MESSAGE = 11,
                TYPE_BYTES = 12,
                TYPE_UINT32 = 13,
                TYPE_ENUM = 14,
                TYPE_SFIXED32 = 15,
                TYPE_SFIXED64 = 16,
                TYPE_SINT32 = 17,
                TYPE_SINT64 = 18
            }

            /** Label enum. */
            enum Label {
                LABEL_OPTIONAL = 1,
                LABEL_REQUIRED = 2,
                LABEL_REPEATED = 3
            }
        }

        /** Properties of an OneofDescriptorProto. */
        interface IOneofDescriptorProto {

            /** OneofDescriptorProto name */
            name?: (string|null);

            /** OneofDescriptorProto options */
            options?: (google.protobuf.IOneofOptions|null);
        }

        /** Represents an OneofDescriptorProto. */
        class OneofDescriptorProto implements IOneofDescriptorProto {

            /**
             * Constructs a new OneofDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IOneofDescriptorProto);

            /** OneofDescriptorProto name. */
            public name: string;

            /** OneofDescriptorProto options. */
            public options?: (google.protobuf.IOneofOptions|null);

            /**
             * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
             * @param message OneofDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IOneofDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
             * @param message OneofDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IOneofDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an OneofDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns OneofDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.OneofDescriptorProto;

            /**
             * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns OneofDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.OneofDescriptorProto;

            /**
             * Verifies an OneofDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns OneofDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.OneofDescriptorProto;

            /**
             * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
             * @param message OneofDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.OneofDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this OneofDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EnumDescriptorProto. */
        interface IEnumDescriptorProto {

            /** EnumDescriptorProto name */
            name?: (string|null);

            /** EnumDescriptorProto value */
            value?: (google.protobuf.IEnumValueDescriptorProto[]|null);

            /** EnumDescriptorProto options */
            options?: (google.protobuf.IEnumOptions|null);
        }

        /** Represents an EnumDescriptorProto. */
        class EnumDescriptorProto implements IEnumDescriptorProto {

            /**
             * Constructs a new EnumDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IEnumDescriptorProto);

            /** EnumDescriptorProto name. */
            public name: string;

            /** EnumDescriptorProto value. */
            public value: google.protobuf.IEnumValueDescriptorProto[];

            /** EnumDescriptorProto options. */
            public options?: (google.protobuf.IEnumOptions|null);

            /**
             * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
             * @param message EnumDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IEnumDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
             * @param message EnumDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IEnumDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EnumDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EnumDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.EnumDescriptorProto;

            /**
             * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EnumDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.EnumDescriptorProto;

            /**
             * Verifies an EnumDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EnumDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.EnumDescriptorProto;

            /**
             * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
             * @param message EnumDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.EnumDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EnumDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EnumValueDescriptorProto. */
        interface IEnumValueDescriptorProto {

            /** EnumValueDescriptorProto name */
            name?: (string|null);

            /** EnumValueDescriptorProto number */
            number?: (number|null);

            /** EnumValueDescriptorProto options */
            options?: (google.protobuf.IEnumValueOptions|null);
        }

        /** Represents an EnumValueDescriptorProto. */
        class EnumValueDescriptorProto implements IEnumValueDescriptorProto {

            /**
             * Constructs a new EnumValueDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IEnumValueDescriptorProto);

            /** EnumValueDescriptorProto name. */
            public name: string;

            /** EnumValueDescriptorProto number. */
            public number: number;

            /** EnumValueDescriptorProto options. */
            public options?: (google.protobuf.IEnumValueOptions|null);

            /**
             * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
             * @param message EnumValueDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IEnumValueDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
             * @param message EnumValueDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IEnumValueDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EnumValueDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.EnumValueDescriptorProto;

            /**
             * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EnumValueDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.EnumValueDescriptorProto;

            /**
             * Verifies an EnumValueDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EnumValueDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.EnumValueDescriptorProto;

            /**
             * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
             * @param message EnumValueDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.EnumValueDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EnumValueDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ServiceDescriptorProto. */
        interface IServiceDescriptorProto {

            /** ServiceDescriptorProto name */
            name?: (string|null);

            /** ServiceDescriptorProto method */
            method?: (google.protobuf.IMethodDescriptorProto[]|null);

            /** ServiceDescriptorProto options */
            options?: (google.protobuf.IServiceOptions|null);
        }

        /** Represents a ServiceDescriptorProto. */
        class ServiceDescriptorProto implements IServiceDescriptorProto {

            /**
             * Constructs a new ServiceDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IServiceDescriptorProto);

            /** ServiceDescriptorProto name. */
            public name: string;

            /** ServiceDescriptorProto method. */
            public method: google.protobuf.IMethodDescriptorProto[];

            /** ServiceDescriptorProto options. */
            public options?: (google.protobuf.IServiceOptions|null);

            /**
             * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
             * @param message ServiceDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IServiceDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
             * @param message ServiceDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IServiceDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ServiceDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.ServiceDescriptorProto;

            /**
             * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ServiceDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.ServiceDescriptorProto;

            /**
             * Verifies a ServiceDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ServiceDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.ServiceDescriptorProto;

            /**
             * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
             * @param message ServiceDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.ServiceDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ServiceDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MethodDescriptorProto. */
        interface IMethodDescriptorProto {

            /** MethodDescriptorProto name */
            name?: (string|null);

            /** MethodDescriptorProto input_type */
            input_type?: (string|null);

            /** MethodDescriptorProto output_type */
            output_type?: (string|null);

            /** MethodDescriptorProto options */
            options?: (google.protobuf.IMethodOptions|null);

            /** MethodDescriptorProto client_streaming */
            client_streaming?: (boolean|null);

            /** MethodDescriptorProto server_streaming */
            server_streaming?: (boolean|null);
        }

        /** Represents a MethodDescriptorProto. */
        class MethodDescriptorProto implements IMethodDescriptorProto {

            /**
             * Constructs a new MethodDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IMethodDescriptorProto);

            /** MethodDescriptorProto name. */
            public name: string;

            /** MethodDescriptorProto input_type. */
            public input_type: string;

            /** MethodDescriptorProto output_type. */
            public output_type: string;

            /** MethodDescriptorProto options. */
            public options?: (google.protobuf.IMethodOptions|null);

            /** MethodDescriptorProto client_streaming. */
            public client_streaming: boolean;

            /** MethodDescriptorProto server_streaming. */
            public server_streaming: boolean;

            /**
             * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
             * @param message MethodDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IMethodDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
             * @param message MethodDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IMethodDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MethodDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MethodDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.MethodDescriptorProto;

            /**
             * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MethodDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.MethodDescriptorProto;

            /**
             * Verifies a MethodDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MethodDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.MethodDescriptorProto;

            /**
             * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
             * @param message MethodDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.MethodDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MethodDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a FileOptions. */
        interface IFileOptions {

            /** FileOptions java_package */
            java_package?: (string|null);

            /** FileOptions java_outer_classname */
            java_outer_classname?: (string|null);

            /** FileOptions java_multiple_files */
            java_multiple_files?: (boolean|null);

            /** FileOptions java_generate_equals_and_hash */
            java_generate_equals_and_hash?: (boolean|null);

            /** FileOptions java_string_check_utf8 */
            java_string_check_utf8?: (boolean|null);

            /** FileOptions optimize_for */
            optimize_for?: (google.protobuf.FileOptions.OptimizeMode|null);

            /** FileOptions go_package */
            go_package?: (string|null);

            /** FileOptions cc_generic_services */
            cc_generic_services?: (boolean|null);

            /** FileOptions java_generic_services */
            java_generic_services?: (boolean|null);

            /** FileOptions py_generic_services */
            py_generic_services?: (boolean|null);

            /** FileOptions deprecated */
            deprecated?: (boolean|null);

            /** FileOptions cc_enable_arenas */
            cc_enable_arenas?: (boolean|null);

            /** FileOptions objc_class_prefix */
            objc_class_prefix?: (string|null);

            /** FileOptions csharp_namespace */
            csharp_namespace?: (string|null);

            /** FileOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);

            /** FileOptions .gogoproto.goproto_getters_all */
            ".gogoproto.goproto_getters_all"?: (boolean|null);

            /** FileOptions .gogoproto.goproto_enum_prefix_all */
            ".gogoproto.goproto_enum_prefix_all"?: (boolean|null);

            /** FileOptions .gogoproto.goproto_stringer_all */
            ".gogoproto.goproto_stringer_all"?: (boolean|null);

            /** FileOptions .gogoproto.verbose_equal_all */
            ".gogoproto.verbose_equal_all"?: (boolean|null);

            /** FileOptions .gogoproto.face_all */
            ".gogoproto.face_all"?: (boolean|null);

            /** FileOptions .gogoproto.gostring_all */
            ".gogoproto.gostring_all"?: (boolean|null);

            /** FileOptions .gogoproto.populate_all */
            ".gogoproto.populate_all"?: (boolean|null);

            /** FileOptions .gogoproto.stringer_all */
            ".gogoproto.stringer_all"?: (boolean|null);

            /** FileOptions .gogoproto.onlyone_all */
            ".gogoproto.onlyone_all"?: (boolean|null);

            /** FileOptions .gogoproto.equal_all */
            ".gogoproto.equal_all"?: (boolean|null);

            /** FileOptions .gogoproto.description_all */
            ".gogoproto.description_all"?: (boolean|null);

            /** FileOptions .gogoproto.testgen_all */
            ".gogoproto.testgen_all"?: (boolean|null);

            /** FileOptions .gogoproto.benchgen_all */
            ".gogoproto.benchgen_all"?: (boolean|null);

            /** FileOptions .gogoproto.marshaler_all */
            ".gogoproto.marshaler_all"?: (boolean|null);

            /** FileOptions .gogoproto.unmarshaler_all */
            ".gogoproto.unmarshaler_all"?: (boolean|null);

            /** FileOptions .gogoproto.stable_marshaler_all */
            ".gogoproto.stable_marshaler_all"?: (boolean|null);

            /** FileOptions .gogoproto.sizer_all */
            ".gogoproto.sizer_all"?: (boolean|null);

            /** FileOptions .gogoproto.goproto_enum_stringer_all */
            ".gogoproto.goproto_enum_stringer_all"?: (boolean|null);

            /** FileOptions .gogoproto.enum_stringer_all */
            ".gogoproto.enum_stringer_all"?: (boolean|null);

            /** FileOptions .gogoproto.unsafe_marshaler_all */
            ".gogoproto.unsafe_marshaler_all"?: (boolean|null);

            /** FileOptions .gogoproto.unsafe_unmarshaler_all */
            ".gogoproto.unsafe_unmarshaler_all"?: (boolean|null);

            /** FileOptions .gogoproto.goproto_extensions_map_all */
            ".gogoproto.goproto_extensions_map_all"?: (boolean|null);

            /** FileOptions .gogoproto.goproto_unrecognized_all */
            ".gogoproto.goproto_unrecognized_all"?: (boolean|null);

            /** FileOptions .gogoproto.gogoproto_import */
            ".gogoproto.gogoproto_import"?: (boolean|null);

            /** FileOptions .gogoproto.protosizer_all */
            ".gogoproto.protosizer_all"?: (boolean|null);

            /** FileOptions .gogoproto.compare_all */
            ".gogoproto.compare_all"?: (boolean|null);

            /** FileOptions .gogoproto.typedecl_all */
            ".gogoproto.typedecl_all"?: (boolean|null);

            /** FileOptions .gogoproto.enumdecl_all */
            ".gogoproto.enumdecl_all"?: (boolean|null);

            /** FileOptions .gogoproto.goproto_registration */
            ".gogoproto.goproto_registration"?: (boolean|null);

            /** FileOptions .gogoproto.messagename_all */
            ".gogoproto.messagename_all"?: (boolean|null);

            /** FileOptions .gogoproto.goproto_sizecache_all */
            ".gogoproto.goproto_sizecache_all"?: (boolean|null);

            /** FileOptions .gogoproto.goproto_unkeyed_all */
            ".gogoproto.goproto_unkeyed_all"?: (boolean|null);

            /** FileOptions .cosmos_proto.declare_interface */
            ".cosmos_proto.declare_interface"?: (cosmos_proto.IInterfaceDescriptor[]|null);

            /** FileOptions .cosmos_proto.declare_scalar */
            ".cosmos_proto.declare_scalar"?: (cosmos_proto.IScalarDescriptor[]|null);
        }

        /** Represents a FileOptions. */
        class FileOptions implements IFileOptions {

            /**
             * Constructs a new FileOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IFileOptions);

            /** FileOptions java_package. */
            public java_package: string;

            /** FileOptions java_outer_classname. */
            public java_outer_classname: string;

            /** FileOptions java_multiple_files. */
            public java_multiple_files: boolean;

            /** FileOptions java_generate_equals_and_hash. */
            public java_generate_equals_and_hash: boolean;

            /** FileOptions java_string_check_utf8. */
            public java_string_check_utf8: boolean;

            /** FileOptions optimize_for. */
            public optimize_for: google.protobuf.FileOptions.OptimizeMode;

            /** FileOptions go_package. */
            public go_package: string;

            /** FileOptions cc_generic_services. */
            public cc_generic_services: boolean;

            /** FileOptions java_generic_services. */
            public java_generic_services: boolean;

            /** FileOptions py_generic_services. */
            public py_generic_services: boolean;

            /** FileOptions deprecated. */
            public deprecated: boolean;

            /** FileOptions cc_enable_arenas. */
            public cc_enable_arenas: boolean;

            /** FileOptions objc_class_prefix. */
            public objc_class_prefix: string;

            /** FileOptions csharp_namespace. */
            public csharp_namespace: string;

            /** FileOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
             * @param message FileOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IFileOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
             * @param message FileOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IFileOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FileOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FileOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.FileOptions;

            /**
             * Decodes a FileOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FileOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.FileOptions;

            /**
             * Verifies a FileOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FileOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.FileOptions;

            /**
             * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
             * @param message FileOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.FileOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FileOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace FileOptions {

            /** OptimizeMode enum. */
            enum OptimizeMode {
                SPEED = 1,
                CODE_SIZE = 2,
                LITE_RUNTIME = 3
            }
        }

        /** Properties of a MessageOptions. */
        interface IMessageOptions {

            /** MessageOptions message_set_wire_format */
            message_set_wire_format?: (boolean|null);

            /** MessageOptions no_standard_descriptor_accessor */
            no_standard_descriptor_accessor?: (boolean|null);

            /** MessageOptions deprecated */
            deprecated?: (boolean|null);

            /** MessageOptions map_entry */
            map_entry?: (boolean|null);

            /** MessageOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);

            /** MessageOptions .gogoproto.goproto_getters */
            ".gogoproto.goproto_getters"?: (boolean|null);

            /** MessageOptions .gogoproto.goproto_stringer */
            ".gogoproto.goproto_stringer"?: (boolean|null);

            /** MessageOptions .gogoproto.verbose_equal */
            ".gogoproto.verbose_equal"?: (boolean|null);

            /** MessageOptions .gogoproto.face */
            ".gogoproto.face"?: (boolean|null);

            /** MessageOptions .gogoproto.gostring */
            ".gogoproto.gostring"?: (boolean|null);

            /** MessageOptions .gogoproto.populate */
            ".gogoproto.populate"?: (boolean|null);

            /** MessageOptions .gogoproto.stringer */
            ".gogoproto.stringer"?: (boolean|null);

            /** MessageOptions .gogoproto.onlyone */
            ".gogoproto.onlyone"?: (boolean|null);

            /** MessageOptions .gogoproto.equal */
            ".gogoproto.equal"?: (boolean|null);

            /** MessageOptions .gogoproto.description */
            ".gogoproto.description"?: (boolean|null);

            /** MessageOptions .gogoproto.testgen */
            ".gogoproto.testgen"?: (boolean|null);

            /** MessageOptions .gogoproto.benchgen */
            ".gogoproto.benchgen"?: (boolean|null);

            /** MessageOptions .gogoproto.marshaler */
            ".gogoproto.marshaler"?: (boolean|null);

            /** MessageOptions .gogoproto.unmarshaler */
            ".gogoproto.unmarshaler"?: (boolean|null);

            /** MessageOptions .gogoproto.stable_marshaler */
            ".gogoproto.stable_marshaler"?: (boolean|null);

            /** MessageOptions .gogoproto.sizer */
            ".gogoproto.sizer"?: (boolean|null);

            /** MessageOptions .gogoproto.unsafe_marshaler */
            ".gogoproto.unsafe_marshaler"?: (boolean|null);

            /** MessageOptions .gogoproto.unsafe_unmarshaler */
            ".gogoproto.unsafe_unmarshaler"?: (boolean|null);

            /** MessageOptions .gogoproto.goproto_extensions_map */
            ".gogoproto.goproto_extensions_map"?: (boolean|null);

            /** MessageOptions .gogoproto.goproto_unrecognized */
            ".gogoproto.goproto_unrecognized"?: (boolean|null);

            /** MessageOptions .gogoproto.protosizer */
            ".gogoproto.protosizer"?: (boolean|null);

            /** MessageOptions .gogoproto.compare */
            ".gogoproto.compare"?: (boolean|null);

            /** MessageOptions .gogoproto.typedecl */
            ".gogoproto.typedecl"?: (boolean|null);

            /** MessageOptions .gogoproto.messagename */
            ".gogoproto.messagename"?: (boolean|null);

            /** MessageOptions .gogoproto.goproto_sizecache */
            ".gogoproto.goproto_sizecache"?: (boolean|null);

            /** MessageOptions .gogoproto.goproto_unkeyed */
            ".gogoproto.goproto_unkeyed"?: (boolean|null);

            /** MessageOptions .cosmos_proto.implements_interface */
            ".cosmos_proto.implements_interface"?: (string[]|null);

            /** MessageOptions .amino.name */
            ".amino.name"?: (string|null);

            /** MessageOptions .amino.message_encoding */
            ".amino.message_encoding"?: (string|null);
        }

        /** Represents a MessageOptions. */
        class MessageOptions implements IMessageOptions {

            /**
             * Constructs a new MessageOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IMessageOptions);

            /** MessageOptions message_set_wire_format. */
            public message_set_wire_format: boolean;

            /** MessageOptions no_standard_descriptor_accessor. */
            public no_standard_descriptor_accessor: boolean;

            /** MessageOptions deprecated. */
            public deprecated: boolean;

            /** MessageOptions map_entry. */
            public map_entry: boolean;

            /** MessageOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
             * @param message MessageOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IMessageOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
             * @param message MessageOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IMessageOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MessageOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MessageOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.MessageOptions;

            /**
             * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MessageOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.MessageOptions;

            /**
             * Verifies a MessageOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MessageOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.MessageOptions;

            /**
             * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
             * @param message MessageOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.MessageOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MessageOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a FieldOptions. */
        interface IFieldOptions {

            /** FieldOptions ctype */
            ctype?: (google.protobuf.FieldOptions.CType|null);

            /** FieldOptions packed */
            packed?: (boolean|null);

            /** FieldOptions jstype */
            jstype?: (google.protobuf.FieldOptions.JSType|null);

            /** FieldOptions lazy */
            lazy?: (boolean|null);

            /** FieldOptions deprecated */
            deprecated?: (boolean|null);

            /** FieldOptions weak */
            weak?: (boolean|null);

            /** FieldOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);

            /** FieldOptions .gogoproto.nullable */
            ".gogoproto.nullable"?: (boolean|null);

            /** FieldOptions .gogoproto.embed */
            ".gogoproto.embed"?: (boolean|null);

            /** FieldOptions .gogoproto.customtype */
            ".gogoproto.customtype"?: (string|null);

            /** FieldOptions .gogoproto.customname */
            ".gogoproto.customname"?: (string|null);

            /** FieldOptions .gogoproto.jsontag */
            ".gogoproto.jsontag"?: (string|null);

            /** FieldOptions .gogoproto.moretags */
            ".gogoproto.moretags"?: (string|null);

            /** FieldOptions .gogoproto.casttype */
            ".gogoproto.casttype"?: (string|null);

            /** FieldOptions .gogoproto.castkey */
            ".gogoproto.castkey"?: (string|null);

            /** FieldOptions .gogoproto.castvalue */
            ".gogoproto.castvalue"?: (string|null);

            /** FieldOptions .gogoproto.stdtime */
            ".gogoproto.stdtime"?: (boolean|null);

            /** FieldOptions .gogoproto.stdduration */
            ".gogoproto.stdduration"?: (boolean|null);

            /** FieldOptions .gogoproto.wktpointer */
            ".gogoproto.wktpointer"?: (boolean|null);

            /** FieldOptions .gogoproto.castrepeated */
            ".gogoproto.castrepeated"?: (string|null);

            /** FieldOptions .cosmos_proto.accepts_interface */
            ".cosmos_proto.accepts_interface"?: (string|null);

            /** FieldOptions .cosmos_proto.scalar */
            ".cosmos_proto.scalar"?: (string|null);

            /** FieldOptions .amino.encoding */
            ".amino.encoding"?: (string|null);

            /** FieldOptions .amino.field_name */
            ".amino.field_name"?: (string|null);

            /** FieldOptions .amino.dont_omitempty */
            ".amino.dont_omitempty"?: (boolean|null);
        }

        /** Represents a FieldOptions. */
        class FieldOptions implements IFieldOptions {

            /**
             * Constructs a new FieldOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IFieldOptions);

            /** FieldOptions ctype. */
            public ctype: google.protobuf.FieldOptions.CType;

            /** FieldOptions packed. */
            public packed: boolean;

            /** FieldOptions jstype. */
            public jstype: google.protobuf.FieldOptions.JSType;

            /** FieldOptions lazy. */
            public lazy: boolean;

            /** FieldOptions deprecated. */
            public deprecated: boolean;

            /** FieldOptions weak. */
            public weak: boolean;

            /** FieldOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
             * @param message FieldOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IFieldOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
             * @param message FieldOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IFieldOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FieldOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FieldOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.FieldOptions;

            /**
             * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FieldOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.FieldOptions;

            /**
             * Verifies a FieldOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FieldOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.FieldOptions;

            /**
             * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
             * @param message FieldOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.FieldOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FieldOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace FieldOptions {

            /** CType enum. */
            enum CType {
                STRING = 0,
                CORD = 1,
                STRING_PIECE = 2
            }

            /** JSType enum. */
            enum JSType {
                JS_NORMAL = 0,
                JS_STRING = 1,
                JS_NUMBER = 2
            }
        }

        /** Properties of an OneofOptions. */
        interface IOneofOptions {

            /** OneofOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);
        }

        /** Represents an OneofOptions. */
        class OneofOptions implements IOneofOptions {

            /**
             * Constructs a new OneofOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IOneofOptions);

            /** OneofOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
             * @param message OneofOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IOneofOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
             * @param message OneofOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IOneofOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an OneofOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns OneofOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.OneofOptions;

            /**
             * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns OneofOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.OneofOptions;

            /**
             * Verifies an OneofOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns OneofOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.OneofOptions;

            /**
             * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
             * @param message OneofOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.OneofOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this OneofOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EnumOptions. */
        interface IEnumOptions {

            /** EnumOptions allow_alias */
            allow_alias?: (boolean|null);

            /** EnumOptions deprecated */
            deprecated?: (boolean|null);

            /** EnumOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);

            /** EnumOptions .gogoproto.goproto_enum_prefix */
            ".gogoproto.goproto_enum_prefix"?: (boolean|null);

            /** EnumOptions .gogoproto.goproto_enum_stringer */
            ".gogoproto.goproto_enum_stringer"?: (boolean|null);

            /** EnumOptions .gogoproto.enum_stringer */
            ".gogoproto.enum_stringer"?: (boolean|null);

            /** EnumOptions .gogoproto.enum_customname */
            ".gogoproto.enum_customname"?: (string|null);

            /** EnumOptions .gogoproto.enumdecl */
            ".gogoproto.enumdecl"?: (boolean|null);
        }

        /** Represents an EnumOptions. */
        class EnumOptions implements IEnumOptions {

            /**
             * Constructs a new EnumOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IEnumOptions);

            /** EnumOptions allow_alias. */
            public allow_alias: boolean;

            /** EnumOptions deprecated. */
            public deprecated: boolean;

            /** EnumOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
             * @param message EnumOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IEnumOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
             * @param message EnumOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IEnumOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EnumOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EnumOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.EnumOptions;

            /**
             * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EnumOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.EnumOptions;

            /**
             * Verifies an EnumOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EnumOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.EnumOptions;

            /**
             * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
             * @param message EnumOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.EnumOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EnumOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EnumValueOptions. */
        interface IEnumValueOptions {

            /** EnumValueOptions deprecated */
            deprecated?: (boolean|null);

            /** EnumValueOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);

            /** EnumValueOptions .gogoproto.enumvalue_customname */
            ".gogoproto.enumvalue_customname"?: (string|null);
        }

        /** Represents an EnumValueOptions. */
        class EnumValueOptions implements IEnumValueOptions {

            /**
             * Constructs a new EnumValueOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IEnumValueOptions);

            /** EnumValueOptions deprecated. */
            public deprecated: boolean;

            /** EnumValueOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
             * @param message EnumValueOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IEnumValueOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
             * @param message EnumValueOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IEnumValueOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EnumValueOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EnumValueOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.EnumValueOptions;

            /**
             * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EnumValueOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.EnumValueOptions;

            /**
             * Verifies an EnumValueOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EnumValueOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.EnumValueOptions;

            /**
             * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
             * @param message EnumValueOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.EnumValueOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EnumValueOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ServiceOptions. */
        interface IServiceOptions {

            /** ServiceOptions deprecated */
            deprecated?: (boolean|null);

            /** ServiceOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);
        }

        /** Represents a ServiceOptions. */
        class ServiceOptions implements IServiceOptions {

            /**
             * Constructs a new ServiceOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IServiceOptions);

            /** ServiceOptions deprecated. */
            public deprecated: boolean;

            /** ServiceOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
             * @param message ServiceOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IServiceOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
             * @param message ServiceOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IServiceOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ServiceOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ServiceOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.ServiceOptions;

            /**
             * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ServiceOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.ServiceOptions;

            /**
             * Verifies a ServiceOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ServiceOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.ServiceOptions;

            /**
             * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
             * @param message ServiceOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.ServiceOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ServiceOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MethodOptions. */
        interface IMethodOptions {

            /** MethodOptions deprecated */
            deprecated?: (boolean|null);

            /** MethodOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);

            /** MethodOptions .google.api.http */
            ".google.api.http"?: (google.api.IHttpRule|null);
        }

        /** Represents a MethodOptions. */
        class MethodOptions implements IMethodOptions {

            /**
             * Constructs a new MethodOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IMethodOptions);

            /** MethodOptions deprecated. */
            public deprecated: boolean;

            /** MethodOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
             * @param message MethodOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IMethodOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
             * @param message MethodOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IMethodOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MethodOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MethodOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.MethodOptions;

            /**
             * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MethodOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.MethodOptions;

            /**
             * Verifies a MethodOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MethodOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.MethodOptions;

            /**
             * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
             * @param message MethodOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.MethodOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MethodOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an UninterpretedOption. */
        interface IUninterpretedOption {

            /** UninterpretedOption name */
            name?: (google.protobuf.UninterpretedOption.INamePart[]|null);

            /** UninterpretedOption identifier_value */
            identifier_value?: (string|null);

            /** UninterpretedOption positive_int_value */
            positive_int_value?: (Long|null);

            /** UninterpretedOption negative_int_value */
            negative_int_value?: (Long|null);

            /** UninterpretedOption double_value */
            double_value?: (number|null);

            /** UninterpretedOption string_value */
            string_value?: (Uint8Array|null);

            /** UninterpretedOption aggregate_value */
            aggregate_value?: (string|null);
        }

        /** Represents an UninterpretedOption. */
        class UninterpretedOption implements IUninterpretedOption {

            /**
             * Constructs a new UninterpretedOption.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IUninterpretedOption);

            /** UninterpretedOption name. */
            public name: google.protobuf.UninterpretedOption.INamePart[];

            /** UninterpretedOption identifier_value. */
            public identifier_value: string;

            /** UninterpretedOption positive_int_value. */
            public positive_int_value: Long;

            /** UninterpretedOption negative_int_value. */
            public negative_int_value: Long;

            /** UninterpretedOption double_value. */
            public double_value: number;

            /** UninterpretedOption string_value. */
            public string_value: Uint8Array;

            /** UninterpretedOption aggregate_value. */
            public aggregate_value: string;

            /**
             * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
             * @param message UninterpretedOption message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IUninterpretedOption, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
             * @param message UninterpretedOption message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IUninterpretedOption, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an UninterpretedOption message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UninterpretedOption
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.UninterpretedOption;

            /**
             * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UninterpretedOption
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.UninterpretedOption;

            /**
             * Verifies an UninterpretedOption message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UninterpretedOption
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.UninterpretedOption;

            /**
             * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
             * @param message UninterpretedOption
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.UninterpretedOption, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UninterpretedOption to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace UninterpretedOption {

            /** Properties of a NamePart. */
            interface INamePart {

                /** NamePart name_part */
                name_part: string;

                /** NamePart is_extension */
                is_extension: boolean;
            }

            /** Represents a NamePart. */
            class NamePart implements INamePart {

                /**
                 * Constructs a new NamePart.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: google.protobuf.UninterpretedOption.INamePart);

                /** NamePart name_part. */
                public name_part: string;

                /** NamePart is_extension. */
                public is_extension: boolean;

                /**
                 * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                 * @param message NamePart message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: google.protobuf.UninterpretedOption.INamePart, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                 * @param message NamePart message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: google.protobuf.UninterpretedOption.INamePart, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a NamePart message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns NamePart
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.UninterpretedOption.NamePart;

                /**
                 * Decodes a NamePart message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns NamePart
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.UninterpretedOption.NamePart;

                /**
                 * Verifies a NamePart message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns NamePart
                 */
                public static fromObject(object: { [k: string]: any }): google.protobuf.UninterpretedOption.NamePart;

                /**
                 * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                 * @param message NamePart
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: google.protobuf.UninterpretedOption.NamePart, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this NamePart to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a SourceCodeInfo. */
        interface ISourceCodeInfo {

            /** SourceCodeInfo location */
            location?: (google.protobuf.SourceCodeInfo.ILocation[]|null);
        }

        /** Represents a SourceCodeInfo. */
        class SourceCodeInfo implements ISourceCodeInfo {

            /**
             * Constructs a new SourceCodeInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.ISourceCodeInfo);

            /** SourceCodeInfo location. */
            public location: google.protobuf.SourceCodeInfo.ILocation[];

            /**
             * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
             * @param message SourceCodeInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.ISourceCodeInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
             * @param message SourceCodeInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.ISourceCodeInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SourceCodeInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SourceCodeInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.SourceCodeInfo;

            /**
             * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SourceCodeInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.SourceCodeInfo;

            /**
             * Verifies a SourceCodeInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SourceCodeInfo
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.SourceCodeInfo;

            /**
             * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
             * @param message SourceCodeInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.SourceCodeInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SourceCodeInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace SourceCodeInfo {

            /** Properties of a Location. */
            interface ILocation {

                /** Location path */
                path?: (number[]|null);

                /** Location span */
                span?: (number[]|null);

                /** Location leading_comments */
                leading_comments?: (string|null);

                /** Location trailing_comments */
                trailing_comments?: (string|null);

                /** Location leading_detached_comments */
                leading_detached_comments?: (string[]|null);
            }

            /** Represents a Location. */
            class Location implements ILocation {

                /**
                 * Constructs a new Location.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: google.protobuf.SourceCodeInfo.ILocation);

                /** Location path. */
                public path: number[];

                /** Location span. */
                public span: number[];

                /** Location leading_comments. */
                public leading_comments: string;

                /** Location trailing_comments. */
                public trailing_comments: string;

                /** Location leading_detached_comments. */
                public leading_detached_comments: string[];

                /**
                 * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                 * @param message Location message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: google.protobuf.SourceCodeInfo.ILocation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                 * @param message Location message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: google.protobuf.SourceCodeInfo.ILocation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Location message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Location
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.SourceCodeInfo.Location;

                /**
                 * Decodes a Location message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Location
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.SourceCodeInfo.Location;

                /**
                 * Verifies a Location message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Location message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Location
                 */
                public static fromObject(object: { [k: string]: any }): google.protobuf.SourceCodeInfo.Location;

                /**
                 * Creates a plain object from a Location message. Also converts values to other types if specified.
                 * @param message Location
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: google.protobuf.SourceCodeInfo.Location, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Location to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a GeneratedCodeInfo. */
        interface IGeneratedCodeInfo {

            /** GeneratedCodeInfo annotation */
            annotation?: (google.protobuf.GeneratedCodeInfo.IAnnotation[]|null);
        }

        /** Represents a GeneratedCodeInfo. */
        class GeneratedCodeInfo implements IGeneratedCodeInfo {

            /**
             * Constructs a new GeneratedCodeInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IGeneratedCodeInfo);

            /** GeneratedCodeInfo annotation. */
            public annotation: google.protobuf.GeneratedCodeInfo.IAnnotation[];

            /**
             * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
             * @param message GeneratedCodeInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IGeneratedCodeInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
             * @param message GeneratedCodeInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IGeneratedCodeInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GeneratedCodeInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.GeneratedCodeInfo;

            /**
             * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GeneratedCodeInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.GeneratedCodeInfo;

            /**
             * Verifies a GeneratedCodeInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GeneratedCodeInfo
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.GeneratedCodeInfo;

            /**
             * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
             * @param message GeneratedCodeInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.GeneratedCodeInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GeneratedCodeInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace GeneratedCodeInfo {

            /** Properties of an Annotation. */
            interface IAnnotation {

                /** Annotation path */
                path?: (number[]|null);

                /** Annotation source_file */
                source_file?: (string|null);

                /** Annotation begin */
                begin?: (number|null);

                /** Annotation end */
                end?: (number|null);
            }

            /** Represents an Annotation. */
            class Annotation implements IAnnotation {

                /**
                 * Constructs a new Annotation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: google.protobuf.GeneratedCodeInfo.IAnnotation);

                /** Annotation path. */
                public path: number[];

                /** Annotation source_file. */
                public source_file: string;

                /** Annotation begin. */
                public begin: number;

                /** Annotation end. */
                public end: number;

                /**
                 * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                 * @param message Annotation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: google.protobuf.GeneratedCodeInfo.IAnnotation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                 * @param message Annotation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: google.protobuf.GeneratedCodeInfo.IAnnotation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an Annotation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Annotation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.GeneratedCodeInfo.Annotation;

                /**
                 * Decodes an Annotation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Annotation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.GeneratedCodeInfo.Annotation;

                /**
                 * Verifies an Annotation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Annotation
                 */
                public static fromObject(object: { [k: string]: any }): google.protobuf.GeneratedCodeInfo.Annotation;

                /**
                 * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                 * @param message Annotation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: google.protobuf.GeneratedCodeInfo.Annotation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Annotation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of an Any. */
        interface IAny {

            /** Any type_url */
            type_url?: (string|null);

            /** Any value */
            value?: (Uint8Array|null);
        }

        /** Represents an Any. */
        class Any implements IAny {

            /**
             * Constructs a new Any.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IAny);

            /** Any type_url. */
            public type_url: string;

            /** Any value. */
            public value: Uint8Array;

            /**
             * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
             * @param message Any message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IAny, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
             * @param message Any message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IAny, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Any message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Any
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.Any;

            /**
             * Decodes an Any message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Any
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.Any;

            /**
             * Verifies an Any message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Any message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Any
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.Any;

            /**
             * Creates a plain object from an Any message. Also converts values to other types if specified.
             * @param message Any
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.Any, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Any to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Timestamp. */
        interface ITimestamp {

            /** Timestamp seconds */
            seconds?: (Long|null);

            /** Timestamp nanos */
            nanos?: (number|null);
        }

        /** Represents a Timestamp. */
        class Timestamp implements ITimestamp {

            /**
             * Constructs a new Timestamp.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.ITimestamp);

            /** Timestamp seconds. */
            public seconds: Long;

            /** Timestamp nanos. */
            public nanos: number;

            /**
             * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
             * @param message Timestamp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.ITimestamp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
             * @param message Timestamp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.ITimestamp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Timestamp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Timestamp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.Timestamp;

            /**
             * Decodes a Timestamp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Timestamp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.Timestamp;

            /**
             * Verifies a Timestamp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Timestamp
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.Timestamp;

            /**
             * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
             * @param message Timestamp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.Timestamp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Timestamp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Duration. */
        interface IDuration {

            /** Duration seconds */
            seconds?: (Long|null);

            /** Duration nanos */
            nanos?: (number|null);
        }

        /** Represents a Duration. */
        class Duration implements IDuration {

            /**
             * Constructs a new Duration.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IDuration);

            /** Duration seconds. */
            public seconds: Long;

            /** Duration nanos. */
            public nanos: number;

            /**
             * Encodes the specified Duration message. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
             * @param message Duration message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IDuration, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Duration message, length delimited. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
             * @param message Duration message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IDuration, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Duration message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Duration
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.Duration;

            /**
             * Decodes a Duration message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Duration
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.Duration;

            /**
             * Verifies a Duration message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Duration message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Duration
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.Duration;

            /**
             * Creates a plain object from a Duration message. Also converts values to other types if specified.
             * @param message Duration
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.Duration, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Duration to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Namespace api. */
    namespace api {

        /** Properties of a Http. */
        interface IHttp {

            /** Http rules */
            rules?: (google.api.IHttpRule[]|null);

            /** Http fully_decode_reserved_expansion */
            fully_decode_reserved_expansion?: (boolean|null);
        }

        /** Represents a Http. */
        class Http implements IHttp {

            /**
             * Constructs a new Http.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.api.IHttp);

            /** Http rules. */
            public rules: google.api.IHttpRule[];

            /** Http fully_decode_reserved_expansion. */
            public fully_decode_reserved_expansion: boolean;

            /**
             * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
             * @param message Http message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.api.IHttp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
             * @param message Http message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.api.IHttp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Http message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Http
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.api.Http;

            /**
             * Decodes a Http message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Http
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.api.Http;

            /**
             * Verifies a Http message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Http message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Http
             */
            public static fromObject(object: { [k: string]: any }): google.api.Http;

            /**
             * Creates a plain object from a Http message. Also converts values to other types if specified.
             * @param message Http
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.api.Http, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Http to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a HttpRule. */
        interface IHttpRule {

            /** HttpRule selector */
            selector?: (string|null);

            /** HttpRule get */
            get?: (string|null);

            /** HttpRule put */
            put?: (string|null);

            /** HttpRule post */
            post?: (string|null);

            /** HttpRule delete */
            "delete"?: (string|null);

            /** HttpRule patch */
            patch?: (string|null);

            /** HttpRule custom */
            custom?: (google.api.ICustomHttpPattern|null);

            /** HttpRule body */
            body?: (string|null);

            /** HttpRule response_body */
            response_body?: (string|null);

            /** HttpRule additional_bindings */
            additional_bindings?: (google.api.IHttpRule[]|null);
        }

        /** Represents a HttpRule. */
        class HttpRule implements IHttpRule {

            /**
             * Constructs a new HttpRule.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.api.IHttpRule);

            /** HttpRule selector. */
            public selector: string;

            /** HttpRule get. */
            public get?: (string|null);

            /** HttpRule put. */
            public put?: (string|null);

            /** HttpRule post. */
            public post?: (string|null);

            /** HttpRule delete. */
            public delete?: (string|null);

            /** HttpRule patch. */
            public patch?: (string|null);

            /** HttpRule custom. */
            public custom?: (google.api.ICustomHttpPattern|null);

            /** HttpRule body. */
            public body: string;

            /** HttpRule response_body. */
            public response_body: string;

            /** HttpRule additional_bindings. */
            public additional_bindings: google.api.IHttpRule[];

            /** HttpRule pattern. */
            public pattern?: ("get"|"put"|"post"|"delete"|"patch"|"custom");

            /**
             * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
             * @param message HttpRule message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.api.IHttpRule, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
             * @param message HttpRule message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.api.IHttpRule, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a HttpRule message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns HttpRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.api.HttpRule;

            /**
             * Decodes a HttpRule message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns HttpRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.api.HttpRule;

            /**
             * Verifies a HttpRule message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns HttpRule
             */
            public static fromObject(object: { [k: string]: any }): google.api.HttpRule;

            /**
             * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
             * @param message HttpRule
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.api.HttpRule, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this HttpRule to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a CustomHttpPattern. */
        interface ICustomHttpPattern {

            /** CustomHttpPattern kind */
            kind?: (string|null);

            /** CustomHttpPattern path */
            path?: (string|null);
        }

        /** Represents a CustomHttpPattern. */
        class CustomHttpPattern implements ICustomHttpPattern {

            /**
             * Constructs a new CustomHttpPattern.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.api.ICustomHttpPattern);

            /** CustomHttpPattern kind. */
            public kind: string;

            /** CustomHttpPattern path. */
            public path: string;

            /**
             * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
             * @param message CustomHttpPattern message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.api.ICustomHttpPattern, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
             * @param message CustomHttpPattern message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.api.ICustomHttpPattern, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CustomHttpPattern message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CustomHttpPattern
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.api.CustomHttpPattern;

            /**
             * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CustomHttpPattern
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.api.CustomHttpPattern;

            /**
             * Verifies a CustomHttpPattern message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CustomHttpPattern
             */
            public static fromObject(object: { [k: string]: any }): google.api.CustomHttpPattern;

            /**
             * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
             * @param message CustomHttpPattern
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.api.CustomHttpPattern, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CustomHttpPattern to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }
}

/** Namespace ibc. */
export namespace ibc {

    /** Namespace applications. */
    namespace applications {

        /** Namespace fee. */
        namespace fee {

            /** Namespace v1. */
            namespace v1 {

                /** Represents a Msg */
                class Msg extends $protobuf.rpc.Service {

                    /**
                     * Constructs a new Msg service.
                     * @param rpcImpl RPC implementation
                     * @param [requestDelimited=false] Whether requests are length-delimited
                     * @param [responseDelimited=false] Whether responses are length-delimited
                     */
                    constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                    /**
                     * Calls RegisterPayee.
                     * @param request MsgRegisterPayee message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgRegisterPayeeResponse
                     */
                    public registerPayee(request: ibc.applications.fee.v1.IMsgRegisterPayee, callback: ibc.applications.fee.v1.Msg.RegisterPayeeCallback): void;

                    /**
                     * Calls RegisterPayee.
                     * @param request MsgRegisterPayee message or plain object
                     * @returns Promise
                     */
                    public registerPayee(request: ibc.applications.fee.v1.IMsgRegisterPayee): Promise<ibc.applications.fee.v1.MsgRegisterPayeeResponse>;

                    /**
                     * Calls RegisterCounterpartyPayee.
                     * @param request MsgRegisterCounterpartyPayee message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgRegisterCounterpartyPayeeResponse
                     */
                    public registerCounterpartyPayee(request: ibc.applications.fee.v1.IMsgRegisterCounterpartyPayee, callback: ibc.applications.fee.v1.Msg.RegisterCounterpartyPayeeCallback): void;

                    /**
                     * Calls RegisterCounterpartyPayee.
                     * @param request MsgRegisterCounterpartyPayee message or plain object
                     * @returns Promise
                     */
                    public registerCounterpartyPayee(request: ibc.applications.fee.v1.IMsgRegisterCounterpartyPayee): Promise<ibc.applications.fee.v1.MsgRegisterCounterpartyPayeeResponse>;

                    /**
                     * Calls PayPacketFee.
                     * @param request MsgPayPacketFee message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgPayPacketFeeResponse
                     */
                    public payPacketFee(request: ibc.applications.fee.v1.IMsgPayPacketFee, callback: ibc.applications.fee.v1.Msg.PayPacketFeeCallback): void;

                    /**
                     * Calls PayPacketFee.
                     * @param request MsgPayPacketFee message or plain object
                     * @returns Promise
                     */
                    public payPacketFee(request: ibc.applications.fee.v1.IMsgPayPacketFee): Promise<ibc.applications.fee.v1.MsgPayPacketFeeResponse>;

                    /**
                     * Calls PayPacketFeeAsync.
                     * @param request MsgPayPacketFeeAsync message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgPayPacketFeeAsyncResponse
                     */
                    public payPacketFeeAsync(request: ibc.applications.fee.v1.IMsgPayPacketFeeAsync, callback: ibc.applications.fee.v1.Msg.PayPacketFeeAsyncCallback): void;

                    /**
                     * Calls PayPacketFeeAsync.
                     * @param request MsgPayPacketFeeAsync message or plain object
                     * @returns Promise
                     */
                    public payPacketFeeAsync(request: ibc.applications.fee.v1.IMsgPayPacketFeeAsync): Promise<ibc.applications.fee.v1.MsgPayPacketFeeAsyncResponse>;
                }

                namespace Msg {

                    /**
                     * Callback as used by {@link ibc.applications.fee.v1.Msg#registerPayee}.
                     * @param error Error, if any
                     * @param [response] MsgRegisterPayeeResponse
                     */
                    type RegisterPayeeCallback = (error: (Error|null), response?: ibc.applications.fee.v1.MsgRegisterPayeeResponse) => void;

                    /**
                     * Callback as used by {@link ibc.applications.fee.v1.Msg#registerCounterpartyPayee}.
                     * @param error Error, if any
                     * @param [response] MsgRegisterCounterpartyPayeeResponse
                     */
                    type RegisterCounterpartyPayeeCallback = (error: (Error|null), response?: ibc.applications.fee.v1.MsgRegisterCounterpartyPayeeResponse) => void;

                    /**
                     * Callback as used by {@link ibc.applications.fee.v1.Msg#payPacketFee}.
                     * @param error Error, if any
                     * @param [response] MsgPayPacketFeeResponse
                     */
                    type PayPacketFeeCallback = (error: (Error|null), response?: ibc.applications.fee.v1.MsgPayPacketFeeResponse) => void;

                    /**
                     * Callback as used by {@link ibc.applications.fee.v1.Msg#payPacketFeeAsync}.
                     * @param error Error, if any
                     * @param [response] MsgPayPacketFeeAsyncResponse
                     */
                    type PayPacketFeeAsyncCallback = (error: (Error|null), response?: ibc.applications.fee.v1.MsgPayPacketFeeAsyncResponse) => void;
                }

                /** Properties of a MsgRegisterPayee. */
                interface IMsgRegisterPayee {

                    /** MsgRegisterPayee port_id */
                    port_id?: (string|null);

                    /** MsgRegisterPayee channel_id */
                    channel_id?: (string|null);

                    /** MsgRegisterPayee relayer */
                    relayer?: (string|null);

                    /** MsgRegisterPayee payee */
                    payee?: (string|null);
                }

                /** Represents a MsgRegisterPayee. */
                class MsgRegisterPayee implements IMsgRegisterPayee {

                    /**
                     * Constructs a new MsgRegisterPayee.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IMsgRegisterPayee);

                    /** MsgRegisterPayee port_id. */
                    public port_id: string;

                    /** MsgRegisterPayee channel_id. */
                    public channel_id: string;

                    /** MsgRegisterPayee relayer. */
                    public relayer: string;

                    /** MsgRegisterPayee payee. */
                    public payee: string;

                    /**
                     * Encodes the specified MsgRegisterPayee message. Does not implicitly {@link ibc.applications.fee.v1.MsgRegisterPayee.verify|verify} messages.
                     * @param message MsgRegisterPayee message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IMsgRegisterPayee, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgRegisterPayee message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.MsgRegisterPayee.verify|verify} messages.
                     * @param message MsgRegisterPayee message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IMsgRegisterPayee, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgRegisterPayee message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgRegisterPayee
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.MsgRegisterPayee;

                    /**
                     * Decodes a MsgRegisterPayee message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgRegisterPayee
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.MsgRegisterPayee;

                    /**
                     * Verifies a MsgRegisterPayee message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgRegisterPayee message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgRegisterPayee
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.MsgRegisterPayee;

                    /**
                     * Creates a plain object from a MsgRegisterPayee message. Also converts values to other types if specified.
                     * @param message MsgRegisterPayee
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.MsgRegisterPayee, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgRegisterPayee to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgRegisterPayeeResponse. */
                interface IMsgRegisterPayeeResponse {
                }

                /** Represents a MsgRegisterPayeeResponse. */
                class MsgRegisterPayeeResponse implements IMsgRegisterPayeeResponse {

                    /**
                     * Constructs a new MsgRegisterPayeeResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IMsgRegisterPayeeResponse);

                    /**
                     * Encodes the specified MsgRegisterPayeeResponse message. Does not implicitly {@link ibc.applications.fee.v1.MsgRegisterPayeeResponse.verify|verify} messages.
                     * @param message MsgRegisterPayeeResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IMsgRegisterPayeeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgRegisterPayeeResponse message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.MsgRegisterPayeeResponse.verify|verify} messages.
                     * @param message MsgRegisterPayeeResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IMsgRegisterPayeeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgRegisterPayeeResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgRegisterPayeeResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.MsgRegisterPayeeResponse;

                    /**
                     * Decodes a MsgRegisterPayeeResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgRegisterPayeeResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.MsgRegisterPayeeResponse;

                    /**
                     * Verifies a MsgRegisterPayeeResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgRegisterPayeeResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgRegisterPayeeResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.MsgRegisterPayeeResponse;

                    /**
                     * Creates a plain object from a MsgRegisterPayeeResponse message. Also converts values to other types if specified.
                     * @param message MsgRegisterPayeeResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.MsgRegisterPayeeResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgRegisterPayeeResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgRegisterCounterpartyPayee. */
                interface IMsgRegisterCounterpartyPayee {

                    /** MsgRegisterCounterpartyPayee port_id */
                    port_id?: (string|null);

                    /** MsgRegisterCounterpartyPayee channel_id */
                    channel_id?: (string|null);

                    /** MsgRegisterCounterpartyPayee relayer */
                    relayer?: (string|null);

                    /** MsgRegisterCounterpartyPayee counterparty_payee */
                    counterparty_payee?: (string|null);
                }

                /** Represents a MsgRegisterCounterpartyPayee. */
                class MsgRegisterCounterpartyPayee implements IMsgRegisterCounterpartyPayee {

                    /**
                     * Constructs a new MsgRegisterCounterpartyPayee.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IMsgRegisterCounterpartyPayee);

                    /** MsgRegisterCounterpartyPayee port_id. */
                    public port_id: string;

                    /** MsgRegisterCounterpartyPayee channel_id. */
                    public channel_id: string;

                    /** MsgRegisterCounterpartyPayee relayer. */
                    public relayer: string;

                    /** MsgRegisterCounterpartyPayee counterparty_payee. */
                    public counterparty_payee: string;

                    /**
                     * Encodes the specified MsgRegisterCounterpartyPayee message. Does not implicitly {@link ibc.applications.fee.v1.MsgRegisterCounterpartyPayee.verify|verify} messages.
                     * @param message MsgRegisterCounterpartyPayee message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IMsgRegisterCounterpartyPayee, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgRegisterCounterpartyPayee message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.MsgRegisterCounterpartyPayee.verify|verify} messages.
                     * @param message MsgRegisterCounterpartyPayee message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IMsgRegisterCounterpartyPayee, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgRegisterCounterpartyPayee message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgRegisterCounterpartyPayee
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.MsgRegisterCounterpartyPayee;

                    /**
                     * Decodes a MsgRegisterCounterpartyPayee message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgRegisterCounterpartyPayee
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.MsgRegisterCounterpartyPayee;

                    /**
                     * Verifies a MsgRegisterCounterpartyPayee message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgRegisterCounterpartyPayee message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgRegisterCounterpartyPayee
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.MsgRegisterCounterpartyPayee;

                    /**
                     * Creates a plain object from a MsgRegisterCounterpartyPayee message. Also converts values to other types if specified.
                     * @param message MsgRegisterCounterpartyPayee
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.MsgRegisterCounterpartyPayee, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgRegisterCounterpartyPayee to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgRegisterCounterpartyPayeeResponse. */
                interface IMsgRegisterCounterpartyPayeeResponse {
                }

                /** Represents a MsgRegisterCounterpartyPayeeResponse. */
                class MsgRegisterCounterpartyPayeeResponse implements IMsgRegisterCounterpartyPayeeResponse {

                    /**
                     * Constructs a new MsgRegisterCounterpartyPayeeResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IMsgRegisterCounterpartyPayeeResponse);

                    /**
                     * Encodes the specified MsgRegisterCounterpartyPayeeResponse message. Does not implicitly {@link ibc.applications.fee.v1.MsgRegisterCounterpartyPayeeResponse.verify|verify} messages.
                     * @param message MsgRegisterCounterpartyPayeeResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IMsgRegisterCounterpartyPayeeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgRegisterCounterpartyPayeeResponse message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.MsgRegisterCounterpartyPayeeResponse.verify|verify} messages.
                     * @param message MsgRegisterCounterpartyPayeeResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IMsgRegisterCounterpartyPayeeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgRegisterCounterpartyPayeeResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgRegisterCounterpartyPayeeResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.MsgRegisterCounterpartyPayeeResponse;

                    /**
                     * Decodes a MsgRegisterCounterpartyPayeeResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgRegisterCounterpartyPayeeResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.MsgRegisterCounterpartyPayeeResponse;

                    /**
                     * Verifies a MsgRegisterCounterpartyPayeeResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgRegisterCounterpartyPayeeResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgRegisterCounterpartyPayeeResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.MsgRegisterCounterpartyPayeeResponse;

                    /**
                     * Creates a plain object from a MsgRegisterCounterpartyPayeeResponse message. Also converts values to other types if specified.
                     * @param message MsgRegisterCounterpartyPayeeResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.MsgRegisterCounterpartyPayeeResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgRegisterCounterpartyPayeeResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgPayPacketFee. */
                interface IMsgPayPacketFee {

                    /** MsgPayPacketFee fee */
                    fee?: (ibc.applications.fee.v1.IFee|null);

                    /** MsgPayPacketFee source_port_id */
                    source_port_id?: (string|null);

                    /** MsgPayPacketFee source_channel_id */
                    source_channel_id?: (string|null);

                    /** MsgPayPacketFee signer */
                    signer?: (string|null);

                    /** MsgPayPacketFee relayers */
                    relayers?: (string[]|null);
                }

                /** Represents a MsgPayPacketFee. */
                class MsgPayPacketFee implements IMsgPayPacketFee {

                    /**
                     * Constructs a new MsgPayPacketFee.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IMsgPayPacketFee);

                    /** MsgPayPacketFee fee. */
                    public fee?: (ibc.applications.fee.v1.IFee|null);

                    /** MsgPayPacketFee source_port_id. */
                    public source_port_id: string;

                    /** MsgPayPacketFee source_channel_id. */
                    public source_channel_id: string;

                    /** MsgPayPacketFee signer. */
                    public signer: string;

                    /** MsgPayPacketFee relayers. */
                    public relayers: string[];

                    /**
                     * Encodes the specified MsgPayPacketFee message. Does not implicitly {@link ibc.applications.fee.v1.MsgPayPacketFee.verify|verify} messages.
                     * @param message MsgPayPacketFee message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IMsgPayPacketFee, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgPayPacketFee message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.MsgPayPacketFee.verify|verify} messages.
                     * @param message MsgPayPacketFee message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IMsgPayPacketFee, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgPayPacketFee message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgPayPacketFee
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.MsgPayPacketFee;

                    /**
                     * Decodes a MsgPayPacketFee message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgPayPacketFee
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.MsgPayPacketFee;

                    /**
                     * Verifies a MsgPayPacketFee message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgPayPacketFee message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgPayPacketFee
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.MsgPayPacketFee;

                    /**
                     * Creates a plain object from a MsgPayPacketFee message. Also converts values to other types if specified.
                     * @param message MsgPayPacketFee
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.MsgPayPacketFee, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgPayPacketFee to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgPayPacketFeeResponse. */
                interface IMsgPayPacketFeeResponse {
                }

                /** Represents a MsgPayPacketFeeResponse. */
                class MsgPayPacketFeeResponse implements IMsgPayPacketFeeResponse {

                    /**
                     * Constructs a new MsgPayPacketFeeResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IMsgPayPacketFeeResponse);

                    /**
                     * Encodes the specified MsgPayPacketFeeResponse message. Does not implicitly {@link ibc.applications.fee.v1.MsgPayPacketFeeResponse.verify|verify} messages.
                     * @param message MsgPayPacketFeeResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IMsgPayPacketFeeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgPayPacketFeeResponse message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.MsgPayPacketFeeResponse.verify|verify} messages.
                     * @param message MsgPayPacketFeeResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IMsgPayPacketFeeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgPayPacketFeeResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgPayPacketFeeResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.MsgPayPacketFeeResponse;

                    /**
                     * Decodes a MsgPayPacketFeeResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgPayPacketFeeResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.MsgPayPacketFeeResponse;

                    /**
                     * Verifies a MsgPayPacketFeeResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgPayPacketFeeResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgPayPacketFeeResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.MsgPayPacketFeeResponse;

                    /**
                     * Creates a plain object from a MsgPayPacketFeeResponse message. Also converts values to other types if specified.
                     * @param message MsgPayPacketFeeResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.MsgPayPacketFeeResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgPayPacketFeeResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgPayPacketFeeAsync. */
                interface IMsgPayPacketFeeAsync {

                    /** MsgPayPacketFeeAsync packet_id */
                    packet_id?: (ibc.core.channel.v1.IPacketId|null);

                    /** MsgPayPacketFeeAsync packet_fee */
                    packet_fee?: (ibc.applications.fee.v1.IPacketFee|null);
                }

                /** Represents a MsgPayPacketFeeAsync. */
                class MsgPayPacketFeeAsync implements IMsgPayPacketFeeAsync {

                    /**
                     * Constructs a new MsgPayPacketFeeAsync.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IMsgPayPacketFeeAsync);

                    /** MsgPayPacketFeeAsync packet_id. */
                    public packet_id?: (ibc.core.channel.v1.IPacketId|null);

                    /** MsgPayPacketFeeAsync packet_fee. */
                    public packet_fee?: (ibc.applications.fee.v1.IPacketFee|null);

                    /**
                     * Encodes the specified MsgPayPacketFeeAsync message. Does not implicitly {@link ibc.applications.fee.v1.MsgPayPacketFeeAsync.verify|verify} messages.
                     * @param message MsgPayPacketFeeAsync message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IMsgPayPacketFeeAsync, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgPayPacketFeeAsync message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.MsgPayPacketFeeAsync.verify|verify} messages.
                     * @param message MsgPayPacketFeeAsync message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IMsgPayPacketFeeAsync, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgPayPacketFeeAsync message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgPayPacketFeeAsync
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.MsgPayPacketFeeAsync;

                    /**
                     * Decodes a MsgPayPacketFeeAsync message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgPayPacketFeeAsync
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.MsgPayPacketFeeAsync;

                    /**
                     * Verifies a MsgPayPacketFeeAsync message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgPayPacketFeeAsync message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgPayPacketFeeAsync
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.MsgPayPacketFeeAsync;

                    /**
                     * Creates a plain object from a MsgPayPacketFeeAsync message. Also converts values to other types if specified.
                     * @param message MsgPayPacketFeeAsync
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.MsgPayPacketFeeAsync, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgPayPacketFeeAsync to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgPayPacketFeeAsyncResponse. */
                interface IMsgPayPacketFeeAsyncResponse {
                }

                /** Represents a MsgPayPacketFeeAsyncResponse. */
                class MsgPayPacketFeeAsyncResponse implements IMsgPayPacketFeeAsyncResponse {

                    /**
                     * Constructs a new MsgPayPacketFeeAsyncResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IMsgPayPacketFeeAsyncResponse);

                    /**
                     * Encodes the specified MsgPayPacketFeeAsyncResponse message. Does not implicitly {@link ibc.applications.fee.v1.MsgPayPacketFeeAsyncResponse.verify|verify} messages.
                     * @param message MsgPayPacketFeeAsyncResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IMsgPayPacketFeeAsyncResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgPayPacketFeeAsyncResponse message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.MsgPayPacketFeeAsyncResponse.verify|verify} messages.
                     * @param message MsgPayPacketFeeAsyncResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IMsgPayPacketFeeAsyncResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgPayPacketFeeAsyncResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgPayPacketFeeAsyncResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.MsgPayPacketFeeAsyncResponse;

                    /**
                     * Decodes a MsgPayPacketFeeAsyncResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgPayPacketFeeAsyncResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.MsgPayPacketFeeAsyncResponse;

                    /**
                     * Verifies a MsgPayPacketFeeAsyncResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgPayPacketFeeAsyncResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgPayPacketFeeAsyncResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.MsgPayPacketFeeAsyncResponse;

                    /**
                     * Creates a plain object from a MsgPayPacketFeeAsyncResponse message. Also converts values to other types if specified.
                     * @param message MsgPayPacketFeeAsyncResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.MsgPayPacketFeeAsyncResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgPayPacketFeeAsyncResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Fee. */
                interface IFee {

                    /** Fee recv_fee */
                    recv_fee?: (cosmos.base.v1beta1.ICoin[]|null);

                    /** Fee ack_fee */
                    ack_fee?: (cosmos.base.v1beta1.ICoin[]|null);

                    /** Fee timeout_fee */
                    timeout_fee?: (cosmos.base.v1beta1.ICoin[]|null);
                }

                /** Represents a Fee. */
                class Fee implements IFee {

                    /**
                     * Constructs a new Fee.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IFee);

                    /** Fee recv_fee. */
                    public recv_fee: cosmos.base.v1beta1.ICoin[];

                    /** Fee ack_fee. */
                    public ack_fee: cosmos.base.v1beta1.ICoin[];

                    /** Fee timeout_fee. */
                    public timeout_fee: cosmos.base.v1beta1.ICoin[];

                    /**
                     * Encodes the specified Fee message. Does not implicitly {@link ibc.applications.fee.v1.Fee.verify|verify} messages.
                     * @param message Fee message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IFee, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Fee message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.Fee.verify|verify} messages.
                     * @param message Fee message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IFee, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Fee message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Fee
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.Fee;

                    /**
                     * Decodes a Fee message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Fee
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.Fee;

                    /**
                     * Verifies a Fee message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Fee message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Fee
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.Fee;

                    /**
                     * Creates a plain object from a Fee message. Also converts values to other types if specified.
                     * @param message Fee
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.Fee, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Fee to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a PacketFee. */
                interface IPacketFee {

                    /** PacketFee fee */
                    fee?: (ibc.applications.fee.v1.IFee|null);

                    /** PacketFee refund_address */
                    refund_address?: (string|null);

                    /** PacketFee relayers */
                    relayers?: (string[]|null);
                }

                /** Represents a PacketFee. */
                class PacketFee implements IPacketFee {

                    /**
                     * Constructs a new PacketFee.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IPacketFee);

                    /** PacketFee fee. */
                    public fee?: (ibc.applications.fee.v1.IFee|null);

                    /** PacketFee refund_address. */
                    public refund_address: string;

                    /** PacketFee relayers. */
                    public relayers: string[];

                    /**
                     * Encodes the specified PacketFee message. Does not implicitly {@link ibc.applications.fee.v1.PacketFee.verify|verify} messages.
                     * @param message PacketFee message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IPacketFee, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified PacketFee message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.PacketFee.verify|verify} messages.
                     * @param message PacketFee message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IPacketFee, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a PacketFee message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns PacketFee
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.PacketFee;

                    /**
                     * Decodes a PacketFee message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns PacketFee
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.PacketFee;

                    /**
                     * Verifies a PacketFee message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a PacketFee message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns PacketFee
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.PacketFee;

                    /**
                     * Creates a plain object from a PacketFee message. Also converts values to other types if specified.
                     * @param message PacketFee
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.PacketFee, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this PacketFee to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a PacketFees. */
                interface IPacketFees {

                    /** PacketFees packet_fees */
                    packet_fees?: (ibc.applications.fee.v1.IPacketFee[]|null);
                }

                /** Represents a PacketFees. */
                class PacketFees implements IPacketFees {

                    /**
                     * Constructs a new PacketFees.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IPacketFees);

                    /** PacketFees packet_fees. */
                    public packet_fees: ibc.applications.fee.v1.IPacketFee[];

                    /**
                     * Encodes the specified PacketFees message. Does not implicitly {@link ibc.applications.fee.v1.PacketFees.verify|verify} messages.
                     * @param message PacketFees message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IPacketFees, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified PacketFees message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.PacketFees.verify|verify} messages.
                     * @param message PacketFees message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IPacketFees, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a PacketFees message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns PacketFees
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.PacketFees;

                    /**
                     * Decodes a PacketFees message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns PacketFees
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.PacketFees;

                    /**
                     * Verifies a PacketFees message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a PacketFees message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns PacketFees
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.PacketFees;

                    /**
                     * Creates a plain object from a PacketFees message. Also converts values to other types if specified.
                     * @param message PacketFees
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.PacketFees, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this PacketFees to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of an IdentifiedPacketFees. */
                interface IIdentifiedPacketFees {

                    /** IdentifiedPacketFees packet_id */
                    packet_id?: (ibc.core.channel.v1.IPacketId|null);

                    /** IdentifiedPacketFees packet_fees */
                    packet_fees?: (ibc.applications.fee.v1.IPacketFee[]|null);
                }

                /** Represents an IdentifiedPacketFees. */
                class IdentifiedPacketFees implements IIdentifiedPacketFees {

                    /**
                     * Constructs a new IdentifiedPacketFees.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IIdentifiedPacketFees);

                    /** IdentifiedPacketFees packet_id. */
                    public packet_id?: (ibc.core.channel.v1.IPacketId|null);

                    /** IdentifiedPacketFees packet_fees. */
                    public packet_fees: ibc.applications.fee.v1.IPacketFee[];

                    /**
                     * Encodes the specified IdentifiedPacketFees message. Does not implicitly {@link ibc.applications.fee.v1.IdentifiedPacketFees.verify|verify} messages.
                     * @param message IdentifiedPacketFees message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IIdentifiedPacketFees, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified IdentifiedPacketFees message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.IdentifiedPacketFees.verify|verify} messages.
                     * @param message IdentifiedPacketFees message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IIdentifiedPacketFees, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes an IdentifiedPacketFees message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns IdentifiedPacketFees
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.IdentifiedPacketFees;

                    /**
                     * Decodes an IdentifiedPacketFees message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns IdentifiedPacketFees
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.IdentifiedPacketFees;

                    /**
                     * Verifies an IdentifiedPacketFees message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates an IdentifiedPacketFees message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns IdentifiedPacketFees
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.IdentifiedPacketFees;

                    /**
                     * Creates a plain object from an IdentifiedPacketFees message. Also converts values to other types if specified.
                     * @param message IdentifiedPacketFees
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.IdentifiedPacketFees, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this IdentifiedPacketFees to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of an IncentivizedAcknowledgement. */
                interface IIncentivizedAcknowledgement {

                    /** IncentivizedAcknowledgement app_acknowledgement */
                    app_acknowledgement?: (Uint8Array|null);

                    /** IncentivizedAcknowledgement forward_relayer_address */
                    forward_relayer_address?: (string|null);

                    /** IncentivizedAcknowledgement underlying_app_success */
                    underlying_app_success?: (boolean|null);
                }

                /** Represents an IncentivizedAcknowledgement. */
                class IncentivizedAcknowledgement implements IIncentivizedAcknowledgement {

                    /**
                     * Constructs a new IncentivizedAcknowledgement.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IIncentivizedAcknowledgement);

                    /** IncentivizedAcknowledgement app_acknowledgement. */
                    public app_acknowledgement: Uint8Array;

                    /** IncentivizedAcknowledgement forward_relayer_address. */
                    public forward_relayer_address: string;

                    /** IncentivizedAcknowledgement underlying_app_success. */
                    public underlying_app_success: boolean;

                    /**
                     * Encodes the specified IncentivizedAcknowledgement message. Does not implicitly {@link ibc.applications.fee.v1.IncentivizedAcknowledgement.verify|verify} messages.
                     * @param message IncentivizedAcknowledgement message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IIncentivizedAcknowledgement, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified IncentivizedAcknowledgement message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.IncentivizedAcknowledgement.verify|verify} messages.
                     * @param message IncentivizedAcknowledgement message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IIncentivizedAcknowledgement, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes an IncentivizedAcknowledgement message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns IncentivizedAcknowledgement
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.IncentivizedAcknowledgement;

                    /**
                     * Decodes an IncentivizedAcknowledgement message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns IncentivizedAcknowledgement
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.IncentivizedAcknowledgement;

                    /**
                     * Verifies an IncentivizedAcknowledgement message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates an IncentivizedAcknowledgement message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns IncentivizedAcknowledgement
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.IncentivizedAcknowledgement;

                    /**
                     * Creates a plain object from an IncentivizedAcknowledgement message. Also converts values to other types if specified.
                     * @param message IncentivizedAcknowledgement
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.IncentivizedAcknowledgement, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this IncentivizedAcknowledgement to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Represents a Query */
                class Query extends $protobuf.rpc.Service {

                    /**
                     * Constructs a new Query service.
                     * @param rpcImpl RPC implementation
                     * @param [requestDelimited=false] Whether requests are length-delimited
                     * @param [responseDelimited=false] Whether responses are length-delimited
                     */
                    constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                    /**
                     * Calls IncentivizedPackets.
                     * @param request QueryIncentivizedPacketsRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryIncentivizedPacketsResponse
                     */
                    public incentivizedPackets(request: ibc.applications.fee.v1.IQueryIncentivizedPacketsRequest, callback: ibc.applications.fee.v1.Query.IncentivizedPacketsCallback): void;

                    /**
                     * Calls IncentivizedPackets.
                     * @param request QueryIncentivizedPacketsRequest message or plain object
                     * @returns Promise
                     */
                    public incentivizedPackets(request: ibc.applications.fee.v1.IQueryIncentivizedPacketsRequest): Promise<ibc.applications.fee.v1.QueryIncentivizedPacketsResponse>;

                    /**
                     * Calls IncentivizedPacket.
                     * @param request QueryIncentivizedPacketRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryIncentivizedPacketResponse
                     */
                    public incentivizedPacket(request: ibc.applications.fee.v1.IQueryIncentivizedPacketRequest, callback: ibc.applications.fee.v1.Query.IncentivizedPacketCallback): void;

                    /**
                     * Calls IncentivizedPacket.
                     * @param request QueryIncentivizedPacketRequest message or plain object
                     * @returns Promise
                     */
                    public incentivizedPacket(request: ibc.applications.fee.v1.IQueryIncentivizedPacketRequest): Promise<ibc.applications.fee.v1.QueryIncentivizedPacketResponse>;

                    /**
                     * Calls IncentivizedPacketsForChannel.
                     * @param request QueryIncentivizedPacketsForChannelRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryIncentivizedPacketsForChannelResponse
                     */
                    public incentivizedPacketsForChannel(request: ibc.applications.fee.v1.IQueryIncentivizedPacketsForChannelRequest, callback: ibc.applications.fee.v1.Query.IncentivizedPacketsForChannelCallback): void;

                    /**
                     * Calls IncentivizedPacketsForChannel.
                     * @param request QueryIncentivizedPacketsForChannelRequest message or plain object
                     * @returns Promise
                     */
                    public incentivizedPacketsForChannel(request: ibc.applications.fee.v1.IQueryIncentivizedPacketsForChannelRequest): Promise<ibc.applications.fee.v1.QueryIncentivizedPacketsForChannelResponse>;

                    /**
                     * Calls TotalRecvFees.
                     * @param request QueryTotalRecvFeesRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryTotalRecvFeesResponse
                     */
                    public totalRecvFees(request: ibc.applications.fee.v1.IQueryTotalRecvFeesRequest, callback: ibc.applications.fee.v1.Query.TotalRecvFeesCallback): void;

                    /**
                     * Calls TotalRecvFees.
                     * @param request QueryTotalRecvFeesRequest message or plain object
                     * @returns Promise
                     */
                    public totalRecvFees(request: ibc.applications.fee.v1.IQueryTotalRecvFeesRequest): Promise<ibc.applications.fee.v1.QueryTotalRecvFeesResponse>;

                    /**
                     * Calls TotalAckFees.
                     * @param request QueryTotalAckFeesRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryTotalAckFeesResponse
                     */
                    public totalAckFees(request: ibc.applications.fee.v1.IQueryTotalAckFeesRequest, callback: ibc.applications.fee.v1.Query.TotalAckFeesCallback): void;

                    /**
                     * Calls TotalAckFees.
                     * @param request QueryTotalAckFeesRequest message or plain object
                     * @returns Promise
                     */
                    public totalAckFees(request: ibc.applications.fee.v1.IQueryTotalAckFeesRequest): Promise<ibc.applications.fee.v1.QueryTotalAckFeesResponse>;

                    /**
                     * Calls TotalTimeoutFees.
                     * @param request QueryTotalTimeoutFeesRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryTotalTimeoutFeesResponse
                     */
                    public totalTimeoutFees(request: ibc.applications.fee.v1.IQueryTotalTimeoutFeesRequest, callback: ibc.applications.fee.v1.Query.TotalTimeoutFeesCallback): void;

                    /**
                     * Calls TotalTimeoutFees.
                     * @param request QueryTotalTimeoutFeesRequest message or plain object
                     * @returns Promise
                     */
                    public totalTimeoutFees(request: ibc.applications.fee.v1.IQueryTotalTimeoutFeesRequest): Promise<ibc.applications.fee.v1.QueryTotalTimeoutFeesResponse>;

                    /**
                     * Calls Payee.
                     * @param request QueryPayeeRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryPayeeResponse
                     */
                    public payee(request: ibc.applications.fee.v1.IQueryPayeeRequest, callback: ibc.applications.fee.v1.Query.PayeeCallback): void;

                    /**
                     * Calls Payee.
                     * @param request QueryPayeeRequest message or plain object
                     * @returns Promise
                     */
                    public payee(request: ibc.applications.fee.v1.IQueryPayeeRequest): Promise<ibc.applications.fee.v1.QueryPayeeResponse>;

                    /**
                     * Calls CounterpartyPayee.
                     * @param request QueryCounterpartyPayeeRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryCounterpartyPayeeResponse
                     */
                    public counterpartyPayee(request: ibc.applications.fee.v1.IQueryCounterpartyPayeeRequest, callback: ibc.applications.fee.v1.Query.CounterpartyPayeeCallback): void;

                    /**
                     * Calls CounterpartyPayee.
                     * @param request QueryCounterpartyPayeeRequest message or plain object
                     * @returns Promise
                     */
                    public counterpartyPayee(request: ibc.applications.fee.v1.IQueryCounterpartyPayeeRequest): Promise<ibc.applications.fee.v1.QueryCounterpartyPayeeResponse>;

                    /**
                     * Calls FeeEnabledChannels.
                     * @param request QueryFeeEnabledChannelsRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryFeeEnabledChannelsResponse
                     */
                    public feeEnabledChannels(request: ibc.applications.fee.v1.IQueryFeeEnabledChannelsRequest, callback: ibc.applications.fee.v1.Query.FeeEnabledChannelsCallback): void;

                    /**
                     * Calls FeeEnabledChannels.
                     * @param request QueryFeeEnabledChannelsRequest message or plain object
                     * @returns Promise
                     */
                    public feeEnabledChannels(request: ibc.applications.fee.v1.IQueryFeeEnabledChannelsRequest): Promise<ibc.applications.fee.v1.QueryFeeEnabledChannelsResponse>;

                    /**
                     * Calls FeeEnabledChannel.
                     * @param request QueryFeeEnabledChannelRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryFeeEnabledChannelResponse
                     */
                    public feeEnabledChannel(request: ibc.applications.fee.v1.IQueryFeeEnabledChannelRequest, callback: ibc.applications.fee.v1.Query.FeeEnabledChannelCallback): void;

                    /**
                     * Calls FeeEnabledChannel.
                     * @param request QueryFeeEnabledChannelRequest message or plain object
                     * @returns Promise
                     */
                    public feeEnabledChannel(request: ibc.applications.fee.v1.IQueryFeeEnabledChannelRequest): Promise<ibc.applications.fee.v1.QueryFeeEnabledChannelResponse>;
                }

                namespace Query {

                    /**
                     * Callback as used by {@link ibc.applications.fee.v1.Query#incentivizedPackets}.
                     * @param error Error, if any
                     * @param [response] QueryIncentivizedPacketsResponse
                     */
                    type IncentivizedPacketsCallback = (error: (Error|null), response?: ibc.applications.fee.v1.QueryIncentivizedPacketsResponse) => void;

                    /**
                     * Callback as used by {@link ibc.applications.fee.v1.Query#incentivizedPacket}.
                     * @param error Error, if any
                     * @param [response] QueryIncentivizedPacketResponse
                     */
                    type IncentivizedPacketCallback = (error: (Error|null), response?: ibc.applications.fee.v1.QueryIncentivizedPacketResponse) => void;

                    /**
                     * Callback as used by {@link ibc.applications.fee.v1.Query#incentivizedPacketsForChannel}.
                     * @param error Error, if any
                     * @param [response] QueryIncentivizedPacketsForChannelResponse
                     */
                    type IncentivizedPacketsForChannelCallback = (error: (Error|null), response?: ibc.applications.fee.v1.QueryIncentivizedPacketsForChannelResponse) => void;

                    /**
                     * Callback as used by {@link ibc.applications.fee.v1.Query#totalRecvFees}.
                     * @param error Error, if any
                     * @param [response] QueryTotalRecvFeesResponse
                     */
                    type TotalRecvFeesCallback = (error: (Error|null), response?: ibc.applications.fee.v1.QueryTotalRecvFeesResponse) => void;

                    /**
                     * Callback as used by {@link ibc.applications.fee.v1.Query#totalAckFees}.
                     * @param error Error, if any
                     * @param [response] QueryTotalAckFeesResponse
                     */
                    type TotalAckFeesCallback = (error: (Error|null), response?: ibc.applications.fee.v1.QueryTotalAckFeesResponse) => void;

                    /**
                     * Callback as used by {@link ibc.applications.fee.v1.Query#totalTimeoutFees}.
                     * @param error Error, if any
                     * @param [response] QueryTotalTimeoutFeesResponse
                     */
                    type TotalTimeoutFeesCallback = (error: (Error|null), response?: ibc.applications.fee.v1.QueryTotalTimeoutFeesResponse) => void;

                    /**
                     * Callback as used by {@link ibc.applications.fee.v1.Query#payee}.
                     * @param error Error, if any
                     * @param [response] QueryPayeeResponse
                     */
                    type PayeeCallback = (error: (Error|null), response?: ibc.applications.fee.v1.QueryPayeeResponse) => void;

                    /**
                     * Callback as used by {@link ibc.applications.fee.v1.Query#counterpartyPayee}.
                     * @param error Error, if any
                     * @param [response] QueryCounterpartyPayeeResponse
                     */
                    type CounterpartyPayeeCallback = (error: (Error|null), response?: ibc.applications.fee.v1.QueryCounterpartyPayeeResponse) => void;

                    /**
                     * Callback as used by {@link ibc.applications.fee.v1.Query#feeEnabledChannels}.
                     * @param error Error, if any
                     * @param [response] QueryFeeEnabledChannelsResponse
                     */
                    type FeeEnabledChannelsCallback = (error: (Error|null), response?: ibc.applications.fee.v1.QueryFeeEnabledChannelsResponse) => void;

                    /**
                     * Callback as used by {@link ibc.applications.fee.v1.Query#feeEnabledChannel}.
                     * @param error Error, if any
                     * @param [response] QueryFeeEnabledChannelResponse
                     */
                    type FeeEnabledChannelCallback = (error: (Error|null), response?: ibc.applications.fee.v1.QueryFeeEnabledChannelResponse) => void;
                }

                /** Properties of a QueryIncentivizedPacketsRequest. */
                interface IQueryIncentivizedPacketsRequest {

                    /** QueryIncentivizedPacketsRequest pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /** QueryIncentivizedPacketsRequest query_height */
                    query_height?: (Long|null);
                }

                /** Represents a QueryIncentivizedPacketsRequest. */
                class QueryIncentivizedPacketsRequest implements IQueryIncentivizedPacketsRequest {

                    /**
                     * Constructs a new QueryIncentivizedPacketsRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IQueryIncentivizedPacketsRequest);

                    /** QueryIncentivizedPacketsRequest pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /** QueryIncentivizedPacketsRequest query_height. */
                    public query_height: Long;

                    /**
                     * Encodes the specified QueryIncentivizedPacketsRequest message. Does not implicitly {@link ibc.applications.fee.v1.QueryIncentivizedPacketsRequest.verify|verify} messages.
                     * @param message QueryIncentivizedPacketsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IQueryIncentivizedPacketsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryIncentivizedPacketsRequest message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.QueryIncentivizedPacketsRequest.verify|verify} messages.
                     * @param message QueryIncentivizedPacketsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IQueryIncentivizedPacketsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryIncentivizedPacketsRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryIncentivizedPacketsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.QueryIncentivizedPacketsRequest;

                    /**
                     * Decodes a QueryIncentivizedPacketsRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryIncentivizedPacketsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.QueryIncentivizedPacketsRequest;

                    /**
                     * Verifies a QueryIncentivizedPacketsRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryIncentivizedPacketsRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryIncentivizedPacketsRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.QueryIncentivizedPacketsRequest;

                    /**
                     * Creates a plain object from a QueryIncentivizedPacketsRequest message. Also converts values to other types if specified.
                     * @param message QueryIncentivizedPacketsRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.QueryIncentivizedPacketsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryIncentivizedPacketsRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryIncentivizedPacketsResponse. */
                interface IQueryIncentivizedPacketsResponse {

                    /** QueryIncentivizedPacketsResponse incentivized_packets */
                    incentivized_packets?: (ibc.applications.fee.v1.IIdentifiedPacketFees[]|null);
                }

                /** Represents a QueryIncentivizedPacketsResponse. */
                class QueryIncentivizedPacketsResponse implements IQueryIncentivizedPacketsResponse {

                    /**
                     * Constructs a new QueryIncentivizedPacketsResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IQueryIncentivizedPacketsResponse);

                    /** QueryIncentivizedPacketsResponse incentivized_packets. */
                    public incentivized_packets: ibc.applications.fee.v1.IIdentifiedPacketFees[];

                    /**
                     * Encodes the specified QueryIncentivizedPacketsResponse message. Does not implicitly {@link ibc.applications.fee.v1.QueryIncentivizedPacketsResponse.verify|verify} messages.
                     * @param message QueryIncentivizedPacketsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IQueryIncentivizedPacketsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryIncentivizedPacketsResponse message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.QueryIncentivizedPacketsResponse.verify|verify} messages.
                     * @param message QueryIncentivizedPacketsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IQueryIncentivizedPacketsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryIncentivizedPacketsResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryIncentivizedPacketsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.QueryIncentivizedPacketsResponse;

                    /**
                     * Decodes a QueryIncentivizedPacketsResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryIncentivizedPacketsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.QueryIncentivizedPacketsResponse;

                    /**
                     * Verifies a QueryIncentivizedPacketsResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryIncentivizedPacketsResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryIncentivizedPacketsResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.QueryIncentivizedPacketsResponse;

                    /**
                     * Creates a plain object from a QueryIncentivizedPacketsResponse message. Also converts values to other types if specified.
                     * @param message QueryIncentivizedPacketsResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.QueryIncentivizedPacketsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryIncentivizedPacketsResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryIncentivizedPacketRequest. */
                interface IQueryIncentivizedPacketRequest {

                    /** QueryIncentivizedPacketRequest packet_id */
                    packet_id?: (ibc.core.channel.v1.IPacketId|null);

                    /** QueryIncentivizedPacketRequest query_height */
                    query_height?: (Long|null);
                }

                /** Represents a QueryIncentivizedPacketRequest. */
                class QueryIncentivizedPacketRequest implements IQueryIncentivizedPacketRequest {

                    /**
                     * Constructs a new QueryIncentivizedPacketRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IQueryIncentivizedPacketRequest);

                    /** QueryIncentivizedPacketRequest packet_id. */
                    public packet_id?: (ibc.core.channel.v1.IPacketId|null);

                    /** QueryIncentivizedPacketRequest query_height. */
                    public query_height: Long;

                    /**
                     * Encodes the specified QueryIncentivizedPacketRequest message. Does not implicitly {@link ibc.applications.fee.v1.QueryIncentivizedPacketRequest.verify|verify} messages.
                     * @param message QueryIncentivizedPacketRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IQueryIncentivizedPacketRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryIncentivizedPacketRequest message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.QueryIncentivizedPacketRequest.verify|verify} messages.
                     * @param message QueryIncentivizedPacketRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IQueryIncentivizedPacketRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryIncentivizedPacketRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryIncentivizedPacketRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.QueryIncentivizedPacketRequest;

                    /**
                     * Decodes a QueryIncentivizedPacketRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryIncentivizedPacketRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.QueryIncentivizedPacketRequest;

                    /**
                     * Verifies a QueryIncentivizedPacketRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryIncentivizedPacketRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryIncentivizedPacketRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.QueryIncentivizedPacketRequest;

                    /**
                     * Creates a plain object from a QueryIncentivizedPacketRequest message. Also converts values to other types if specified.
                     * @param message QueryIncentivizedPacketRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.QueryIncentivizedPacketRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryIncentivizedPacketRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryIncentivizedPacketResponse. */
                interface IQueryIncentivizedPacketResponse {

                    /** QueryIncentivizedPacketResponse incentivized_packet */
                    incentivized_packet?: (ibc.applications.fee.v1.IIdentifiedPacketFees|null);
                }

                /** Represents a QueryIncentivizedPacketResponse. */
                class QueryIncentivizedPacketResponse implements IQueryIncentivizedPacketResponse {

                    /**
                     * Constructs a new QueryIncentivizedPacketResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IQueryIncentivizedPacketResponse);

                    /** QueryIncentivizedPacketResponse incentivized_packet. */
                    public incentivized_packet?: (ibc.applications.fee.v1.IIdentifiedPacketFees|null);

                    /**
                     * Encodes the specified QueryIncentivizedPacketResponse message. Does not implicitly {@link ibc.applications.fee.v1.QueryIncentivizedPacketResponse.verify|verify} messages.
                     * @param message QueryIncentivizedPacketResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IQueryIncentivizedPacketResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryIncentivizedPacketResponse message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.QueryIncentivizedPacketResponse.verify|verify} messages.
                     * @param message QueryIncentivizedPacketResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IQueryIncentivizedPacketResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryIncentivizedPacketResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryIncentivizedPacketResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.QueryIncentivizedPacketResponse;

                    /**
                     * Decodes a QueryIncentivizedPacketResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryIncentivizedPacketResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.QueryIncentivizedPacketResponse;

                    /**
                     * Verifies a QueryIncentivizedPacketResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryIncentivizedPacketResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryIncentivizedPacketResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.QueryIncentivizedPacketResponse;

                    /**
                     * Creates a plain object from a QueryIncentivizedPacketResponse message. Also converts values to other types if specified.
                     * @param message QueryIncentivizedPacketResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.QueryIncentivizedPacketResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryIncentivizedPacketResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryIncentivizedPacketsForChannelRequest. */
                interface IQueryIncentivizedPacketsForChannelRequest {

                    /** QueryIncentivizedPacketsForChannelRequest pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /** QueryIncentivizedPacketsForChannelRequest port_id */
                    port_id?: (string|null);

                    /** QueryIncentivizedPacketsForChannelRequest channel_id */
                    channel_id?: (string|null);

                    /** QueryIncentivizedPacketsForChannelRequest query_height */
                    query_height?: (Long|null);
                }

                /** Represents a QueryIncentivizedPacketsForChannelRequest. */
                class QueryIncentivizedPacketsForChannelRequest implements IQueryIncentivizedPacketsForChannelRequest {

                    /**
                     * Constructs a new QueryIncentivizedPacketsForChannelRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IQueryIncentivizedPacketsForChannelRequest);

                    /** QueryIncentivizedPacketsForChannelRequest pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /** QueryIncentivizedPacketsForChannelRequest port_id. */
                    public port_id: string;

                    /** QueryIncentivizedPacketsForChannelRequest channel_id. */
                    public channel_id: string;

                    /** QueryIncentivizedPacketsForChannelRequest query_height. */
                    public query_height: Long;

                    /**
                     * Encodes the specified QueryIncentivizedPacketsForChannelRequest message. Does not implicitly {@link ibc.applications.fee.v1.QueryIncentivizedPacketsForChannelRequest.verify|verify} messages.
                     * @param message QueryIncentivizedPacketsForChannelRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IQueryIncentivizedPacketsForChannelRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryIncentivizedPacketsForChannelRequest message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.QueryIncentivizedPacketsForChannelRequest.verify|verify} messages.
                     * @param message QueryIncentivizedPacketsForChannelRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IQueryIncentivizedPacketsForChannelRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryIncentivizedPacketsForChannelRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryIncentivizedPacketsForChannelRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.QueryIncentivizedPacketsForChannelRequest;

                    /**
                     * Decodes a QueryIncentivizedPacketsForChannelRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryIncentivizedPacketsForChannelRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.QueryIncentivizedPacketsForChannelRequest;

                    /**
                     * Verifies a QueryIncentivizedPacketsForChannelRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryIncentivizedPacketsForChannelRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryIncentivizedPacketsForChannelRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.QueryIncentivizedPacketsForChannelRequest;

                    /**
                     * Creates a plain object from a QueryIncentivizedPacketsForChannelRequest message. Also converts values to other types if specified.
                     * @param message QueryIncentivizedPacketsForChannelRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.QueryIncentivizedPacketsForChannelRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryIncentivizedPacketsForChannelRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryIncentivizedPacketsForChannelResponse. */
                interface IQueryIncentivizedPacketsForChannelResponse {

                    /** QueryIncentivizedPacketsForChannelResponse incentivized_packets */
                    incentivized_packets?: (ibc.applications.fee.v1.IIdentifiedPacketFees[]|null);
                }

                /** Represents a QueryIncentivizedPacketsForChannelResponse. */
                class QueryIncentivizedPacketsForChannelResponse implements IQueryIncentivizedPacketsForChannelResponse {

                    /**
                     * Constructs a new QueryIncentivizedPacketsForChannelResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IQueryIncentivizedPacketsForChannelResponse);

                    /** QueryIncentivizedPacketsForChannelResponse incentivized_packets. */
                    public incentivized_packets: ibc.applications.fee.v1.IIdentifiedPacketFees[];

                    /**
                     * Encodes the specified QueryIncentivizedPacketsForChannelResponse message. Does not implicitly {@link ibc.applications.fee.v1.QueryIncentivizedPacketsForChannelResponse.verify|verify} messages.
                     * @param message QueryIncentivizedPacketsForChannelResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IQueryIncentivizedPacketsForChannelResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryIncentivizedPacketsForChannelResponse message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.QueryIncentivizedPacketsForChannelResponse.verify|verify} messages.
                     * @param message QueryIncentivizedPacketsForChannelResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IQueryIncentivizedPacketsForChannelResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryIncentivizedPacketsForChannelResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryIncentivizedPacketsForChannelResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.QueryIncentivizedPacketsForChannelResponse;

                    /**
                     * Decodes a QueryIncentivizedPacketsForChannelResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryIncentivizedPacketsForChannelResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.QueryIncentivizedPacketsForChannelResponse;

                    /**
                     * Verifies a QueryIncentivizedPacketsForChannelResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryIncentivizedPacketsForChannelResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryIncentivizedPacketsForChannelResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.QueryIncentivizedPacketsForChannelResponse;

                    /**
                     * Creates a plain object from a QueryIncentivizedPacketsForChannelResponse message. Also converts values to other types if specified.
                     * @param message QueryIncentivizedPacketsForChannelResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.QueryIncentivizedPacketsForChannelResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryIncentivizedPacketsForChannelResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryTotalRecvFeesRequest. */
                interface IQueryTotalRecvFeesRequest {

                    /** QueryTotalRecvFeesRequest packet_id */
                    packet_id?: (ibc.core.channel.v1.IPacketId|null);
                }

                /** Represents a QueryTotalRecvFeesRequest. */
                class QueryTotalRecvFeesRequest implements IQueryTotalRecvFeesRequest {

                    /**
                     * Constructs a new QueryTotalRecvFeesRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IQueryTotalRecvFeesRequest);

                    /** QueryTotalRecvFeesRequest packet_id. */
                    public packet_id?: (ibc.core.channel.v1.IPacketId|null);

                    /**
                     * Encodes the specified QueryTotalRecvFeesRequest message. Does not implicitly {@link ibc.applications.fee.v1.QueryTotalRecvFeesRequest.verify|verify} messages.
                     * @param message QueryTotalRecvFeesRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IQueryTotalRecvFeesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryTotalRecvFeesRequest message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.QueryTotalRecvFeesRequest.verify|verify} messages.
                     * @param message QueryTotalRecvFeesRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IQueryTotalRecvFeesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryTotalRecvFeesRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryTotalRecvFeesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.QueryTotalRecvFeesRequest;

                    /**
                     * Decodes a QueryTotalRecvFeesRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryTotalRecvFeesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.QueryTotalRecvFeesRequest;

                    /**
                     * Verifies a QueryTotalRecvFeesRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryTotalRecvFeesRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryTotalRecvFeesRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.QueryTotalRecvFeesRequest;

                    /**
                     * Creates a plain object from a QueryTotalRecvFeesRequest message. Also converts values to other types if specified.
                     * @param message QueryTotalRecvFeesRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.QueryTotalRecvFeesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryTotalRecvFeesRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryTotalRecvFeesResponse. */
                interface IQueryTotalRecvFeesResponse {

                    /** QueryTotalRecvFeesResponse recv_fees */
                    recv_fees?: (cosmos.base.v1beta1.ICoin[]|null);
                }

                /** Represents a QueryTotalRecvFeesResponse. */
                class QueryTotalRecvFeesResponse implements IQueryTotalRecvFeesResponse {

                    /**
                     * Constructs a new QueryTotalRecvFeesResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IQueryTotalRecvFeesResponse);

                    /** QueryTotalRecvFeesResponse recv_fees. */
                    public recv_fees: cosmos.base.v1beta1.ICoin[];

                    /**
                     * Encodes the specified QueryTotalRecvFeesResponse message. Does not implicitly {@link ibc.applications.fee.v1.QueryTotalRecvFeesResponse.verify|verify} messages.
                     * @param message QueryTotalRecvFeesResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IQueryTotalRecvFeesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryTotalRecvFeesResponse message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.QueryTotalRecvFeesResponse.verify|verify} messages.
                     * @param message QueryTotalRecvFeesResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IQueryTotalRecvFeesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryTotalRecvFeesResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryTotalRecvFeesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.QueryTotalRecvFeesResponse;

                    /**
                     * Decodes a QueryTotalRecvFeesResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryTotalRecvFeesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.QueryTotalRecvFeesResponse;

                    /**
                     * Verifies a QueryTotalRecvFeesResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryTotalRecvFeesResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryTotalRecvFeesResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.QueryTotalRecvFeesResponse;

                    /**
                     * Creates a plain object from a QueryTotalRecvFeesResponse message. Also converts values to other types if specified.
                     * @param message QueryTotalRecvFeesResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.QueryTotalRecvFeesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryTotalRecvFeesResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryTotalAckFeesRequest. */
                interface IQueryTotalAckFeesRequest {

                    /** QueryTotalAckFeesRequest packet_id */
                    packet_id?: (ibc.core.channel.v1.IPacketId|null);
                }

                /** Represents a QueryTotalAckFeesRequest. */
                class QueryTotalAckFeesRequest implements IQueryTotalAckFeesRequest {

                    /**
                     * Constructs a new QueryTotalAckFeesRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IQueryTotalAckFeesRequest);

                    /** QueryTotalAckFeesRequest packet_id. */
                    public packet_id?: (ibc.core.channel.v1.IPacketId|null);

                    /**
                     * Encodes the specified QueryTotalAckFeesRequest message. Does not implicitly {@link ibc.applications.fee.v1.QueryTotalAckFeesRequest.verify|verify} messages.
                     * @param message QueryTotalAckFeesRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IQueryTotalAckFeesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryTotalAckFeesRequest message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.QueryTotalAckFeesRequest.verify|verify} messages.
                     * @param message QueryTotalAckFeesRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IQueryTotalAckFeesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryTotalAckFeesRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryTotalAckFeesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.QueryTotalAckFeesRequest;

                    /**
                     * Decodes a QueryTotalAckFeesRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryTotalAckFeesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.QueryTotalAckFeesRequest;

                    /**
                     * Verifies a QueryTotalAckFeesRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryTotalAckFeesRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryTotalAckFeesRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.QueryTotalAckFeesRequest;

                    /**
                     * Creates a plain object from a QueryTotalAckFeesRequest message. Also converts values to other types if specified.
                     * @param message QueryTotalAckFeesRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.QueryTotalAckFeesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryTotalAckFeesRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryTotalAckFeesResponse. */
                interface IQueryTotalAckFeesResponse {

                    /** QueryTotalAckFeesResponse ack_fees */
                    ack_fees?: (cosmos.base.v1beta1.ICoin[]|null);
                }

                /** Represents a QueryTotalAckFeesResponse. */
                class QueryTotalAckFeesResponse implements IQueryTotalAckFeesResponse {

                    /**
                     * Constructs a new QueryTotalAckFeesResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IQueryTotalAckFeesResponse);

                    /** QueryTotalAckFeesResponse ack_fees. */
                    public ack_fees: cosmos.base.v1beta1.ICoin[];

                    /**
                     * Encodes the specified QueryTotalAckFeesResponse message. Does not implicitly {@link ibc.applications.fee.v1.QueryTotalAckFeesResponse.verify|verify} messages.
                     * @param message QueryTotalAckFeesResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IQueryTotalAckFeesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryTotalAckFeesResponse message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.QueryTotalAckFeesResponse.verify|verify} messages.
                     * @param message QueryTotalAckFeesResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IQueryTotalAckFeesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryTotalAckFeesResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryTotalAckFeesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.QueryTotalAckFeesResponse;

                    /**
                     * Decodes a QueryTotalAckFeesResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryTotalAckFeesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.QueryTotalAckFeesResponse;

                    /**
                     * Verifies a QueryTotalAckFeesResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryTotalAckFeesResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryTotalAckFeesResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.QueryTotalAckFeesResponse;

                    /**
                     * Creates a plain object from a QueryTotalAckFeesResponse message. Also converts values to other types if specified.
                     * @param message QueryTotalAckFeesResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.QueryTotalAckFeesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryTotalAckFeesResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryTotalTimeoutFeesRequest. */
                interface IQueryTotalTimeoutFeesRequest {

                    /** QueryTotalTimeoutFeesRequest packet_id */
                    packet_id?: (ibc.core.channel.v1.IPacketId|null);
                }

                /** Represents a QueryTotalTimeoutFeesRequest. */
                class QueryTotalTimeoutFeesRequest implements IQueryTotalTimeoutFeesRequest {

                    /**
                     * Constructs a new QueryTotalTimeoutFeesRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IQueryTotalTimeoutFeesRequest);

                    /** QueryTotalTimeoutFeesRequest packet_id. */
                    public packet_id?: (ibc.core.channel.v1.IPacketId|null);

                    /**
                     * Encodes the specified QueryTotalTimeoutFeesRequest message. Does not implicitly {@link ibc.applications.fee.v1.QueryTotalTimeoutFeesRequest.verify|verify} messages.
                     * @param message QueryTotalTimeoutFeesRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IQueryTotalTimeoutFeesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryTotalTimeoutFeesRequest message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.QueryTotalTimeoutFeesRequest.verify|verify} messages.
                     * @param message QueryTotalTimeoutFeesRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IQueryTotalTimeoutFeesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryTotalTimeoutFeesRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryTotalTimeoutFeesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.QueryTotalTimeoutFeesRequest;

                    /**
                     * Decodes a QueryTotalTimeoutFeesRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryTotalTimeoutFeesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.QueryTotalTimeoutFeesRequest;

                    /**
                     * Verifies a QueryTotalTimeoutFeesRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryTotalTimeoutFeesRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryTotalTimeoutFeesRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.QueryTotalTimeoutFeesRequest;

                    /**
                     * Creates a plain object from a QueryTotalTimeoutFeesRequest message. Also converts values to other types if specified.
                     * @param message QueryTotalTimeoutFeesRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.QueryTotalTimeoutFeesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryTotalTimeoutFeesRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryTotalTimeoutFeesResponse. */
                interface IQueryTotalTimeoutFeesResponse {

                    /** QueryTotalTimeoutFeesResponse timeout_fees */
                    timeout_fees?: (cosmos.base.v1beta1.ICoin[]|null);
                }

                /** Represents a QueryTotalTimeoutFeesResponse. */
                class QueryTotalTimeoutFeesResponse implements IQueryTotalTimeoutFeesResponse {

                    /**
                     * Constructs a new QueryTotalTimeoutFeesResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IQueryTotalTimeoutFeesResponse);

                    /** QueryTotalTimeoutFeesResponse timeout_fees. */
                    public timeout_fees: cosmos.base.v1beta1.ICoin[];

                    /**
                     * Encodes the specified QueryTotalTimeoutFeesResponse message. Does not implicitly {@link ibc.applications.fee.v1.QueryTotalTimeoutFeesResponse.verify|verify} messages.
                     * @param message QueryTotalTimeoutFeesResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IQueryTotalTimeoutFeesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryTotalTimeoutFeesResponse message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.QueryTotalTimeoutFeesResponse.verify|verify} messages.
                     * @param message QueryTotalTimeoutFeesResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IQueryTotalTimeoutFeesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryTotalTimeoutFeesResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryTotalTimeoutFeesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.QueryTotalTimeoutFeesResponse;

                    /**
                     * Decodes a QueryTotalTimeoutFeesResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryTotalTimeoutFeesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.QueryTotalTimeoutFeesResponse;

                    /**
                     * Verifies a QueryTotalTimeoutFeesResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryTotalTimeoutFeesResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryTotalTimeoutFeesResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.QueryTotalTimeoutFeesResponse;

                    /**
                     * Creates a plain object from a QueryTotalTimeoutFeesResponse message. Also converts values to other types if specified.
                     * @param message QueryTotalTimeoutFeesResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.QueryTotalTimeoutFeesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryTotalTimeoutFeesResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryPayeeRequest. */
                interface IQueryPayeeRequest {

                    /** QueryPayeeRequest channel_id */
                    channel_id?: (string|null);

                    /** QueryPayeeRequest relayer */
                    relayer?: (string|null);
                }

                /** Represents a QueryPayeeRequest. */
                class QueryPayeeRequest implements IQueryPayeeRequest {

                    /**
                     * Constructs a new QueryPayeeRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IQueryPayeeRequest);

                    /** QueryPayeeRequest channel_id. */
                    public channel_id: string;

                    /** QueryPayeeRequest relayer. */
                    public relayer: string;

                    /**
                     * Encodes the specified QueryPayeeRequest message. Does not implicitly {@link ibc.applications.fee.v1.QueryPayeeRequest.verify|verify} messages.
                     * @param message QueryPayeeRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IQueryPayeeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryPayeeRequest message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.QueryPayeeRequest.verify|verify} messages.
                     * @param message QueryPayeeRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IQueryPayeeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryPayeeRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryPayeeRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.QueryPayeeRequest;

                    /**
                     * Decodes a QueryPayeeRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryPayeeRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.QueryPayeeRequest;

                    /**
                     * Verifies a QueryPayeeRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryPayeeRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryPayeeRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.QueryPayeeRequest;

                    /**
                     * Creates a plain object from a QueryPayeeRequest message. Also converts values to other types if specified.
                     * @param message QueryPayeeRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.QueryPayeeRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryPayeeRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryPayeeResponse. */
                interface IQueryPayeeResponse {

                    /** QueryPayeeResponse payee_address */
                    payee_address?: (string|null);
                }

                /** Represents a QueryPayeeResponse. */
                class QueryPayeeResponse implements IQueryPayeeResponse {

                    /**
                     * Constructs a new QueryPayeeResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IQueryPayeeResponse);

                    /** QueryPayeeResponse payee_address. */
                    public payee_address: string;

                    /**
                     * Encodes the specified QueryPayeeResponse message. Does not implicitly {@link ibc.applications.fee.v1.QueryPayeeResponse.verify|verify} messages.
                     * @param message QueryPayeeResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IQueryPayeeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryPayeeResponse message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.QueryPayeeResponse.verify|verify} messages.
                     * @param message QueryPayeeResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IQueryPayeeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryPayeeResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryPayeeResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.QueryPayeeResponse;

                    /**
                     * Decodes a QueryPayeeResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryPayeeResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.QueryPayeeResponse;

                    /**
                     * Verifies a QueryPayeeResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryPayeeResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryPayeeResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.QueryPayeeResponse;

                    /**
                     * Creates a plain object from a QueryPayeeResponse message. Also converts values to other types if specified.
                     * @param message QueryPayeeResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.QueryPayeeResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryPayeeResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryCounterpartyPayeeRequest. */
                interface IQueryCounterpartyPayeeRequest {

                    /** QueryCounterpartyPayeeRequest channel_id */
                    channel_id?: (string|null);

                    /** QueryCounterpartyPayeeRequest relayer */
                    relayer?: (string|null);
                }

                /** Represents a QueryCounterpartyPayeeRequest. */
                class QueryCounterpartyPayeeRequest implements IQueryCounterpartyPayeeRequest {

                    /**
                     * Constructs a new QueryCounterpartyPayeeRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IQueryCounterpartyPayeeRequest);

                    /** QueryCounterpartyPayeeRequest channel_id. */
                    public channel_id: string;

                    /** QueryCounterpartyPayeeRequest relayer. */
                    public relayer: string;

                    /**
                     * Encodes the specified QueryCounterpartyPayeeRequest message. Does not implicitly {@link ibc.applications.fee.v1.QueryCounterpartyPayeeRequest.verify|verify} messages.
                     * @param message QueryCounterpartyPayeeRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IQueryCounterpartyPayeeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryCounterpartyPayeeRequest message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.QueryCounterpartyPayeeRequest.verify|verify} messages.
                     * @param message QueryCounterpartyPayeeRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IQueryCounterpartyPayeeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryCounterpartyPayeeRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryCounterpartyPayeeRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.QueryCounterpartyPayeeRequest;

                    /**
                     * Decodes a QueryCounterpartyPayeeRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryCounterpartyPayeeRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.QueryCounterpartyPayeeRequest;

                    /**
                     * Verifies a QueryCounterpartyPayeeRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryCounterpartyPayeeRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryCounterpartyPayeeRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.QueryCounterpartyPayeeRequest;

                    /**
                     * Creates a plain object from a QueryCounterpartyPayeeRequest message. Also converts values to other types if specified.
                     * @param message QueryCounterpartyPayeeRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.QueryCounterpartyPayeeRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryCounterpartyPayeeRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryCounterpartyPayeeResponse. */
                interface IQueryCounterpartyPayeeResponse {

                    /** QueryCounterpartyPayeeResponse counterparty_payee */
                    counterparty_payee?: (string|null);
                }

                /** Represents a QueryCounterpartyPayeeResponse. */
                class QueryCounterpartyPayeeResponse implements IQueryCounterpartyPayeeResponse {

                    /**
                     * Constructs a new QueryCounterpartyPayeeResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IQueryCounterpartyPayeeResponse);

                    /** QueryCounterpartyPayeeResponse counterparty_payee. */
                    public counterparty_payee: string;

                    /**
                     * Encodes the specified QueryCounterpartyPayeeResponse message. Does not implicitly {@link ibc.applications.fee.v1.QueryCounterpartyPayeeResponse.verify|verify} messages.
                     * @param message QueryCounterpartyPayeeResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IQueryCounterpartyPayeeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryCounterpartyPayeeResponse message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.QueryCounterpartyPayeeResponse.verify|verify} messages.
                     * @param message QueryCounterpartyPayeeResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IQueryCounterpartyPayeeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryCounterpartyPayeeResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryCounterpartyPayeeResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.QueryCounterpartyPayeeResponse;

                    /**
                     * Decodes a QueryCounterpartyPayeeResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryCounterpartyPayeeResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.QueryCounterpartyPayeeResponse;

                    /**
                     * Verifies a QueryCounterpartyPayeeResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryCounterpartyPayeeResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryCounterpartyPayeeResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.QueryCounterpartyPayeeResponse;

                    /**
                     * Creates a plain object from a QueryCounterpartyPayeeResponse message. Also converts values to other types if specified.
                     * @param message QueryCounterpartyPayeeResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.QueryCounterpartyPayeeResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryCounterpartyPayeeResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryFeeEnabledChannelsRequest. */
                interface IQueryFeeEnabledChannelsRequest {

                    /** QueryFeeEnabledChannelsRequest pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /** QueryFeeEnabledChannelsRequest query_height */
                    query_height?: (Long|null);
                }

                /** Represents a QueryFeeEnabledChannelsRequest. */
                class QueryFeeEnabledChannelsRequest implements IQueryFeeEnabledChannelsRequest {

                    /**
                     * Constructs a new QueryFeeEnabledChannelsRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IQueryFeeEnabledChannelsRequest);

                    /** QueryFeeEnabledChannelsRequest pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /** QueryFeeEnabledChannelsRequest query_height. */
                    public query_height: Long;

                    /**
                     * Encodes the specified QueryFeeEnabledChannelsRequest message. Does not implicitly {@link ibc.applications.fee.v1.QueryFeeEnabledChannelsRequest.verify|verify} messages.
                     * @param message QueryFeeEnabledChannelsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IQueryFeeEnabledChannelsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryFeeEnabledChannelsRequest message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.QueryFeeEnabledChannelsRequest.verify|verify} messages.
                     * @param message QueryFeeEnabledChannelsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IQueryFeeEnabledChannelsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryFeeEnabledChannelsRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryFeeEnabledChannelsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.QueryFeeEnabledChannelsRequest;

                    /**
                     * Decodes a QueryFeeEnabledChannelsRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryFeeEnabledChannelsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.QueryFeeEnabledChannelsRequest;

                    /**
                     * Verifies a QueryFeeEnabledChannelsRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryFeeEnabledChannelsRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryFeeEnabledChannelsRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.QueryFeeEnabledChannelsRequest;

                    /**
                     * Creates a plain object from a QueryFeeEnabledChannelsRequest message. Also converts values to other types if specified.
                     * @param message QueryFeeEnabledChannelsRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.QueryFeeEnabledChannelsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryFeeEnabledChannelsRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryFeeEnabledChannelsResponse. */
                interface IQueryFeeEnabledChannelsResponse {

                    /** QueryFeeEnabledChannelsResponse fee_enabled_channels */
                    fee_enabled_channels?: (ibc.applications.fee.v1.IFeeEnabledChannel[]|null);
                }

                /** Represents a QueryFeeEnabledChannelsResponse. */
                class QueryFeeEnabledChannelsResponse implements IQueryFeeEnabledChannelsResponse {

                    /**
                     * Constructs a new QueryFeeEnabledChannelsResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IQueryFeeEnabledChannelsResponse);

                    /** QueryFeeEnabledChannelsResponse fee_enabled_channels. */
                    public fee_enabled_channels: ibc.applications.fee.v1.IFeeEnabledChannel[];

                    /**
                     * Encodes the specified QueryFeeEnabledChannelsResponse message. Does not implicitly {@link ibc.applications.fee.v1.QueryFeeEnabledChannelsResponse.verify|verify} messages.
                     * @param message QueryFeeEnabledChannelsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IQueryFeeEnabledChannelsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryFeeEnabledChannelsResponse message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.QueryFeeEnabledChannelsResponse.verify|verify} messages.
                     * @param message QueryFeeEnabledChannelsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IQueryFeeEnabledChannelsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryFeeEnabledChannelsResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryFeeEnabledChannelsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.QueryFeeEnabledChannelsResponse;

                    /**
                     * Decodes a QueryFeeEnabledChannelsResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryFeeEnabledChannelsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.QueryFeeEnabledChannelsResponse;

                    /**
                     * Verifies a QueryFeeEnabledChannelsResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryFeeEnabledChannelsResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryFeeEnabledChannelsResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.QueryFeeEnabledChannelsResponse;

                    /**
                     * Creates a plain object from a QueryFeeEnabledChannelsResponse message. Also converts values to other types if specified.
                     * @param message QueryFeeEnabledChannelsResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.QueryFeeEnabledChannelsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryFeeEnabledChannelsResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryFeeEnabledChannelRequest. */
                interface IQueryFeeEnabledChannelRequest {

                    /** QueryFeeEnabledChannelRequest port_id */
                    port_id?: (string|null);

                    /** QueryFeeEnabledChannelRequest channel_id */
                    channel_id?: (string|null);
                }

                /** Represents a QueryFeeEnabledChannelRequest. */
                class QueryFeeEnabledChannelRequest implements IQueryFeeEnabledChannelRequest {

                    /**
                     * Constructs a new QueryFeeEnabledChannelRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IQueryFeeEnabledChannelRequest);

                    /** QueryFeeEnabledChannelRequest port_id. */
                    public port_id: string;

                    /** QueryFeeEnabledChannelRequest channel_id. */
                    public channel_id: string;

                    /**
                     * Encodes the specified QueryFeeEnabledChannelRequest message. Does not implicitly {@link ibc.applications.fee.v1.QueryFeeEnabledChannelRequest.verify|verify} messages.
                     * @param message QueryFeeEnabledChannelRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IQueryFeeEnabledChannelRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryFeeEnabledChannelRequest message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.QueryFeeEnabledChannelRequest.verify|verify} messages.
                     * @param message QueryFeeEnabledChannelRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IQueryFeeEnabledChannelRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryFeeEnabledChannelRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryFeeEnabledChannelRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.QueryFeeEnabledChannelRequest;

                    /**
                     * Decodes a QueryFeeEnabledChannelRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryFeeEnabledChannelRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.QueryFeeEnabledChannelRequest;

                    /**
                     * Verifies a QueryFeeEnabledChannelRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryFeeEnabledChannelRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryFeeEnabledChannelRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.QueryFeeEnabledChannelRequest;

                    /**
                     * Creates a plain object from a QueryFeeEnabledChannelRequest message. Also converts values to other types if specified.
                     * @param message QueryFeeEnabledChannelRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.QueryFeeEnabledChannelRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryFeeEnabledChannelRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryFeeEnabledChannelResponse. */
                interface IQueryFeeEnabledChannelResponse {

                    /** QueryFeeEnabledChannelResponse fee_enabled */
                    fee_enabled?: (boolean|null);
                }

                /** Represents a QueryFeeEnabledChannelResponse. */
                class QueryFeeEnabledChannelResponse implements IQueryFeeEnabledChannelResponse {

                    /**
                     * Constructs a new QueryFeeEnabledChannelResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IQueryFeeEnabledChannelResponse);

                    /** QueryFeeEnabledChannelResponse fee_enabled. */
                    public fee_enabled: boolean;

                    /**
                     * Encodes the specified QueryFeeEnabledChannelResponse message. Does not implicitly {@link ibc.applications.fee.v1.QueryFeeEnabledChannelResponse.verify|verify} messages.
                     * @param message QueryFeeEnabledChannelResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IQueryFeeEnabledChannelResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryFeeEnabledChannelResponse message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.QueryFeeEnabledChannelResponse.verify|verify} messages.
                     * @param message QueryFeeEnabledChannelResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IQueryFeeEnabledChannelResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryFeeEnabledChannelResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryFeeEnabledChannelResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.QueryFeeEnabledChannelResponse;

                    /**
                     * Decodes a QueryFeeEnabledChannelResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryFeeEnabledChannelResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.QueryFeeEnabledChannelResponse;

                    /**
                     * Verifies a QueryFeeEnabledChannelResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryFeeEnabledChannelResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryFeeEnabledChannelResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.QueryFeeEnabledChannelResponse;

                    /**
                     * Creates a plain object from a QueryFeeEnabledChannelResponse message. Also converts values to other types if specified.
                     * @param message QueryFeeEnabledChannelResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.QueryFeeEnabledChannelResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryFeeEnabledChannelResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a GenesisState. */
                interface IGenesisState {

                    /** GenesisState identified_fees */
                    identified_fees?: (ibc.applications.fee.v1.IIdentifiedPacketFees[]|null);

                    /** GenesisState fee_enabled_channels */
                    fee_enabled_channels?: (ibc.applications.fee.v1.IFeeEnabledChannel[]|null);

                    /** GenesisState registered_payees */
                    registered_payees?: (ibc.applications.fee.v1.IRegisteredPayee[]|null);

                    /** GenesisState registered_counterparty_payees */
                    registered_counterparty_payees?: (ibc.applications.fee.v1.IRegisteredCounterpartyPayee[]|null);

                    /** GenesisState forward_relayers */
                    forward_relayers?: (ibc.applications.fee.v1.IForwardRelayerAddress[]|null);
                }

                /** Represents a GenesisState. */
                class GenesisState implements IGenesisState {

                    /**
                     * Constructs a new GenesisState.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IGenesisState);

                    /** GenesisState identified_fees. */
                    public identified_fees: ibc.applications.fee.v1.IIdentifiedPacketFees[];

                    /** GenesisState fee_enabled_channels. */
                    public fee_enabled_channels: ibc.applications.fee.v1.IFeeEnabledChannel[];

                    /** GenesisState registered_payees. */
                    public registered_payees: ibc.applications.fee.v1.IRegisteredPayee[];

                    /** GenesisState registered_counterparty_payees. */
                    public registered_counterparty_payees: ibc.applications.fee.v1.IRegisteredCounterpartyPayee[];

                    /** GenesisState forward_relayers. */
                    public forward_relayers: ibc.applications.fee.v1.IForwardRelayerAddress[];

                    /**
                     * Encodes the specified GenesisState message. Does not implicitly {@link ibc.applications.fee.v1.GenesisState.verify|verify} messages.
                     * @param message GenesisState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.GenesisState.verify|verify} messages.
                     * @param message GenesisState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GenesisState message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns GenesisState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.GenesisState;

                    /**
                     * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns GenesisState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.GenesisState;

                    /**
                     * Verifies a GenesisState message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns GenesisState
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.GenesisState;

                    /**
                     * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                     * @param message GenesisState
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this GenesisState to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a FeeEnabledChannel. */
                interface IFeeEnabledChannel {

                    /** FeeEnabledChannel port_id */
                    port_id?: (string|null);

                    /** FeeEnabledChannel channel_id */
                    channel_id?: (string|null);
                }

                /** Represents a FeeEnabledChannel. */
                class FeeEnabledChannel implements IFeeEnabledChannel {

                    /**
                     * Constructs a new FeeEnabledChannel.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IFeeEnabledChannel);

                    /** FeeEnabledChannel port_id. */
                    public port_id: string;

                    /** FeeEnabledChannel channel_id. */
                    public channel_id: string;

                    /**
                     * Encodes the specified FeeEnabledChannel message. Does not implicitly {@link ibc.applications.fee.v1.FeeEnabledChannel.verify|verify} messages.
                     * @param message FeeEnabledChannel message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IFeeEnabledChannel, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified FeeEnabledChannel message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.FeeEnabledChannel.verify|verify} messages.
                     * @param message FeeEnabledChannel message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IFeeEnabledChannel, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a FeeEnabledChannel message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns FeeEnabledChannel
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.FeeEnabledChannel;

                    /**
                     * Decodes a FeeEnabledChannel message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns FeeEnabledChannel
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.FeeEnabledChannel;

                    /**
                     * Verifies a FeeEnabledChannel message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a FeeEnabledChannel message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns FeeEnabledChannel
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.FeeEnabledChannel;

                    /**
                     * Creates a plain object from a FeeEnabledChannel message. Also converts values to other types if specified.
                     * @param message FeeEnabledChannel
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.FeeEnabledChannel, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this FeeEnabledChannel to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a RegisteredPayee. */
                interface IRegisteredPayee {

                    /** RegisteredPayee channel_id */
                    channel_id?: (string|null);

                    /** RegisteredPayee relayer */
                    relayer?: (string|null);

                    /** RegisteredPayee payee */
                    payee?: (string|null);
                }

                /** Represents a RegisteredPayee. */
                class RegisteredPayee implements IRegisteredPayee {

                    /**
                     * Constructs a new RegisteredPayee.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IRegisteredPayee);

                    /** RegisteredPayee channel_id. */
                    public channel_id: string;

                    /** RegisteredPayee relayer. */
                    public relayer: string;

                    /** RegisteredPayee payee. */
                    public payee: string;

                    /**
                     * Encodes the specified RegisteredPayee message. Does not implicitly {@link ibc.applications.fee.v1.RegisteredPayee.verify|verify} messages.
                     * @param message RegisteredPayee message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IRegisteredPayee, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified RegisteredPayee message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.RegisteredPayee.verify|verify} messages.
                     * @param message RegisteredPayee message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IRegisteredPayee, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a RegisteredPayee message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns RegisteredPayee
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.RegisteredPayee;

                    /**
                     * Decodes a RegisteredPayee message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns RegisteredPayee
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.RegisteredPayee;

                    /**
                     * Verifies a RegisteredPayee message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a RegisteredPayee message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns RegisteredPayee
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.RegisteredPayee;

                    /**
                     * Creates a plain object from a RegisteredPayee message. Also converts values to other types if specified.
                     * @param message RegisteredPayee
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.RegisteredPayee, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this RegisteredPayee to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a RegisteredCounterpartyPayee. */
                interface IRegisteredCounterpartyPayee {

                    /** RegisteredCounterpartyPayee channel_id */
                    channel_id?: (string|null);

                    /** RegisteredCounterpartyPayee relayer */
                    relayer?: (string|null);

                    /** RegisteredCounterpartyPayee counterparty_payee */
                    counterparty_payee?: (string|null);
                }

                /** Represents a RegisteredCounterpartyPayee. */
                class RegisteredCounterpartyPayee implements IRegisteredCounterpartyPayee {

                    /**
                     * Constructs a new RegisteredCounterpartyPayee.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IRegisteredCounterpartyPayee);

                    /** RegisteredCounterpartyPayee channel_id. */
                    public channel_id: string;

                    /** RegisteredCounterpartyPayee relayer. */
                    public relayer: string;

                    /** RegisteredCounterpartyPayee counterparty_payee. */
                    public counterparty_payee: string;

                    /**
                     * Encodes the specified RegisteredCounterpartyPayee message. Does not implicitly {@link ibc.applications.fee.v1.RegisteredCounterpartyPayee.verify|verify} messages.
                     * @param message RegisteredCounterpartyPayee message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IRegisteredCounterpartyPayee, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified RegisteredCounterpartyPayee message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.RegisteredCounterpartyPayee.verify|verify} messages.
                     * @param message RegisteredCounterpartyPayee message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IRegisteredCounterpartyPayee, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a RegisteredCounterpartyPayee message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns RegisteredCounterpartyPayee
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.RegisteredCounterpartyPayee;

                    /**
                     * Decodes a RegisteredCounterpartyPayee message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns RegisteredCounterpartyPayee
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.RegisteredCounterpartyPayee;

                    /**
                     * Verifies a RegisteredCounterpartyPayee message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a RegisteredCounterpartyPayee message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns RegisteredCounterpartyPayee
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.RegisteredCounterpartyPayee;

                    /**
                     * Creates a plain object from a RegisteredCounterpartyPayee message. Also converts values to other types if specified.
                     * @param message RegisteredCounterpartyPayee
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.RegisteredCounterpartyPayee, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this RegisteredCounterpartyPayee to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a ForwardRelayerAddress. */
                interface IForwardRelayerAddress {

                    /** ForwardRelayerAddress address */
                    address?: (string|null);

                    /** ForwardRelayerAddress packet_id */
                    packet_id?: (ibc.core.channel.v1.IPacketId|null);
                }

                /** Represents a ForwardRelayerAddress. */
                class ForwardRelayerAddress implements IForwardRelayerAddress {

                    /**
                     * Constructs a new ForwardRelayerAddress.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IForwardRelayerAddress);

                    /** ForwardRelayerAddress address. */
                    public address: string;

                    /** ForwardRelayerAddress packet_id. */
                    public packet_id?: (ibc.core.channel.v1.IPacketId|null);

                    /**
                     * Encodes the specified ForwardRelayerAddress message. Does not implicitly {@link ibc.applications.fee.v1.ForwardRelayerAddress.verify|verify} messages.
                     * @param message ForwardRelayerAddress message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IForwardRelayerAddress, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ForwardRelayerAddress message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.ForwardRelayerAddress.verify|verify} messages.
                     * @param message ForwardRelayerAddress message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IForwardRelayerAddress, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ForwardRelayerAddress message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ForwardRelayerAddress
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.ForwardRelayerAddress;

                    /**
                     * Decodes a ForwardRelayerAddress message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ForwardRelayerAddress
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.ForwardRelayerAddress;

                    /**
                     * Verifies a ForwardRelayerAddress message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ForwardRelayerAddress message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ForwardRelayerAddress
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.ForwardRelayerAddress;

                    /**
                     * Creates a plain object from a ForwardRelayerAddress message. Also converts values to other types if specified.
                     * @param message ForwardRelayerAddress
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.ForwardRelayerAddress, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ForwardRelayerAddress to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Metadata. */
                interface IMetadata {

                    /** Metadata fee_version */
                    fee_version?: (string|null);

                    /** Metadata app_version */
                    app_version?: (string|null);
                }

                /** Represents a Metadata. */
                class Metadata implements IMetadata {

                    /**
                     * Constructs a new Metadata.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.fee.v1.IMetadata);

                    /** Metadata fee_version. */
                    public fee_version: string;

                    /** Metadata app_version. */
                    public app_version: string;

                    /**
                     * Encodes the specified Metadata message. Does not implicitly {@link ibc.applications.fee.v1.Metadata.verify|verify} messages.
                     * @param message Metadata message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.fee.v1.IMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Metadata message, length delimited. Does not implicitly {@link ibc.applications.fee.v1.Metadata.verify|verify} messages.
                     * @param message Metadata message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.fee.v1.IMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Metadata message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Metadata
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.fee.v1.Metadata;

                    /**
                     * Decodes a Metadata message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Metadata
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.fee.v1.Metadata;

                    /**
                     * Verifies a Metadata message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Metadata message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Metadata
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.fee.v1.Metadata;

                    /**
                     * Creates a plain object from a Metadata message. Also converts values to other types if specified.
                     * @param message Metadata
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.fee.v1.Metadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Metadata to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }
        }

        /** Namespace interchain_accounts. */
        namespace interchain_accounts {

            /** Namespace controller. */
            namespace controller {

                /** Namespace v1. */
                namespace v1 {

                    /** Represents a Msg */
                    class Msg extends $protobuf.rpc.Service {

                        /**
                         * Constructs a new Msg service.
                         * @param rpcImpl RPC implementation
                         * @param [requestDelimited=false] Whether requests are length-delimited
                         * @param [responseDelimited=false] Whether responses are length-delimited
                         */
                        constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                        /**
                         * Calls RegisterInterchainAccount.
                         * @param request MsgRegisterInterchainAccount message or plain object
                         * @param callback Node-style callback called with the error, if any, and MsgRegisterInterchainAccountResponse
                         */
                        public registerInterchainAccount(request: ibc.applications.interchain_accounts.controller.v1.IMsgRegisterInterchainAccount, callback: ibc.applications.interchain_accounts.controller.v1.Msg.RegisterInterchainAccountCallback): void;

                        /**
                         * Calls RegisterInterchainAccount.
                         * @param request MsgRegisterInterchainAccount message or plain object
                         * @returns Promise
                         */
                        public registerInterchainAccount(request: ibc.applications.interchain_accounts.controller.v1.IMsgRegisterInterchainAccount): Promise<ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse>;

                        /**
                         * Calls SendTx.
                         * @param request MsgSendTx message or plain object
                         * @param callback Node-style callback called with the error, if any, and MsgSendTxResponse
                         */
                        public sendTx(request: ibc.applications.interchain_accounts.controller.v1.IMsgSendTx, callback: ibc.applications.interchain_accounts.controller.v1.Msg.SendTxCallback): void;

                        /**
                         * Calls SendTx.
                         * @param request MsgSendTx message or plain object
                         * @returns Promise
                         */
                        public sendTx(request: ibc.applications.interchain_accounts.controller.v1.IMsgSendTx): Promise<ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse>;
                    }

                    namespace Msg {

                        /**
                         * Callback as used by {@link ibc.applications.interchain_accounts.controller.v1.Msg#registerInterchainAccount}.
                         * @param error Error, if any
                         * @param [response] MsgRegisterInterchainAccountResponse
                         */
                        type RegisterInterchainAccountCallback = (error: (Error|null), response?: ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse) => void;

                        /**
                         * Callback as used by {@link ibc.applications.interchain_accounts.controller.v1.Msg#sendTx}.
                         * @param error Error, if any
                         * @param [response] MsgSendTxResponse
                         */
                        type SendTxCallback = (error: (Error|null), response?: ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse) => void;
                    }

                    /** Properties of a MsgRegisterInterchainAccount. */
                    interface IMsgRegisterInterchainAccount {

                        /** MsgRegisterInterchainAccount owner */
                        owner?: (string|null);

                        /** MsgRegisterInterchainAccount connection_id */
                        connection_id?: (string|null);

                        /** MsgRegisterInterchainAccount version */
                        version?: (string|null);
                    }

                    /** Represents a MsgRegisterInterchainAccount. */
                    class MsgRegisterInterchainAccount implements IMsgRegisterInterchainAccount {

                        /**
                         * Constructs a new MsgRegisterInterchainAccount.
                         * @param [properties] Properties to set
                         */
                        constructor(properties?: ibc.applications.interchain_accounts.controller.v1.IMsgRegisterInterchainAccount);

                        /** MsgRegisterInterchainAccount owner. */
                        public owner: string;

                        /** MsgRegisterInterchainAccount connection_id. */
                        public connection_id: string;

                        /** MsgRegisterInterchainAccount version. */
                        public version: string;

                        /**
                         * Encodes the specified MsgRegisterInterchainAccount message. Does not implicitly {@link ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.verify|verify} messages.
                         * @param message MsgRegisterInterchainAccount message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encode(message: ibc.applications.interchain_accounts.controller.v1.IMsgRegisterInterchainAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Encodes the specified MsgRegisterInterchainAccount message, length delimited. Does not implicitly {@link ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.verify|verify} messages.
                         * @param message MsgRegisterInterchainAccount message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encodeDelimited(message: ibc.applications.interchain_accounts.controller.v1.IMsgRegisterInterchainAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Decodes a MsgRegisterInterchainAccount message from the specified reader or buffer.
                         * @param reader Reader or buffer to decode from
                         * @param [length] Message length if known beforehand
                         * @returns MsgRegisterInterchainAccount
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount;

                        /**
                         * Decodes a MsgRegisterInterchainAccount message from the specified reader or buffer, length delimited.
                         * @param reader Reader or buffer to decode from
                         * @returns MsgRegisterInterchainAccount
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount;

                        /**
                         * Verifies a MsgRegisterInterchainAccount message.
                         * @param message Plain object to verify
                         * @returns `null` if valid, otherwise the reason why it is not
                         */
                        public static verify(message: { [k: string]: any }): (string|null);

                        /**
                         * Creates a MsgRegisterInterchainAccount message from a plain object. Also converts values to their respective internal types.
                         * @param object Plain object
                         * @returns MsgRegisterInterchainAccount
                         */
                        public static fromObject(object: { [k: string]: any }): ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount;

                        /**
                         * Creates a plain object from a MsgRegisterInterchainAccount message. Also converts values to other types if specified.
                         * @param message MsgRegisterInterchainAccount
                         * @param [options] Conversion options
                         * @returns Plain object
                         */
                        public static toObject(message: ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount, options?: $protobuf.IConversionOptions): { [k: string]: any };

                        /**
                         * Converts this MsgRegisterInterchainAccount to JSON.
                         * @returns JSON object
                         */
                        public toJSON(): { [k: string]: any };
                    }

                    /** Properties of a MsgRegisterInterchainAccountResponse. */
                    interface IMsgRegisterInterchainAccountResponse {

                        /** MsgRegisterInterchainAccountResponse channel_id */
                        channel_id?: (string|null);

                        /** MsgRegisterInterchainAccountResponse port_id */
                        port_id?: (string|null);
                    }

                    /** Represents a MsgRegisterInterchainAccountResponse. */
                    class MsgRegisterInterchainAccountResponse implements IMsgRegisterInterchainAccountResponse {

                        /**
                         * Constructs a new MsgRegisterInterchainAccountResponse.
                         * @param [properties] Properties to set
                         */
                        constructor(properties?: ibc.applications.interchain_accounts.controller.v1.IMsgRegisterInterchainAccountResponse);

                        /** MsgRegisterInterchainAccountResponse channel_id. */
                        public channel_id: string;

                        /** MsgRegisterInterchainAccountResponse port_id. */
                        public port_id: string;

                        /**
                         * Encodes the specified MsgRegisterInterchainAccountResponse message. Does not implicitly {@link ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse.verify|verify} messages.
                         * @param message MsgRegisterInterchainAccountResponse message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encode(message: ibc.applications.interchain_accounts.controller.v1.IMsgRegisterInterchainAccountResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Encodes the specified MsgRegisterInterchainAccountResponse message, length delimited. Does not implicitly {@link ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse.verify|verify} messages.
                         * @param message MsgRegisterInterchainAccountResponse message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encodeDelimited(message: ibc.applications.interchain_accounts.controller.v1.IMsgRegisterInterchainAccountResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Decodes a MsgRegisterInterchainAccountResponse message from the specified reader or buffer.
                         * @param reader Reader or buffer to decode from
                         * @param [length] Message length if known beforehand
                         * @returns MsgRegisterInterchainAccountResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse;

                        /**
                         * Decodes a MsgRegisterInterchainAccountResponse message from the specified reader or buffer, length delimited.
                         * @param reader Reader or buffer to decode from
                         * @returns MsgRegisterInterchainAccountResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse;

                        /**
                         * Verifies a MsgRegisterInterchainAccountResponse message.
                         * @param message Plain object to verify
                         * @returns `null` if valid, otherwise the reason why it is not
                         */
                        public static verify(message: { [k: string]: any }): (string|null);

                        /**
                         * Creates a MsgRegisterInterchainAccountResponse message from a plain object. Also converts values to their respective internal types.
                         * @param object Plain object
                         * @returns MsgRegisterInterchainAccountResponse
                         */
                        public static fromObject(object: { [k: string]: any }): ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse;

                        /**
                         * Creates a plain object from a MsgRegisterInterchainAccountResponse message. Also converts values to other types if specified.
                         * @param message MsgRegisterInterchainAccountResponse
                         * @param [options] Conversion options
                         * @returns Plain object
                         */
                        public static toObject(message: ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                        /**
                         * Converts this MsgRegisterInterchainAccountResponse to JSON.
                         * @returns JSON object
                         */
                        public toJSON(): { [k: string]: any };
                    }

                    /** Properties of a MsgSendTx. */
                    interface IMsgSendTx {

                        /** MsgSendTx owner */
                        owner?: (string|null);

                        /** MsgSendTx connection_id */
                        connection_id?: (string|null);

                        /** MsgSendTx packet_data */
                        packet_data?: (ibc.applications.interchain_accounts.v1.IInterchainAccountPacketData|null);

                        /** MsgSendTx relative_timeout */
                        relative_timeout?: (Long|null);
                    }

                    /** Represents a MsgSendTx. */
                    class MsgSendTx implements IMsgSendTx {

                        /**
                         * Constructs a new MsgSendTx.
                         * @param [properties] Properties to set
                         */
                        constructor(properties?: ibc.applications.interchain_accounts.controller.v1.IMsgSendTx);

                        /** MsgSendTx owner. */
                        public owner: string;

                        /** MsgSendTx connection_id. */
                        public connection_id: string;

                        /** MsgSendTx packet_data. */
                        public packet_data?: (ibc.applications.interchain_accounts.v1.IInterchainAccountPacketData|null);

                        /** MsgSendTx relative_timeout. */
                        public relative_timeout: Long;

                        /**
                         * Encodes the specified MsgSendTx message. Does not implicitly {@link ibc.applications.interchain_accounts.controller.v1.MsgSendTx.verify|verify} messages.
                         * @param message MsgSendTx message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encode(message: ibc.applications.interchain_accounts.controller.v1.IMsgSendTx, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Encodes the specified MsgSendTx message, length delimited. Does not implicitly {@link ibc.applications.interchain_accounts.controller.v1.MsgSendTx.verify|verify} messages.
                         * @param message MsgSendTx message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encodeDelimited(message: ibc.applications.interchain_accounts.controller.v1.IMsgSendTx, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Decodes a MsgSendTx message from the specified reader or buffer.
                         * @param reader Reader or buffer to decode from
                         * @param [length] Message length if known beforehand
                         * @returns MsgSendTx
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.interchain_accounts.controller.v1.MsgSendTx;

                        /**
                         * Decodes a MsgSendTx message from the specified reader or buffer, length delimited.
                         * @param reader Reader or buffer to decode from
                         * @returns MsgSendTx
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.interchain_accounts.controller.v1.MsgSendTx;

                        /**
                         * Verifies a MsgSendTx message.
                         * @param message Plain object to verify
                         * @returns `null` if valid, otherwise the reason why it is not
                         */
                        public static verify(message: { [k: string]: any }): (string|null);

                        /**
                         * Creates a MsgSendTx message from a plain object. Also converts values to their respective internal types.
                         * @param object Plain object
                         * @returns MsgSendTx
                         */
                        public static fromObject(object: { [k: string]: any }): ibc.applications.interchain_accounts.controller.v1.MsgSendTx;

                        /**
                         * Creates a plain object from a MsgSendTx message. Also converts values to other types if specified.
                         * @param message MsgSendTx
                         * @param [options] Conversion options
                         * @returns Plain object
                         */
                        public static toObject(message: ibc.applications.interchain_accounts.controller.v1.MsgSendTx, options?: $protobuf.IConversionOptions): { [k: string]: any };

                        /**
                         * Converts this MsgSendTx to JSON.
                         * @returns JSON object
                         */
                        public toJSON(): { [k: string]: any };
                    }

                    /** Properties of a MsgSendTxResponse. */
                    interface IMsgSendTxResponse {

                        /** MsgSendTxResponse sequence */
                        sequence?: (Long|null);
                    }

                    /** Represents a MsgSendTxResponse. */
                    class MsgSendTxResponse implements IMsgSendTxResponse {

                        /**
                         * Constructs a new MsgSendTxResponse.
                         * @param [properties] Properties to set
                         */
                        constructor(properties?: ibc.applications.interchain_accounts.controller.v1.IMsgSendTxResponse);

                        /** MsgSendTxResponse sequence. */
                        public sequence: Long;

                        /**
                         * Encodes the specified MsgSendTxResponse message. Does not implicitly {@link ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse.verify|verify} messages.
                         * @param message MsgSendTxResponse message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encode(message: ibc.applications.interchain_accounts.controller.v1.IMsgSendTxResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Encodes the specified MsgSendTxResponse message, length delimited. Does not implicitly {@link ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse.verify|verify} messages.
                         * @param message MsgSendTxResponse message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encodeDelimited(message: ibc.applications.interchain_accounts.controller.v1.IMsgSendTxResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Decodes a MsgSendTxResponse message from the specified reader or buffer.
                         * @param reader Reader or buffer to decode from
                         * @param [length] Message length if known beforehand
                         * @returns MsgSendTxResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse;

                        /**
                         * Decodes a MsgSendTxResponse message from the specified reader or buffer, length delimited.
                         * @param reader Reader or buffer to decode from
                         * @returns MsgSendTxResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse;

                        /**
                         * Verifies a MsgSendTxResponse message.
                         * @param message Plain object to verify
                         * @returns `null` if valid, otherwise the reason why it is not
                         */
                        public static verify(message: { [k: string]: any }): (string|null);

                        /**
                         * Creates a MsgSendTxResponse message from a plain object. Also converts values to their respective internal types.
                         * @param object Plain object
                         * @returns MsgSendTxResponse
                         */
                        public static fromObject(object: { [k: string]: any }): ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse;

                        /**
                         * Creates a plain object from a MsgSendTxResponse message. Also converts values to other types if specified.
                         * @param message MsgSendTxResponse
                         * @param [options] Conversion options
                         * @returns Plain object
                         */
                        public static toObject(message: ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                        /**
                         * Converts this MsgSendTxResponse to JSON.
                         * @returns JSON object
                         */
                        public toJSON(): { [k: string]: any };
                    }

                    /** Represents a Query */
                    class Query extends $protobuf.rpc.Service {

                        /**
                         * Constructs a new Query service.
                         * @param rpcImpl RPC implementation
                         * @param [requestDelimited=false] Whether requests are length-delimited
                         * @param [responseDelimited=false] Whether responses are length-delimited
                         */
                        constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                        /**
                         * Calls InterchainAccount.
                         * @param request QueryInterchainAccountRequest message or plain object
                         * @param callback Node-style callback called with the error, if any, and QueryInterchainAccountResponse
                         */
                        public interchainAccount(request: ibc.applications.interchain_accounts.controller.v1.IQueryInterchainAccountRequest, callback: ibc.applications.interchain_accounts.controller.v1.Query.InterchainAccountCallback): void;

                        /**
                         * Calls InterchainAccount.
                         * @param request QueryInterchainAccountRequest message or plain object
                         * @returns Promise
                         */
                        public interchainAccount(request: ibc.applications.interchain_accounts.controller.v1.IQueryInterchainAccountRequest): Promise<ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountResponse>;

                        /**
                         * Calls Params.
                         * @param request QueryParamsRequest message or plain object
                         * @param callback Node-style callback called with the error, if any, and QueryParamsResponse
                         */
                        public params(request: ibc.applications.interchain_accounts.controller.v1.IQueryParamsRequest, callback: ibc.applications.interchain_accounts.controller.v1.Query.ParamsCallback): void;

                        /**
                         * Calls Params.
                         * @param request QueryParamsRequest message or plain object
                         * @returns Promise
                         */
                        public params(request: ibc.applications.interchain_accounts.controller.v1.IQueryParamsRequest): Promise<ibc.applications.interchain_accounts.controller.v1.QueryParamsResponse>;
                    }

                    namespace Query {

                        /**
                         * Callback as used by {@link ibc.applications.interchain_accounts.controller.v1.Query#interchainAccount}.
                         * @param error Error, if any
                         * @param [response] QueryInterchainAccountResponse
                         */
                        type InterchainAccountCallback = (error: (Error|null), response?: ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountResponse) => void;

                        /**
                         * Callback as used by {@link ibc.applications.interchain_accounts.controller.v1.Query#params}.
                         * @param error Error, if any
                         * @param [response] QueryParamsResponse
                         */
                        type ParamsCallback = (error: (Error|null), response?: ibc.applications.interchain_accounts.controller.v1.QueryParamsResponse) => void;
                    }

                    /** Properties of a QueryInterchainAccountRequest. */
                    interface IQueryInterchainAccountRequest {

                        /** QueryInterchainAccountRequest owner */
                        owner?: (string|null);

                        /** QueryInterchainAccountRequest connection_id */
                        connection_id?: (string|null);
                    }

                    /** Represents a QueryInterchainAccountRequest. */
                    class QueryInterchainAccountRequest implements IQueryInterchainAccountRequest {

                        /**
                         * Constructs a new QueryInterchainAccountRequest.
                         * @param [properties] Properties to set
                         */
                        constructor(properties?: ibc.applications.interchain_accounts.controller.v1.IQueryInterchainAccountRequest);

                        /** QueryInterchainAccountRequest owner. */
                        public owner: string;

                        /** QueryInterchainAccountRequest connection_id. */
                        public connection_id: string;

                        /**
                         * Encodes the specified QueryInterchainAccountRequest message. Does not implicitly {@link ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountRequest.verify|verify} messages.
                         * @param message QueryInterchainAccountRequest message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encode(message: ibc.applications.interchain_accounts.controller.v1.IQueryInterchainAccountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Encodes the specified QueryInterchainAccountRequest message, length delimited. Does not implicitly {@link ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountRequest.verify|verify} messages.
                         * @param message QueryInterchainAccountRequest message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encodeDelimited(message: ibc.applications.interchain_accounts.controller.v1.IQueryInterchainAccountRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Decodes a QueryInterchainAccountRequest message from the specified reader or buffer.
                         * @param reader Reader or buffer to decode from
                         * @param [length] Message length if known beforehand
                         * @returns QueryInterchainAccountRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountRequest;

                        /**
                         * Decodes a QueryInterchainAccountRequest message from the specified reader or buffer, length delimited.
                         * @param reader Reader or buffer to decode from
                         * @returns QueryInterchainAccountRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountRequest;

                        /**
                         * Verifies a QueryInterchainAccountRequest message.
                         * @param message Plain object to verify
                         * @returns `null` if valid, otherwise the reason why it is not
                         */
                        public static verify(message: { [k: string]: any }): (string|null);

                        /**
                         * Creates a QueryInterchainAccountRequest message from a plain object. Also converts values to their respective internal types.
                         * @param object Plain object
                         * @returns QueryInterchainAccountRequest
                         */
                        public static fromObject(object: { [k: string]: any }): ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountRequest;

                        /**
                         * Creates a plain object from a QueryInterchainAccountRequest message. Also converts values to other types if specified.
                         * @param message QueryInterchainAccountRequest
                         * @param [options] Conversion options
                         * @returns Plain object
                         */
                        public static toObject(message: ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                        /**
                         * Converts this QueryInterchainAccountRequest to JSON.
                         * @returns JSON object
                         */
                        public toJSON(): { [k: string]: any };
                    }

                    /** Properties of a QueryInterchainAccountResponse. */
                    interface IQueryInterchainAccountResponse {

                        /** QueryInterchainAccountResponse address */
                        address?: (string|null);
                    }

                    /** Represents a QueryInterchainAccountResponse. */
                    class QueryInterchainAccountResponse implements IQueryInterchainAccountResponse {

                        /**
                         * Constructs a new QueryInterchainAccountResponse.
                         * @param [properties] Properties to set
                         */
                        constructor(properties?: ibc.applications.interchain_accounts.controller.v1.IQueryInterchainAccountResponse);

                        /** QueryInterchainAccountResponse address. */
                        public address: string;

                        /**
                         * Encodes the specified QueryInterchainAccountResponse message. Does not implicitly {@link ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountResponse.verify|verify} messages.
                         * @param message QueryInterchainAccountResponse message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encode(message: ibc.applications.interchain_accounts.controller.v1.IQueryInterchainAccountResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Encodes the specified QueryInterchainAccountResponse message, length delimited. Does not implicitly {@link ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountResponse.verify|verify} messages.
                         * @param message QueryInterchainAccountResponse message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encodeDelimited(message: ibc.applications.interchain_accounts.controller.v1.IQueryInterchainAccountResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Decodes a QueryInterchainAccountResponse message from the specified reader or buffer.
                         * @param reader Reader or buffer to decode from
                         * @param [length] Message length if known beforehand
                         * @returns QueryInterchainAccountResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountResponse;

                        /**
                         * Decodes a QueryInterchainAccountResponse message from the specified reader or buffer, length delimited.
                         * @param reader Reader or buffer to decode from
                         * @returns QueryInterchainAccountResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountResponse;

                        /**
                         * Verifies a QueryInterchainAccountResponse message.
                         * @param message Plain object to verify
                         * @returns `null` if valid, otherwise the reason why it is not
                         */
                        public static verify(message: { [k: string]: any }): (string|null);

                        /**
                         * Creates a QueryInterchainAccountResponse message from a plain object. Also converts values to their respective internal types.
                         * @param object Plain object
                         * @returns QueryInterchainAccountResponse
                         */
                        public static fromObject(object: { [k: string]: any }): ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountResponse;

                        /**
                         * Creates a plain object from a QueryInterchainAccountResponse message. Also converts values to other types if specified.
                         * @param message QueryInterchainAccountResponse
                         * @param [options] Conversion options
                         * @returns Plain object
                         */
                        public static toObject(message: ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                        /**
                         * Converts this QueryInterchainAccountResponse to JSON.
                         * @returns JSON object
                         */
                        public toJSON(): { [k: string]: any };
                    }

                    /** Properties of a QueryParamsRequest. */
                    interface IQueryParamsRequest {
                    }

                    /** Represents a QueryParamsRequest. */
                    class QueryParamsRequest implements IQueryParamsRequest {

                        /**
                         * Constructs a new QueryParamsRequest.
                         * @param [properties] Properties to set
                         */
                        constructor(properties?: ibc.applications.interchain_accounts.controller.v1.IQueryParamsRequest);

                        /**
                         * Encodes the specified QueryParamsRequest message. Does not implicitly {@link ibc.applications.interchain_accounts.controller.v1.QueryParamsRequest.verify|verify} messages.
                         * @param message QueryParamsRequest message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encode(message: ibc.applications.interchain_accounts.controller.v1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Encodes the specified QueryParamsRequest message, length delimited. Does not implicitly {@link ibc.applications.interchain_accounts.controller.v1.QueryParamsRequest.verify|verify} messages.
                         * @param message QueryParamsRequest message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encodeDelimited(message: ibc.applications.interchain_accounts.controller.v1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Decodes a QueryParamsRequest message from the specified reader or buffer.
                         * @param reader Reader or buffer to decode from
                         * @param [length] Message length if known beforehand
                         * @returns QueryParamsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.interchain_accounts.controller.v1.QueryParamsRequest;

                        /**
                         * Decodes a QueryParamsRequest message from the specified reader or buffer, length delimited.
                         * @param reader Reader or buffer to decode from
                         * @returns QueryParamsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.interchain_accounts.controller.v1.QueryParamsRequest;

                        /**
                         * Verifies a QueryParamsRequest message.
                         * @param message Plain object to verify
                         * @returns `null` if valid, otherwise the reason why it is not
                         */
                        public static verify(message: { [k: string]: any }): (string|null);

                        /**
                         * Creates a QueryParamsRequest message from a plain object. Also converts values to their respective internal types.
                         * @param object Plain object
                         * @returns QueryParamsRequest
                         */
                        public static fromObject(object: { [k: string]: any }): ibc.applications.interchain_accounts.controller.v1.QueryParamsRequest;

                        /**
                         * Creates a plain object from a QueryParamsRequest message. Also converts values to other types if specified.
                         * @param message QueryParamsRequest
                         * @param [options] Conversion options
                         * @returns Plain object
                         */
                        public static toObject(message: ibc.applications.interchain_accounts.controller.v1.QueryParamsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                        /**
                         * Converts this QueryParamsRequest to JSON.
                         * @returns JSON object
                         */
                        public toJSON(): { [k: string]: any };
                    }

                    /** Properties of a QueryParamsResponse. */
                    interface IQueryParamsResponse {

                        /** QueryParamsResponse params */
                        params?: (ibc.applications.interchain_accounts.controller.v1.IParams|null);
                    }

                    /** Represents a QueryParamsResponse. */
                    class QueryParamsResponse implements IQueryParamsResponse {

                        /**
                         * Constructs a new QueryParamsResponse.
                         * @param [properties] Properties to set
                         */
                        constructor(properties?: ibc.applications.interchain_accounts.controller.v1.IQueryParamsResponse);

                        /** QueryParamsResponse params. */
                        public params?: (ibc.applications.interchain_accounts.controller.v1.IParams|null);

                        /**
                         * Encodes the specified QueryParamsResponse message. Does not implicitly {@link ibc.applications.interchain_accounts.controller.v1.QueryParamsResponse.verify|verify} messages.
                         * @param message QueryParamsResponse message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encode(message: ibc.applications.interchain_accounts.controller.v1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Encodes the specified QueryParamsResponse message, length delimited. Does not implicitly {@link ibc.applications.interchain_accounts.controller.v1.QueryParamsResponse.verify|verify} messages.
                         * @param message QueryParamsResponse message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encodeDelimited(message: ibc.applications.interchain_accounts.controller.v1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Decodes a QueryParamsResponse message from the specified reader or buffer.
                         * @param reader Reader or buffer to decode from
                         * @param [length] Message length if known beforehand
                         * @returns QueryParamsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.interchain_accounts.controller.v1.QueryParamsResponse;

                        /**
                         * Decodes a QueryParamsResponse message from the specified reader or buffer, length delimited.
                         * @param reader Reader or buffer to decode from
                         * @returns QueryParamsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.interchain_accounts.controller.v1.QueryParamsResponse;

                        /**
                         * Verifies a QueryParamsResponse message.
                         * @param message Plain object to verify
                         * @returns `null` if valid, otherwise the reason why it is not
                         */
                        public static verify(message: { [k: string]: any }): (string|null);

                        /**
                         * Creates a QueryParamsResponse message from a plain object. Also converts values to their respective internal types.
                         * @param object Plain object
                         * @returns QueryParamsResponse
                         */
                        public static fromObject(object: { [k: string]: any }): ibc.applications.interchain_accounts.controller.v1.QueryParamsResponse;

                        /**
                         * Creates a plain object from a QueryParamsResponse message. Also converts values to other types if specified.
                         * @param message QueryParamsResponse
                         * @param [options] Conversion options
                         * @returns Plain object
                         */
                        public static toObject(message: ibc.applications.interchain_accounts.controller.v1.QueryParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                        /**
                         * Converts this QueryParamsResponse to JSON.
                         * @returns JSON object
                         */
                        public toJSON(): { [k: string]: any };
                    }

                    /** Properties of a Params. */
                    interface IParams {

                        /** Params controller_enabled */
                        controller_enabled?: (boolean|null);
                    }

                    /** Represents a Params. */
                    class Params implements IParams {

                        /**
                         * Constructs a new Params.
                         * @param [properties] Properties to set
                         */
                        constructor(properties?: ibc.applications.interchain_accounts.controller.v1.IParams);

                        /** Params controller_enabled. */
                        public controller_enabled: boolean;

                        /**
                         * Encodes the specified Params message. Does not implicitly {@link ibc.applications.interchain_accounts.controller.v1.Params.verify|verify} messages.
                         * @param message Params message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encode(message: ibc.applications.interchain_accounts.controller.v1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Encodes the specified Params message, length delimited. Does not implicitly {@link ibc.applications.interchain_accounts.controller.v1.Params.verify|verify} messages.
                         * @param message Params message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encodeDelimited(message: ibc.applications.interchain_accounts.controller.v1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Decodes a Params message from the specified reader or buffer.
                         * @param reader Reader or buffer to decode from
                         * @param [length] Message length if known beforehand
                         * @returns Params
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.interchain_accounts.controller.v1.Params;

                        /**
                         * Decodes a Params message from the specified reader or buffer, length delimited.
                         * @param reader Reader or buffer to decode from
                         * @returns Params
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.interchain_accounts.controller.v1.Params;

                        /**
                         * Verifies a Params message.
                         * @param message Plain object to verify
                         * @returns `null` if valid, otherwise the reason why it is not
                         */
                        public static verify(message: { [k: string]: any }): (string|null);

                        /**
                         * Creates a Params message from a plain object. Also converts values to their respective internal types.
                         * @param object Plain object
                         * @returns Params
                         */
                        public static fromObject(object: { [k: string]: any }): ibc.applications.interchain_accounts.controller.v1.Params;

                        /**
                         * Creates a plain object from a Params message. Also converts values to other types if specified.
                         * @param message Params
                         * @param [options] Conversion options
                         * @returns Plain object
                         */
                        public static toObject(message: ibc.applications.interchain_accounts.controller.v1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                        /**
                         * Converts this Params to JSON.
                         * @returns JSON object
                         */
                        public toJSON(): { [k: string]: any };
                    }
                }
            }

            /** Namespace v1. */
            namespace v1 {

                /** Type enum. */
                enum Type {
                    TYPE_UNSPECIFIED = 0,
                    TYPE_EXECUTE_TX = 1
                }

                /** Properties of an InterchainAccountPacketData. */
                interface IInterchainAccountPacketData {

                    /** InterchainAccountPacketData type */
                    type?: (ibc.applications.interchain_accounts.v1.Type|null);

                    /** InterchainAccountPacketData data */
                    data?: (Uint8Array|null);

                    /** InterchainAccountPacketData memo */
                    memo?: (string|null);
                }

                /** Represents an InterchainAccountPacketData. */
                class InterchainAccountPacketData implements IInterchainAccountPacketData {

                    /**
                     * Constructs a new InterchainAccountPacketData.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.interchain_accounts.v1.IInterchainAccountPacketData);

                    /** InterchainAccountPacketData type. */
                    public type: ibc.applications.interchain_accounts.v1.Type;

                    /** InterchainAccountPacketData data. */
                    public data: Uint8Array;

                    /** InterchainAccountPacketData memo. */
                    public memo: string;

                    /**
                     * Encodes the specified InterchainAccountPacketData message. Does not implicitly {@link ibc.applications.interchain_accounts.v1.InterchainAccountPacketData.verify|verify} messages.
                     * @param message InterchainAccountPacketData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.interchain_accounts.v1.IInterchainAccountPacketData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified InterchainAccountPacketData message, length delimited. Does not implicitly {@link ibc.applications.interchain_accounts.v1.InterchainAccountPacketData.verify|verify} messages.
                     * @param message InterchainAccountPacketData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.interchain_accounts.v1.IInterchainAccountPacketData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes an InterchainAccountPacketData message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns InterchainAccountPacketData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.interchain_accounts.v1.InterchainAccountPacketData;

                    /**
                     * Decodes an InterchainAccountPacketData message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns InterchainAccountPacketData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.interchain_accounts.v1.InterchainAccountPacketData;

                    /**
                     * Verifies an InterchainAccountPacketData message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates an InterchainAccountPacketData message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns InterchainAccountPacketData
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.interchain_accounts.v1.InterchainAccountPacketData;

                    /**
                     * Creates a plain object from an InterchainAccountPacketData message. Also converts values to other types if specified.
                     * @param message InterchainAccountPacketData
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.interchain_accounts.v1.InterchainAccountPacketData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this InterchainAccountPacketData to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a CosmosTx. */
                interface ICosmosTx {

                    /** CosmosTx messages */
                    messages?: (google.protobuf.IAny[]|null);
                }

                /** Represents a CosmosTx. */
                class CosmosTx implements ICosmosTx {

                    /**
                     * Constructs a new CosmosTx.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.interchain_accounts.v1.ICosmosTx);

                    /** CosmosTx messages. */
                    public messages: google.protobuf.IAny[];

                    /**
                     * Encodes the specified CosmosTx message. Does not implicitly {@link ibc.applications.interchain_accounts.v1.CosmosTx.verify|verify} messages.
                     * @param message CosmosTx message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.interchain_accounts.v1.ICosmosTx, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified CosmosTx message, length delimited. Does not implicitly {@link ibc.applications.interchain_accounts.v1.CosmosTx.verify|verify} messages.
                     * @param message CosmosTx message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.interchain_accounts.v1.ICosmosTx, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a CosmosTx message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns CosmosTx
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.interchain_accounts.v1.CosmosTx;

                    /**
                     * Decodes a CosmosTx message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns CosmosTx
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.interchain_accounts.v1.CosmosTx;

                    /**
                     * Verifies a CosmosTx message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a CosmosTx message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns CosmosTx
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.interchain_accounts.v1.CosmosTx;

                    /**
                     * Creates a plain object from a CosmosTx message. Also converts values to other types if specified.
                     * @param message CosmosTx
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.interchain_accounts.v1.CosmosTx, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this CosmosTx to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of an InterchainAccount. */
                interface IInterchainAccount {

                    /** InterchainAccount base_account */
                    base_account?: (cosmos.auth.v1beta1.IBaseAccount|null);

                    /** InterchainAccount account_owner */
                    account_owner?: (string|null);
                }

                /** Represents an InterchainAccount. */
                class InterchainAccount implements IInterchainAccount {

                    /**
                     * Constructs a new InterchainAccount.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.interchain_accounts.v1.IInterchainAccount);

                    /** InterchainAccount base_account. */
                    public base_account?: (cosmos.auth.v1beta1.IBaseAccount|null);

                    /** InterchainAccount account_owner. */
                    public account_owner: string;

                    /**
                     * Encodes the specified InterchainAccount message. Does not implicitly {@link ibc.applications.interchain_accounts.v1.InterchainAccount.verify|verify} messages.
                     * @param message InterchainAccount message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.interchain_accounts.v1.IInterchainAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified InterchainAccount message, length delimited. Does not implicitly {@link ibc.applications.interchain_accounts.v1.InterchainAccount.verify|verify} messages.
                     * @param message InterchainAccount message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.interchain_accounts.v1.IInterchainAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes an InterchainAccount message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns InterchainAccount
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.interchain_accounts.v1.InterchainAccount;

                    /**
                     * Decodes an InterchainAccount message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns InterchainAccount
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.interchain_accounts.v1.InterchainAccount;

                    /**
                     * Verifies an InterchainAccount message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates an InterchainAccount message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns InterchainAccount
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.interchain_accounts.v1.InterchainAccount;

                    /**
                     * Creates a plain object from an InterchainAccount message. Also converts values to other types if specified.
                     * @param message InterchainAccount
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.interchain_accounts.v1.InterchainAccount, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this InterchainAccount to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Metadata. */
                interface IMetadata {

                    /** Metadata version */
                    version?: (string|null);

                    /** Metadata controller_connection_id */
                    controller_connection_id?: (string|null);

                    /** Metadata host_connection_id */
                    host_connection_id?: (string|null);

                    /** Metadata address */
                    address?: (string|null);

                    /** Metadata encoding */
                    encoding?: (string|null);

                    /** Metadata tx_type */
                    tx_type?: (string|null);
                }

                /** Represents a Metadata. */
                class Metadata implements IMetadata {

                    /**
                     * Constructs a new Metadata.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.interchain_accounts.v1.IMetadata);

                    /** Metadata version. */
                    public version: string;

                    /** Metadata controller_connection_id. */
                    public controller_connection_id: string;

                    /** Metadata host_connection_id. */
                    public host_connection_id: string;

                    /** Metadata address. */
                    public address: string;

                    /** Metadata encoding. */
                    public encoding: string;

                    /** Metadata tx_type. */
                    public tx_type: string;

                    /**
                     * Encodes the specified Metadata message. Does not implicitly {@link ibc.applications.interchain_accounts.v1.Metadata.verify|verify} messages.
                     * @param message Metadata message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.interchain_accounts.v1.IMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Metadata message, length delimited. Does not implicitly {@link ibc.applications.interchain_accounts.v1.Metadata.verify|verify} messages.
                     * @param message Metadata message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.interchain_accounts.v1.IMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Metadata message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Metadata
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.interchain_accounts.v1.Metadata;

                    /**
                     * Decodes a Metadata message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Metadata
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.interchain_accounts.v1.Metadata;

                    /**
                     * Verifies a Metadata message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Metadata message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Metadata
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.interchain_accounts.v1.Metadata;

                    /**
                     * Creates a plain object from a Metadata message. Also converts values to other types if specified.
                     * @param message Metadata
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.interchain_accounts.v1.Metadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Metadata to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }

            /** Namespace genesis. */
            namespace genesis {

                /** Namespace v1. */
                namespace v1 {

                    /** Properties of a GenesisState. */
                    interface IGenesisState {

                        /** GenesisState controller_genesis_state */
                        controller_genesis_state?: (ibc.applications.interchain_accounts.genesis.v1.IControllerGenesisState|null);

                        /** GenesisState host_genesis_state */
                        host_genesis_state?: (ibc.applications.interchain_accounts.genesis.v1.IHostGenesisState|null);
                    }

                    /** Represents a GenesisState. */
                    class GenesisState implements IGenesisState {

                        /**
                         * Constructs a new GenesisState.
                         * @param [properties] Properties to set
                         */
                        constructor(properties?: ibc.applications.interchain_accounts.genesis.v1.IGenesisState);

                        /** GenesisState controller_genesis_state. */
                        public controller_genesis_state?: (ibc.applications.interchain_accounts.genesis.v1.IControllerGenesisState|null);

                        /** GenesisState host_genesis_state. */
                        public host_genesis_state?: (ibc.applications.interchain_accounts.genesis.v1.IHostGenesisState|null);

                        /**
                         * Encodes the specified GenesisState message. Does not implicitly {@link ibc.applications.interchain_accounts.genesis.v1.GenesisState.verify|verify} messages.
                         * @param message GenesisState message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encode(message: ibc.applications.interchain_accounts.genesis.v1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link ibc.applications.interchain_accounts.genesis.v1.GenesisState.verify|verify} messages.
                         * @param message GenesisState message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encodeDelimited(message: ibc.applications.interchain_accounts.genesis.v1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Decodes a GenesisState message from the specified reader or buffer.
                         * @param reader Reader or buffer to decode from
                         * @param [length] Message length if known beforehand
                         * @returns GenesisState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.interchain_accounts.genesis.v1.GenesisState;

                        /**
                         * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                         * @param reader Reader or buffer to decode from
                         * @returns GenesisState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.interchain_accounts.genesis.v1.GenesisState;

                        /**
                         * Verifies a GenesisState message.
                         * @param message Plain object to verify
                         * @returns `null` if valid, otherwise the reason why it is not
                         */
                        public static verify(message: { [k: string]: any }): (string|null);

                        /**
                         * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                         * @param object Plain object
                         * @returns GenesisState
                         */
                        public static fromObject(object: { [k: string]: any }): ibc.applications.interchain_accounts.genesis.v1.GenesisState;

                        /**
                         * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                         * @param message GenesisState
                         * @param [options] Conversion options
                         * @returns Plain object
                         */
                        public static toObject(message: ibc.applications.interchain_accounts.genesis.v1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                        /**
                         * Converts this GenesisState to JSON.
                         * @returns JSON object
                         */
                        public toJSON(): { [k: string]: any };
                    }

                    /** Properties of a ControllerGenesisState. */
                    interface IControllerGenesisState {

                        /** ControllerGenesisState active_channels */
                        active_channels?: (ibc.applications.interchain_accounts.genesis.v1.IActiveChannel[]|null);

                        /** ControllerGenesisState interchain_accounts */
                        interchain_accounts?: (ibc.applications.interchain_accounts.genesis.v1.IRegisteredInterchainAccount[]|null);

                        /** ControllerGenesisState ports */
                        ports?: (string[]|null);

                        /** ControllerGenesisState params */
                        params?: (ibc.applications.interchain_accounts.controller.v1.IParams|null);
                    }

                    /** Represents a ControllerGenesisState. */
                    class ControllerGenesisState implements IControllerGenesisState {

                        /**
                         * Constructs a new ControllerGenesisState.
                         * @param [properties] Properties to set
                         */
                        constructor(properties?: ibc.applications.interchain_accounts.genesis.v1.IControllerGenesisState);

                        /** ControllerGenesisState active_channels. */
                        public active_channels: ibc.applications.interchain_accounts.genesis.v1.IActiveChannel[];

                        /** ControllerGenesisState interchain_accounts. */
                        public interchain_accounts: ibc.applications.interchain_accounts.genesis.v1.IRegisteredInterchainAccount[];

                        /** ControllerGenesisState ports. */
                        public ports: string[];

                        /** ControllerGenesisState params. */
                        public params?: (ibc.applications.interchain_accounts.controller.v1.IParams|null);

                        /**
                         * Encodes the specified ControllerGenesisState message. Does not implicitly {@link ibc.applications.interchain_accounts.genesis.v1.ControllerGenesisState.verify|verify} messages.
                         * @param message ControllerGenesisState message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encode(message: ibc.applications.interchain_accounts.genesis.v1.IControllerGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Encodes the specified ControllerGenesisState message, length delimited. Does not implicitly {@link ibc.applications.interchain_accounts.genesis.v1.ControllerGenesisState.verify|verify} messages.
                         * @param message ControllerGenesisState message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encodeDelimited(message: ibc.applications.interchain_accounts.genesis.v1.IControllerGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Decodes a ControllerGenesisState message from the specified reader or buffer.
                         * @param reader Reader or buffer to decode from
                         * @param [length] Message length if known beforehand
                         * @returns ControllerGenesisState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.interchain_accounts.genesis.v1.ControllerGenesisState;

                        /**
                         * Decodes a ControllerGenesisState message from the specified reader or buffer, length delimited.
                         * @param reader Reader or buffer to decode from
                         * @returns ControllerGenesisState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.interchain_accounts.genesis.v1.ControllerGenesisState;

                        /**
                         * Verifies a ControllerGenesisState message.
                         * @param message Plain object to verify
                         * @returns `null` if valid, otherwise the reason why it is not
                         */
                        public static verify(message: { [k: string]: any }): (string|null);

                        /**
                         * Creates a ControllerGenesisState message from a plain object. Also converts values to their respective internal types.
                         * @param object Plain object
                         * @returns ControllerGenesisState
                         */
                        public static fromObject(object: { [k: string]: any }): ibc.applications.interchain_accounts.genesis.v1.ControllerGenesisState;

                        /**
                         * Creates a plain object from a ControllerGenesisState message. Also converts values to other types if specified.
                         * @param message ControllerGenesisState
                         * @param [options] Conversion options
                         * @returns Plain object
                         */
                        public static toObject(message: ibc.applications.interchain_accounts.genesis.v1.ControllerGenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                        /**
                         * Converts this ControllerGenesisState to JSON.
                         * @returns JSON object
                         */
                        public toJSON(): { [k: string]: any };
                    }

                    /** Properties of a HostGenesisState. */
                    interface IHostGenesisState {

                        /** HostGenesisState active_channels */
                        active_channels?: (ibc.applications.interchain_accounts.genesis.v1.IActiveChannel[]|null);

                        /** HostGenesisState interchain_accounts */
                        interchain_accounts?: (ibc.applications.interchain_accounts.genesis.v1.IRegisteredInterchainAccount[]|null);

                        /** HostGenesisState port */
                        port?: (string|null);

                        /** HostGenesisState params */
                        params?: (ibc.applications.interchain_accounts.host.v1.IParams|null);
                    }

                    /** Represents a HostGenesisState. */
                    class HostGenesisState implements IHostGenesisState {

                        /**
                         * Constructs a new HostGenesisState.
                         * @param [properties] Properties to set
                         */
                        constructor(properties?: ibc.applications.interchain_accounts.genesis.v1.IHostGenesisState);

                        /** HostGenesisState active_channels. */
                        public active_channels: ibc.applications.interchain_accounts.genesis.v1.IActiveChannel[];

                        /** HostGenesisState interchain_accounts. */
                        public interchain_accounts: ibc.applications.interchain_accounts.genesis.v1.IRegisteredInterchainAccount[];

                        /** HostGenesisState port. */
                        public port: string;

                        /** HostGenesisState params. */
                        public params?: (ibc.applications.interchain_accounts.host.v1.IParams|null);

                        /**
                         * Encodes the specified HostGenesisState message. Does not implicitly {@link ibc.applications.interchain_accounts.genesis.v1.HostGenesisState.verify|verify} messages.
                         * @param message HostGenesisState message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encode(message: ibc.applications.interchain_accounts.genesis.v1.IHostGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Encodes the specified HostGenesisState message, length delimited. Does not implicitly {@link ibc.applications.interchain_accounts.genesis.v1.HostGenesisState.verify|verify} messages.
                         * @param message HostGenesisState message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encodeDelimited(message: ibc.applications.interchain_accounts.genesis.v1.IHostGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Decodes a HostGenesisState message from the specified reader or buffer.
                         * @param reader Reader or buffer to decode from
                         * @param [length] Message length if known beforehand
                         * @returns HostGenesisState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.interchain_accounts.genesis.v1.HostGenesisState;

                        /**
                         * Decodes a HostGenesisState message from the specified reader or buffer, length delimited.
                         * @param reader Reader or buffer to decode from
                         * @returns HostGenesisState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.interchain_accounts.genesis.v1.HostGenesisState;

                        /**
                         * Verifies a HostGenesisState message.
                         * @param message Plain object to verify
                         * @returns `null` if valid, otherwise the reason why it is not
                         */
                        public static verify(message: { [k: string]: any }): (string|null);

                        /**
                         * Creates a HostGenesisState message from a plain object. Also converts values to their respective internal types.
                         * @param object Plain object
                         * @returns HostGenesisState
                         */
                        public static fromObject(object: { [k: string]: any }): ibc.applications.interchain_accounts.genesis.v1.HostGenesisState;

                        /**
                         * Creates a plain object from a HostGenesisState message. Also converts values to other types if specified.
                         * @param message HostGenesisState
                         * @param [options] Conversion options
                         * @returns Plain object
                         */
                        public static toObject(message: ibc.applications.interchain_accounts.genesis.v1.HostGenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                        /**
                         * Converts this HostGenesisState to JSON.
                         * @returns JSON object
                         */
                        public toJSON(): { [k: string]: any };
                    }

                    /** Properties of an ActiveChannel. */
                    interface IActiveChannel {

                        /** ActiveChannel connection_id */
                        connection_id?: (string|null);

                        /** ActiveChannel port_id */
                        port_id?: (string|null);

                        /** ActiveChannel channel_id */
                        channel_id?: (string|null);

                        /** ActiveChannel is_middleware_enabled */
                        is_middleware_enabled?: (boolean|null);
                    }

                    /** Represents an ActiveChannel. */
                    class ActiveChannel implements IActiveChannel {

                        /**
                         * Constructs a new ActiveChannel.
                         * @param [properties] Properties to set
                         */
                        constructor(properties?: ibc.applications.interchain_accounts.genesis.v1.IActiveChannel);

                        /** ActiveChannel connection_id. */
                        public connection_id: string;

                        /** ActiveChannel port_id. */
                        public port_id: string;

                        /** ActiveChannel channel_id. */
                        public channel_id: string;

                        /** ActiveChannel is_middleware_enabled. */
                        public is_middleware_enabled: boolean;

                        /**
                         * Encodes the specified ActiveChannel message. Does not implicitly {@link ibc.applications.interchain_accounts.genesis.v1.ActiveChannel.verify|verify} messages.
                         * @param message ActiveChannel message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encode(message: ibc.applications.interchain_accounts.genesis.v1.IActiveChannel, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Encodes the specified ActiveChannel message, length delimited. Does not implicitly {@link ibc.applications.interchain_accounts.genesis.v1.ActiveChannel.verify|verify} messages.
                         * @param message ActiveChannel message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encodeDelimited(message: ibc.applications.interchain_accounts.genesis.v1.IActiveChannel, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Decodes an ActiveChannel message from the specified reader or buffer.
                         * @param reader Reader or buffer to decode from
                         * @param [length] Message length if known beforehand
                         * @returns ActiveChannel
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.interchain_accounts.genesis.v1.ActiveChannel;

                        /**
                         * Decodes an ActiveChannel message from the specified reader or buffer, length delimited.
                         * @param reader Reader or buffer to decode from
                         * @returns ActiveChannel
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.interchain_accounts.genesis.v1.ActiveChannel;

                        /**
                         * Verifies an ActiveChannel message.
                         * @param message Plain object to verify
                         * @returns `null` if valid, otherwise the reason why it is not
                         */
                        public static verify(message: { [k: string]: any }): (string|null);

                        /**
                         * Creates an ActiveChannel message from a plain object. Also converts values to their respective internal types.
                         * @param object Plain object
                         * @returns ActiveChannel
                         */
                        public static fromObject(object: { [k: string]: any }): ibc.applications.interchain_accounts.genesis.v1.ActiveChannel;

                        /**
                         * Creates a plain object from an ActiveChannel message. Also converts values to other types if specified.
                         * @param message ActiveChannel
                         * @param [options] Conversion options
                         * @returns Plain object
                         */
                        public static toObject(message: ibc.applications.interchain_accounts.genesis.v1.ActiveChannel, options?: $protobuf.IConversionOptions): { [k: string]: any };

                        /**
                         * Converts this ActiveChannel to JSON.
                         * @returns JSON object
                         */
                        public toJSON(): { [k: string]: any };
                    }

                    /** Properties of a RegisteredInterchainAccount. */
                    interface IRegisteredInterchainAccount {

                        /** RegisteredInterchainAccount connection_id */
                        connection_id?: (string|null);

                        /** RegisteredInterchainAccount port_id */
                        port_id?: (string|null);

                        /** RegisteredInterchainAccount account_address */
                        account_address?: (string|null);
                    }

                    /** Represents a RegisteredInterchainAccount. */
                    class RegisteredInterchainAccount implements IRegisteredInterchainAccount {

                        /**
                         * Constructs a new RegisteredInterchainAccount.
                         * @param [properties] Properties to set
                         */
                        constructor(properties?: ibc.applications.interchain_accounts.genesis.v1.IRegisteredInterchainAccount);

                        /** RegisteredInterchainAccount connection_id. */
                        public connection_id: string;

                        /** RegisteredInterchainAccount port_id. */
                        public port_id: string;

                        /** RegisteredInterchainAccount account_address. */
                        public account_address: string;

                        /**
                         * Encodes the specified RegisteredInterchainAccount message. Does not implicitly {@link ibc.applications.interchain_accounts.genesis.v1.RegisteredInterchainAccount.verify|verify} messages.
                         * @param message RegisteredInterchainAccount message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encode(message: ibc.applications.interchain_accounts.genesis.v1.IRegisteredInterchainAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Encodes the specified RegisteredInterchainAccount message, length delimited. Does not implicitly {@link ibc.applications.interchain_accounts.genesis.v1.RegisteredInterchainAccount.verify|verify} messages.
                         * @param message RegisteredInterchainAccount message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encodeDelimited(message: ibc.applications.interchain_accounts.genesis.v1.IRegisteredInterchainAccount, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Decodes a RegisteredInterchainAccount message from the specified reader or buffer.
                         * @param reader Reader or buffer to decode from
                         * @param [length] Message length if known beforehand
                         * @returns RegisteredInterchainAccount
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.interchain_accounts.genesis.v1.RegisteredInterchainAccount;

                        /**
                         * Decodes a RegisteredInterchainAccount message from the specified reader or buffer, length delimited.
                         * @param reader Reader or buffer to decode from
                         * @returns RegisteredInterchainAccount
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.interchain_accounts.genesis.v1.RegisteredInterchainAccount;

                        /**
                         * Verifies a RegisteredInterchainAccount message.
                         * @param message Plain object to verify
                         * @returns `null` if valid, otherwise the reason why it is not
                         */
                        public static verify(message: { [k: string]: any }): (string|null);

                        /**
                         * Creates a RegisteredInterchainAccount message from a plain object. Also converts values to their respective internal types.
                         * @param object Plain object
                         * @returns RegisteredInterchainAccount
                         */
                        public static fromObject(object: { [k: string]: any }): ibc.applications.interchain_accounts.genesis.v1.RegisteredInterchainAccount;

                        /**
                         * Creates a plain object from a RegisteredInterchainAccount message. Also converts values to other types if specified.
                         * @param message RegisteredInterchainAccount
                         * @param [options] Conversion options
                         * @returns Plain object
                         */
                        public static toObject(message: ibc.applications.interchain_accounts.genesis.v1.RegisteredInterchainAccount, options?: $protobuf.IConversionOptions): { [k: string]: any };

                        /**
                         * Converts this RegisteredInterchainAccount to JSON.
                         * @returns JSON object
                         */
                        public toJSON(): { [k: string]: any };
                    }
                }
            }

            /** Namespace host. */
            namespace host {

                /** Namespace v1. */
                namespace v1 {

                    /** Properties of a Params. */
                    interface IParams {

                        /** Params host_enabled */
                        host_enabled?: (boolean|null);

                        /** Params allow_messages */
                        allow_messages?: (string[]|null);
                    }

                    /** Represents a Params. */
                    class Params implements IParams {

                        /**
                         * Constructs a new Params.
                         * @param [properties] Properties to set
                         */
                        constructor(properties?: ibc.applications.interchain_accounts.host.v1.IParams);

                        /** Params host_enabled. */
                        public host_enabled: boolean;

                        /** Params allow_messages. */
                        public allow_messages: string[];

                        /**
                         * Encodes the specified Params message. Does not implicitly {@link ibc.applications.interchain_accounts.host.v1.Params.verify|verify} messages.
                         * @param message Params message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encode(message: ibc.applications.interchain_accounts.host.v1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Encodes the specified Params message, length delimited. Does not implicitly {@link ibc.applications.interchain_accounts.host.v1.Params.verify|verify} messages.
                         * @param message Params message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encodeDelimited(message: ibc.applications.interchain_accounts.host.v1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Decodes a Params message from the specified reader or buffer.
                         * @param reader Reader or buffer to decode from
                         * @param [length] Message length if known beforehand
                         * @returns Params
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.interchain_accounts.host.v1.Params;

                        /**
                         * Decodes a Params message from the specified reader or buffer, length delimited.
                         * @param reader Reader or buffer to decode from
                         * @returns Params
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.interchain_accounts.host.v1.Params;

                        /**
                         * Verifies a Params message.
                         * @param message Plain object to verify
                         * @returns `null` if valid, otherwise the reason why it is not
                         */
                        public static verify(message: { [k: string]: any }): (string|null);

                        /**
                         * Creates a Params message from a plain object. Also converts values to their respective internal types.
                         * @param object Plain object
                         * @returns Params
                         */
                        public static fromObject(object: { [k: string]: any }): ibc.applications.interchain_accounts.host.v1.Params;

                        /**
                         * Creates a plain object from a Params message. Also converts values to other types if specified.
                         * @param message Params
                         * @param [options] Conversion options
                         * @returns Plain object
                         */
                        public static toObject(message: ibc.applications.interchain_accounts.host.v1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                        /**
                         * Converts this Params to JSON.
                         * @returns JSON object
                         */
                        public toJSON(): { [k: string]: any };
                    }

                    /** Represents a Query */
                    class Query extends $protobuf.rpc.Service {

                        /**
                         * Constructs a new Query service.
                         * @param rpcImpl RPC implementation
                         * @param [requestDelimited=false] Whether requests are length-delimited
                         * @param [responseDelimited=false] Whether responses are length-delimited
                         */
                        constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                        /**
                         * Calls Params.
                         * @param request QueryParamsRequest message or plain object
                         * @param callback Node-style callback called with the error, if any, and QueryParamsResponse
                         */
                        public params(request: ibc.applications.interchain_accounts.host.v1.IQueryParamsRequest, callback: ibc.applications.interchain_accounts.host.v1.Query.ParamsCallback): void;

                        /**
                         * Calls Params.
                         * @param request QueryParamsRequest message or plain object
                         * @returns Promise
                         */
                        public params(request: ibc.applications.interchain_accounts.host.v1.IQueryParamsRequest): Promise<ibc.applications.interchain_accounts.host.v1.QueryParamsResponse>;
                    }

                    namespace Query {

                        /**
                         * Callback as used by {@link ibc.applications.interchain_accounts.host.v1.Query#params}.
                         * @param error Error, if any
                         * @param [response] QueryParamsResponse
                         */
                        type ParamsCallback = (error: (Error|null), response?: ibc.applications.interchain_accounts.host.v1.QueryParamsResponse) => void;
                    }

                    /** Properties of a QueryParamsRequest. */
                    interface IQueryParamsRequest {
                    }

                    /** Represents a QueryParamsRequest. */
                    class QueryParamsRequest implements IQueryParamsRequest {

                        /**
                         * Constructs a new QueryParamsRequest.
                         * @param [properties] Properties to set
                         */
                        constructor(properties?: ibc.applications.interchain_accounts.host.v1.IQueryParamsRequest);

                        /**
                         * Encodes the specified QueryParamsRequest message. Does not implicitly {@link ibc.applications.interchain_accounts.host.v1.QueryParamsRequest.verify|verify} messages.
                         * @param message QueryParamsRequest message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encode(message: ibc.applications.interchain_accounts.host.v1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Encodes the specified QueryParamsRequest message, length delimited. Does not implicitly {@link ibc.applications.interchain_accounts.host.v1.QueryParamsRequest.verify|verify} messages.
                         * @param message QueryParamsRequest message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encodeDelimited(message: ibc.applications.interchain_accounts.host.v1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Decodes a QueryParamsRequest message from the specified reader or buffer.
                         * @param reader Reader or buffer to decode from
                         * @param [length] Message length if known beforehand
                         * @returns QueryParamsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.interchain_accounts.host.v1.QueryParamsRequest;

                        /**
                         * Decodes a QueryParamsRequest message from the specified reader or buffer, length delimited.
                         * @param reader Reader or buffer to decode from
                         * @returns QueryParamsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.interchain_accounts.host.v1.QueryParamsRequest;

                        /**
                         * Verifies a QueryParamsRequest message.
                         * @param message Plain object to verify
                         * @returns `null` if valid, otherwise the reason why it is not
                         */
                        public static verify(message: { [k: string]: any }): (string|null);

                        /**
                         * Creates a QueryParamsRequest message from a plain object. Also converts values to their respective internal types.
                         * @param object Plain object
                         * @returns QueryParamsRequest
                         */
                        public static fromObject(object: { [k: string]: any }): ibc.applications.interchain_accounts.host.v1.QueryParamsRequest;

                        /**
                         * Creates a plain object from a QueryParamsRequest message. Also converts values to other types if specified.
                         * @param message QueryParamsRequest
                         * @param [options] Conversion options
                         * @returns Plain object
                         */
                        public static toObject(message: ibc.applications.interchain_accounts.host.v1.QueryParamsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                        /**
                         * Converts this QueryParamsRequest to JSON.
                         * @returns JSON object
                         */
                        public toJSON(): { [k: string]: any };
                    }

                    /** Properties of a QueryParamsResponse. */
                    interface IQueryParamsResponse {

                        /** QueryParamsResponse params */
                        params?: (ibc.applications.interchain_accounts.host.v1.IParams|null);
                    }

                    /** Represents a QueryParamsResponse. */
                    class QueryParamsResponse implements IQueryParamsResponse {

                        /**
                         * Constructs a new QueryParamsResponse.
                         * @param [properties] Properties to set
                         */
                        constructor(properties?: ibc.applications.interchain_accounts.host.v1.IQueryParamsResponse);

                        /** QueryParamsResponse params. */
                        public params?: (ibc.applications.interchain_accounts.host.v1.IParams|null);

                        /**
                         * Encodes the specified QueryParamsResponse message. Does not implicitly {@link ibc.applications.interchain_accounts.host.v1.QueryParamsResponse.verify|verify} messages.
                         * @param message QueryParamsResponse message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encode(message: ibc.applications.interchain_accounts.host.v1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Encodes the specified QueryParamsResponse message, length delimited. Does not implicitly {@link ibc.applications.interchain_accounts.host.v1.QueryParamsResponse.verify|verify} messages.
                         * @param message QueryParamsResponse message or plain object to encode
                         * @param [writer] Writer to encode to
                         * @returns Writer
                         */
                        public static encodeDelimited(message: ibc.applications.interchain_accounts.host.v1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                        /**
                         * Decodes a QueryParamsResponse message from the specified reader or buffer.
                         * @param reader Reader or buffer to decode from
                         * @param [length] Message length if known beforehand
                         * @returns QueryParamsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.interchain_accounts.host.v1.QueryParamsResponse;

                        /**
                         * Decodes a QueryParamsResponse message from the specified reader or buffer, length delimited.
                         * @param reader Reader or buffer to decode from
                         * @returns QueryParamsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.interchain_accounts.host.v1.QueryParamsResponse;

                        /**
                         * Verifies a QueryParamsResponse message.
                         * @param message Plain object to verify
                         * @returns `null` if valid, otherwise the reason why it is not
                         */
                        public static verify(message: { [k: string]: any }): (string|null);

                        /**
                         * Creates a QueryParamsResponse message from a plain object. Also converts values to their respective internal types.
                         * @param object Plain object
                         * @returns QueryParamsResponse
                         */
                        public static fromObject(object: { [k: string]: any }): ibc.applications.interchain_accounts.host.v1.QueryParamsResponse;

                        /**
                         * Creates a plain object from a QueryParamsResponse message. Also converts values to other types if specified.
                         * @param message QueryParamsResponse
                         * @param [options] Conversion options
                         * @returns Plain object
                         */
                        public static toObject(message: ibc.applications.interchain_accounts.host.v1.QueryParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                        /**
                         * Converts this QueryParamsResponse to JSON.
                         * @returns JSON object
                         */
                        public toJSON(): { [k: string]: any };
                    }
                }
            }
        }

        /** Namespace transfer. */
        namespace transfer {

            /** Namespace v1. */
            namespace v1 {

                /** Represents a Msg */
                class Msg extends $protobuf.rpc.Service {

                    /**
                     * Constructs a new Msg service.
                     * @param rpcImpl RPC implementation
                     * @param [requestDelimited=false] Whether requests are length-delimited
                     * @param [responseDelimited=false] Whether responses are length-delimited
                     */
                    constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                    /**
                     * Calls Transfer.
                     * @param request MsgTransfer message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgTransferResponse
                     */
                    public transfer(request: ibc.applications.transfer.v1.IMsgTransfer, callback: ibc.applications.transfer.v1.Msg.TransferCallback): void;

                    /**
                     * Calls Transfer.
                     * @param request MsgTransfer message or plain object
                     * @returns Promise
                     */
                    public transfer(request: ibc.applications.transfer.v1.IMsgTransfer): Promise<ibc.applications.transfer.v1.MsgTransferResponse>;
                }

                namespace Msg {

                    /**
                     * Callback as used by {@link ibc.applications.transfer.v1.Msg#transfer}.
                     * @param error Error, if any
                     * @param [response] MsgTransferResponse
                     */
                    type TransferCallback = (error: (Error|null), response?: ibc.applications.transfer.v1.MsgTransferResponse) => void;
                }

                /** Properties of a MsgTransfer. */
                interface IMsgTransfer {

                    /** MsgTransfer source_port */
                    source_port?: (string|null);

                    /** MsgTransfer source_channel */
                    source_channel?: (string|null);

                    /** MsgTransfer token */
                    token?: (cosmos.base.v1beta1.ICoin|null);

                    /** MsgTransfer sender */
                    sender?: (string|null);

                    /** MsgTransfer receiver */
                    receiver?: (string|null);

                    /** MsgTransfer timeout_height */
                    timeout_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgTransfer timeout_timestamp */
                    timeout_timestamp?: (Long|null);

                    /** MsgTransfer memo */
                    memo?: (string|null);
                }

                /** Represents a MsgTransfer. */
                class MsgTransfer implements IMsgTransfer {

                    /**
                     * Constructs a new MsgTransfer.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.transfer.v1.IMsgTransfer);

                    /** MsgTransfer source_port. */
                    public source_port: string;

                    /** MsgTransfer source_channel. */
                    public source_channel: string;

                    /** MsgTransfer token. */
                    public token?: (cosmos.base.v1beta1.ICoin|null);

                    /** MsgTransfer sender. */
                    public sender: string;

                    /** MsgTransfer receiver. */
                    public receiver: string;

                    /** MsgTransfer timeout_height. */
                    public timeout_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgTransfer timeout_timestamp. */
                    public timeout_timestamp: Long;

                    /** MsgTransfer memo. */
                    public memo: string;

                    /**
                     * Encodes the specified MsgTransfer message. Does not implicitly {@link ibc.applications.transfer.v1.MsgTransfer.verify|verify} messages.
                     * @param message MsgTransfer message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.transfer.v1.IMsgTransfer, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgTransfer message, length delimited. Does not implicitly {@link ibc.applications.transfer.v1.MsgTransfer.verify|verify} messages.
                     * @param message MsgTransfer message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.transfer.v1.IMsgTransfer, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgTransfer message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgTransfer
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.transfer.v1.MsgTransfer;

                    /**
                     * Decodes a MsgTransfer message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgTransfer
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.transfer.v1.MsgTransfer;

                    /**
                     * Verifies a MsgTransfer message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgTransfer message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgTransfer
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.transfer.v1.MsgTransfer;

                    /**
                     * Creates a plain object from a MsgTransfer message. Also converts values to other types if specified.
                     * @param message MsgTransfer
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.transfer.v1.MsgTransfer, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgTransfer to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgTransferResponse. */
                interface IMsgTransferResponse {

                    /** MsgTransferResponse sequence */
                    sequence?: (Long|null);
                }

                /** Represents a MsgTransferResponse. */
                class MsgTransferResponse implements IMsgTransferResponse {

                    /**
                     * Constructs a new MsgTransferResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.transfer.v1.IMsgTransferResponse);

                    /** MsgTransferResponse sequence. */
                    public sequence: Long;

                    /**
                     * Encodes the specified MsgTransferResponse message. Does not implicitly {@link ibc.applications.transfer.v1.MsgTransferResponse.verify|verify} messages.
                     * @param message MsgTransferResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.transfer.v1.IMsgTransferResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgTransferResponse message, length delimited. Does not implicitly {@link ibc.applications.transfer.v1.MsgTransferResponse.verify|verify} messages.
                     * @param message MsgTransferResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.transfer.v1.IMsgTransferResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgTransferResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgTransferResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.transfer.v1.MsgTransferResponse;

                    /**
                     * Decodes a MsgTransferResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgTransferResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.transfer.v1.MsgTransferResponse;

                    /**
                     * Verifies a MsgTransferResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgTransferResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgTransferResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.transfer.v1.MsgTransferResponse;

                    /**
                     * Creates a plain object from a MsgTransferResponse message. Also converts values to other types if specified.
                     * @param message MsgTransferResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.transfer.v1.MsgTransferResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgTransferResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a DenomTrace. */
                interface IDenomTrace {

                    /** DenomTrace path */
                    path?: (string|null);

                    /** DenomTrace base_denom */
                    base_denom?: (string|null);
                }

                /** Represents a DenomTrace. */
                class DenomTrace implements IDenomTrace {

                    /**
                     * Constructs a new DenomTrace.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.transfer.v1.IDenomTrace);

                    /** DenomTrace path. */
                    public path: string;

                    /** DenomTrace base_denom. */
                    public base_denom: string;

                    /**
                     * Encodes the specified DenomTrace message. Does not implicitly {@link ibc.applications.transfer.v1.DenomTrace.verify|verify} messages.
                     * @param message DenomTrace message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.transfer.v1.IDenomTrace, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified DenomTrace message, length delimited. Does not implicitly {@link ibc.applications.transfer.v1.DenomTrace.verify|verify} messages.
                     * @param message DenomTrace message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.transfer.v1.IDenomTrace, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a DenomTrace message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns DenomTrace
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.transfer.v1.DenomTrace;

                    /**
                     * Decodes a DenomTrace message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns DenomTrace
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.transfer.v1.DenomTrace;

                    /**
                     * Verifies a DenomTrace message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a DenomTrace message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns DenomTrace
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.transfer.v1.DenomTrace;

                    /**
                     * Creates a plain object from a DenomTrace message. Also converts values to other types if specified.
                     * @param message DenomTrace
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.transfer.v1.DenomTrace, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this DenomTrace to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Params. */
                interface IParams {

                    /** Params send_enabled */
                    send_enabled?: (boolean|null);

                    /** Params receive_enabled */
                    receive_enabled?: (boolean|null);
                }

                /** Represents a Params. */
                class Params implements IParams {

                    /**
                     * Constructs a new Params.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.transfer.v1.IParams);

                    /** Params send_enabled. */
                    public send_enabled: boolean;

                    /** Params receive_enabled. */
                    public receive_enabled: boolean;

                    /**
                     * Encodes the specified Params message. Does not implicitly {@link ibc.applications.transfer.v1.Params.verify|verify} messages.
                     * @param message Params message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.transfer.v1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Params message, length delimited. Does not implicitly {@link ibc.applications.transfer.v1.Params.verify|verify} messages.
                     * @param message Params message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.transfer.v1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Params message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Params
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.transfer.v1.Params;

                    /**
                     * Decodes a Params message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Params
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.transfer.v1.Params;

                    /**
                     * Verifies a Params message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Params message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Params
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.transfer.v1.Params;

                    /**
                     * Creates a plain object from a Params message. Also converts values to other types if specified.
                     * @param message Params
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.transfer.v1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Params to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Represents a Query */
                class Query extends $protobuf.rpc.Service {

                    /**
                     * Constructs a new Query service.
                     * @param rpcImpl RPC implementation
                     * @param [requestDelimited=false] Whether requests are length-delimited
                     * @param [responseDelimited=false] Whether responses are length-delimited
                     */
                    constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                    /**
                     * Calls DenomTrace.
                     * @param request QueryDenomTraceRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryDenomTraceResponse
                     */
                    public denomTrace(request: ibc.applications.transfer.v1.IQueryDenomTraceRequest, callback: ibc.applications.transfer.v1.Query.DenomTraceCallback): void;

                    /**
                     * Calls DenomTrace.
                     * @param request QueryDenomTraceRequest message or plain object
                     * @returns Promise
                     */
                    public denomTrace(request: ibc.applications.transfer.v1.IQueryDenomTraceRequest): Promise<ibc.applications.transfer.v1.QueryDenomTraceResponse>;

                    /**
                     * Calls DenomTraces.
                     * @param request QueryDenomTracesRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryDenomTracesResponse
                     */
                    public denomTraces(request: ibc.applications.transfer.v1.IQueryDenomTracesRequest, callback: ibc.applications.transfer.v1.Query.DenomTracesCallback): void;

                    /**
                     * Calls DenomTraces.
                     * @param request QueryDenomTracesRequest message or plain object
                     * @returns Promise
                     */
                    public denomTraces(request: ibc.applications.transfer.v1.IQueryDenomTracesRequest): Promise<ibc.applications.transfer.v1.QueryDenomTracesResponse>;

                    /**
                     * Calls Params.
                     * @param request QueryParamsRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryParamsResponse
                     */
                    public params(request: ibc.applications.transfer.v1.IQueryParamsRequest, callback: ibc.applications.transfer.v1.Query.ParamsCallback): void;

                    /**
                     * Calls Params.
                     * @param request QueryParamsRequest message or plain object
                     * @returns Promise
                     */
                    public params(request: ibc.applications.transfer.v1.IQueryParamsRequest): Promise<ibc.applications.transfer.v1.QueryParamsResponse>;

                    /**
                     * Calls DenomHash.
                     * @param request QueryDenomHashRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryDenomHashResponse
                     */
                    public denomHash(request: ibc.applications.transfer.v1.IQueryDenomHashRequest, callback: ibc.applications.transfer.v1.Query.DenomHashCallback): void;

                    /**
                     * Calls DenomHash.
                     * @param request QueryDenomHashRequest message or plain object
                     * @returns Promise
                     */
                    public denomHash(request: ibc.applications.transfer.v1.IQueryDenomHashRequest): Promise<ibc.applications.transfer.v1.QueryDenomHashResponse>;

                    /**
                     * Calls EscrowAddress.
                     * @param request QueryEscrowAddressRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryEscrowAddressResponse
                     */
                    public escrowAddress(request: ibc.applications.transfer.v1.IQueryEscrowAddressRequest, callback: ibc.applications.transfer.v1.Query.EscrowAddressCallback): void;

                    /**
                     * Calls EscrowAddress.
                     * @param request QueryEscrowAddressRequest message or plain object
                     * @returns Promise
                     */
                    public escrowAddress(request: ibc.applications.transfer.v1.IQueryEscrowAddressRequest): Promise<ibc.applications.transfer.v1.QueryEscrowAddressResponse>;

                    /**
                     * Calls TotalEscrowForDenom.
                     * @param request QueryTotalEscrowForDenomRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryTotalEscrowForDenomResponse
                     */
                    public totalEscrowForDenom(request: ibc.applications.transfer.v1.IQueryTotalEscrowForDenomRequest, callback: ibc.applications.transfer.v1.Query.TotalEscrowForDenomCallback): void;

                    /**
                     * Calls TotalEscrowForDenom.
                     * @param request QueryTotalEscrowForDenomRequest message or plain object
                     * @returns Promise
                     */
                    public totalEscrowForDenom(request: ibc.applications.transfer.v1.IQueryTotalEscrowForDenomRequest): Promise<ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse>;
                }

                namespace Query {

                    /**
                     * Callback as used by {@link ibc.applications.transfer.v1.Query#denomTrace}.
                     * @param error Error, if any
                     * @param [response] QueryDenomTraceResponse
                     */
                    type DenomTraceCallback = (error: (Error|null), response?: ibc.applications.transfer.v1.QueryDenomTraceResponse) => void;

                    /**
                     * Callback as used by {@link ibc.applications.transfer.v1.Query#denomTraces}.
                     * @param error Error, if any
                     * @param [response] QueryDenomTracesResponse
                     */
                    type DenomTracesCallback = (error: (Error|null), response?: ibc.applications.transfer.v1.QueryDenomTracesResponse) => void;

                    /**
                     * Callback as used by {@link ibc.applications.transfer.v1.Query#params}.
                     * @param error Error, if any
                     * @param [response] QueryParamsResponse
                     */
                    type ParamsCallback = (error: (Error|null), response?: ibc.applications.transfer.v1.QueryParamsResponse) => void;

                    /**
                     * Callback as used by {@link ibc.applications.transfer.v1.Query#denomHash}.
                     * @param error Error, if any
                     * @param [response] QueryDenomHashResponse
                     */
                    type DenomHashCallback = (error: (Error|null), response?: ibc.applications.transfer.v1.QueryDenomHashResponse) => void;

                    /**
                     * Callback as used by {@link ibc.applications.transfer.v1.Query#escrowAddress}.
                     * @param error Error, if any
                     * @param [response] QueryEscrowAddressResponse
                     */
                    type EscrowAddressCallback = (error: (Error|null), response?: ibc.applications.transfer.v1.QueryEscrowAddressResponse) => void;

                    /**
                     * Callback as used by {@link ibc.applications.transfer.v1.Query#totalEscrowForDenom}.
                     * @param error Error, if any
                     * @param [response] QueryTotalEscrowForDenomResponse
                     */
                    type TotalEscrowForDenomCallback = (error: (Error|null), response?: ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse) => void;
                }

                /** Properties of a QueryDenomTraceRequest. */
                interface IQueryDenomTraceRequest {

                    /** QueryDenomTraceRequest hash */
                    hash?: (string|null);
                }

                /** Represents a QueryDenomTraceRequest. */
                class QueryDenomTraceRequest implements IQueryDenomTraceRequest {

                    /**
                     * Constructs a new QueryDenomTraceRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.transfer.v1.IQueryDenomTraceRequest);

                    /** QueryDenomTraceRequest hash. */
                    public hash: string;

                    /**
                     * Encodes the specified QueryDenomTraceRequest message. Does not implicitly {@link ibc.applications.transfer.v1.QueryDenomTraceRequest.verify|verify} messages.
                     * @param message QueryDenomTraceRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.transfer.v1.IQueryDenomTraceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryDenomTraceRequest message, length delimited. Does not implicitly {@link ibc.applications.transfer.v1.QueryDenomTraceRequest.verify|verify} messages.
                     * @param message QueryDenomTraceRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.transfer.v1.IQueryDenomTraceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryDenomTraceRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryDenomTraceRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.transfer.v1.QueryDenomTraceRequest;

                    /**
                     * Decodes a QueryDenomTraceRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryDenomTraceRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.transfer.v1.QueryDenomTraceRequest;

                    /**
                     * Verifies a QueryDenomTraceRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryDenomTraceRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryDenomTraceRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.transfer.v1.QueryDenomTraceRequest;

                    /**
                     * Creates a plain object from a QueryDenomTraceRequest message. Also converts values to other types if specified.
                     * @param message QueryDenomTraceRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.transfer.v1.QueryDenomTraceRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryDenomTraceRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryDenomTraceResponse. */
                interface IQueryDenomTraceResponse {

                    /** QueryDenomTraceResponse denom_trace */
                    denom_trace?: (ibc.applications.transfer.v1.IDenomTrace|null);
                }

                /** Represents a QueryDenomTraceResponse. */
                class QueryDenomTraceResponse implements IQueryDenomTraceResponse {

                    /**
                     * Constructs a new QueryDenomTraceResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.transfer.v1.IQueryDenomTraceResponse);

                    /** QueryDenomTraceResponse denom_trace. */
                    public denom_trace?: (ibc.applications.transfer.v1.IDenomTrace|null);

                    /**
                     * Encodes the specified QueryDenomTraceResponse message. Does not implicitly {@link ibc.applications.transfer.v1.QueryDenomTraceResponse.verify|verify} messages.
                     * @param message QueryDenomTraceResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.transfer.v1.IQueryDenomTraceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryDenomTraceResponse message, length delimited. Does not implicitly {@link ibc.applications.transfer.v1.QueryDenomTraceResponse.verify|verify} messages.
                     * @param message QueryDenomTraceResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.transfer.v1.IQueryDenomTraceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryDenomTraceResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryDenomTraceResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.transfer.v1.QueryDenomTraceResponse;

                    /**
                     * Decodes a QueryDenomTraceResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryDenomTraceResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.transfer.v1.QueryDenomTraceResponse;

                    /**
                     * Verifies a QueryDenomTraceResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryDenomTraceResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryDenomTraceResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.transfer.v1.QueryDenomTraceResponse;

                    /**
                     * Creates a plain object from a QueryDenomTraceResponse message. Also converts values to other types if specified.
                     * @param message QueryDenomTraceResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.transfer.v1.QueryDenomTraceResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryDenomTraceResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryDenomTracesRequest. */
                interface IQueryDenomTracesRequest {

                    /** QueryDenomTracesRequest pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
                }

                /** Represents a QueryDenomTracesRequest. */
                class QueryDenomTracesRequest implements IQueryDenomTracesRequest {

                    /**
                     * Constructs a new QueryDenomTracesRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.transfer.v1.IQueryDenomTracesRequest);

                    /** QueryDenomTracesRequest pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /**
                     * Encodes the specified QueryDenomTracesRequest message. Does not implicitly {@link ibc.applications.transfer.v1.QueryDenomTracesRequest.verify|verify} messages.
                     * @param message QueryDenomTracesRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.transfer.v1.IQueryDenomTracesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryDenomTracesRequest message, length delimited. Does not implicitly {@link ibc.applications.transfer.v1.QueryDenomTracesRequest.verify|verify} messages.
                     * @param message QueryDenomTracesRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.transfer.v1.IQueryDenomTracesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryDenomTracesRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryDenomTracesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.transfer.v1.QueryDenomTracesRequest;

                    /**
                     * Decodes a QueryDenomTracesRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryDenomTracesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.transfer.v1.QueryDenomTracesRequest;

                    /**
                     * Verifies a QueryDenomTracesRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryDenomTracesRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryDenomTracesRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.transfer.v1.QueryDenomTracesRequest;

                    /**
                     * Creates a plain object from a QueryDenomTracesRequest message. Also converts values to other types if specified.
                     * @param message QueryDenomTracesRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.transfer.v1.QueryDenomTracesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryDenomTracesRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryDenomTracesResponse. */
                interface IQueryDenomTracesResponse {

                    /** QueryDenomTracesResponse denom_traces */
                    denom_traces?: (ibc.applications.transfer.v1.IDenomTrace[]|null);

                    /** QueryDenomTracesResponse pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
                }

                /** Represents a QueryDenomTracesResponse. */
                class QueryDenomTracesResponse implements IQueryDenomTracesResponse {

                    /**
                     * Constructs a new QueryDenomTracesResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.transfer.v1.IQueryDenomTracesResponse);

                    /** QueryDenomTracesResponse denom_traces. */
                    public denom_traces: ibc.applications.transfer.v1.IDenomTrace[];

                    /** QueryDenomTracesResponse pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /**
                     * Encodes the specified QueryDenomTracesResponse message. Does not implicitly {@link ibc.applications.transfer.v1.QueryDenomTracesResponse.verify|verify} messages.
                     * @param message QueryDenomTracesResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.transfer.v1.IQueryDenomTracesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryDenomTracesResponse message, length delimited. Does not implicitly {@link ibc.applications.transfer.v1.QueryDenomTracesResponse.verify|verify} messages.
                     * @param message QueryDenomTracesResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.transfer.v1.IQueryDenomTracesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryDenomTracesResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryDenomTracesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.transfer.v1.QueryDenomTracesResponse;

                    /**
                     * Decodes a QueryDenomTracesResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryDenomTracesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.transfer.v1.QueryDenomTracesResponse;

                    /**
                     * Verifies a QueryDenomTracesResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryDenomTracesResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryDenomTracesResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.transfer.v1.QueryDenomTracesResponse;

                    /**
                     * Creates a plain object from a QueryDenomTracesResponse message. Also converts values to other types if specified.
                     * @param message QueryDenomTracesResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.transfer.v1.QueryDenomTracesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryDenomTracesResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryParamsRequest. */
                interface IQueryParamsRequest {
                }

                /** Represents a QueryParamsRequest. */
                class QueryParamsRequest implements IQueryParamsRequest {

                    /**
                     * Constructs a new QueryParamsRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.transfer.v1.IQueryParamsRequest);

                    /**
                     * Encodes the specified QueryParamsRequest message. Does not implicitly {@link ibc.applications.transfer.v1.QueryParamsRequest.verify|verify} messages.
                     * @param message QueryParamsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.transfer.v1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryParamsRequest message, length delimited. Does not implicitly {@link ibc.applications.transfer.v1.QueryParamsRequest.verify|verify} messages.
                     * @param message QueryParamsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.transfer.v1.IQueryParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryParamsRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryParamsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.transfer.v1.QueryParamsRequest;

                    /**
                     * Decodes a QueryParamsRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryParamsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.transfer.v1.QueryParamsRequest;

                    /**
                     * Verifies a QueryParamsRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryParamsRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryParamsRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.transfer.v1.QueryParamsRequest;

                    /**
                     * Creates a plain object from a QueryParamsRequest message. Also converts values to other types if specified.
                     * @param message QueryParamsRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.transfer.v1.QueryParamsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryParamsRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryParamsResponse. */
                interface IQueryParamsResponse {

                    /** QueryParamsResponse params */
                    params?: (ibc.applications.transfer.v1.IParams|null);
                }

                /** Represents a QueryParamsResponse. */
                class QueryParamsResponse implements IQueryParamsResponse {

                    /**
                     * Constructs a new QueryParamsResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.transfer.v1.IQueryParamsResponse);

                    /** QueryParamsResponse params. */
                    public params?: (ibc.applications.transfer.v1.IParams|null);

                    /**
                     * Encodes the specified QueryParamsResponse message. Does not implicitly {@link ibc.applications.transfer.v1.QueryParamsResponse.verify|verify} messages.
                     * @param message QueryParamsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.transfer.v1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryParamsResponse message, length delimited. Does not implicitly {@link ibc.applications.transfer.v1.QueryParamsResponse.verify|verify} messages.
                     * @param message QueryParamsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.transfer.v1.IQueryParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryParamsResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryParamsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.transfer.v1.QueryParamsResponse;

                    /**
                     * Decodes a QueryParamsResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryParamsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.transfer.v1.QueryParamsResponse;

                    /**
                     * Verifies a QueryParamsResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryParamsResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryParamsResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.transfer.v1.QueryParamsResponse;

                    /**
                     * Creates a plain object from a QueryParamsResponse message. Also converts values to other types if specified.
                     * @param message QueryParamsResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.transfer.v1.QueryParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryParamsResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryDenomHashRequest. */
                interface IQueryDenomHashRequest {

                    /** QueryDenomHashRequest trace */
                    trace?: (string|null);
                }

                /** Represents a QueryDenomHashRequest. */
                class QueryDenomHashRequest implements IQueryDenomHashRequest {

                    /**
                     * Constructs a new QueryDenomHashRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.transfer.v1.IQueryDenomHashRequest);

                    /** QueryDenomHashRequest trace. */
                    public trace: string;

                    /**
                     * Encodes the specified QueryDenomHashRequest message. Does not implicitly {@link ibc.applications.transfer.v1.QueryDenomHashRequest.verify|verify} messages.
                     * @param message QueryDenomHashRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.transfer.v1.IQueryDenomHashRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryDenomHashRequest message, length delimited. Does not implicitly {@link ibc.applications.transfer.v1.QueryDenomHashRequest.verify|verify} messages.
                     * @param message QueryDenomHashRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.transfer.v1.IQueryDenomHashRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryDenomHashRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryDenomHashRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.transfer.v1.QueryDenomHashRequest;

                    /**
                     * Decodes a QueryDenomHashRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryDenomHashRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.transfer.v1.QueryDenomHashRequest;

                    /**
                     * Verifies a QueryDenomHashRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryDenomHashRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryDenomHashRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.transfer.v1.QueryDenomHashRequest;

                    /**
                     * Creates a plain object from a QueryDenomHashRequest message. Also converts values to other types if specified.
                     * @param message QueryDenomHashRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.transfer.v1.QueryDenomHashRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryDenomHashRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryDenomHashResponse. */
                interface IQueryDenomHashResponse {

                    /** QueryDenomHashResponse hash */
                    hash?: (string|null);
                }

                /** Represents a QueryDenomHashResponse. */
                class QueryDenomHashResponse implements IQueryDenomHashResponse {

                    /**
                     * Constructs a new QueryDenomHashResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.transfer.v1.IQueryDenomHashResponse);

                    /** QueryDenomHashResponse hash. */
                    public hash: string;

                    /**
                     * Encodes the specified QueryDenomHashResponse message. Does not implicitly {@link ibc.applications.transfer.v1.QueryDenomHashResponse.verify|verify} messages.
                     * @param message QueryDenomHashResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.transfer.v1.IQueryDenomHashResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryDenomHashResponse message, length delimited. Does not implicitly {@link ibc.applications.transfer.v1.QueryDenomHashResponse.verify|verify} messages.
                     * @param message QueryDenomHashResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.transfer.v1.IQueryDenomHashResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryDenomHashResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryDenomHashResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.transfer.v1.QueryDenomHashResponse;

                    /**
                     * Decodes a QueryDenomHashResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryDenomHashResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.transfer.v1.QueryDenomHashResponse;

                    /**
                     * Verifies a QueryDenomHashResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryDenomHashResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryDenomHashResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.transfer.v1.QueryDenomHashResponse;

                    /**
                     * Creates a plain object from a QueryDenomHashResponse message. Also converts values to other types if specified.
                     * @param message QueryDenomHashResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.transfer.v1.QueryDenomHashResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryDenomHashResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryEscrowAddressRequest. */
                interface IQueryEscrowAddressRequest {

                    /** QueryEscrowAddressRequest port_id */
                    port_id?: (string|null);

                    /** QueryEscrowAddressRequest channel_id */
                    channel_id?: (string|null);
                }

                /** Represents a QueryEscrowAddressRequest. */
                class QueryEscrowAddressRequest implements IQueryEscrowAddressRequest {

                    /**
                     * Constructs a new QueryEscrowAddressRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.transfer.v1.IQueryEscrowAddressRequest);

                    /** QueryEscrowAddressRequest port_id. */
                    public port_id: string;

                    /** QueryEscrowAddressRequest channel_id. */
                    public channel_id: string;

                    /**
                     * Encodes the specified QueryEscrowAddressRequest message. Does not implicitly {@link ibc.applications.transfer.v1.QueryEscrowAddressRequest.verify|verify} messages.
                     * @param message QueryEscrowAddressRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.transfer.v1.IQueryEscrowAddressRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryEscrowAddressRequest message, length delimited. Does not implicitly {@link ibc.applications.transfer.v1.QueryEscrowAddressRequest.verify|verify} messages.
                     * @param message QueryEscrowAddressRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.transfer.v1.IQueryEscrowAddressRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryEscrowAddressRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryEscrowAddressRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.transfer.v1.QueryEscrowAddressRequest;

                    /**
                     * Decodes a QueryEscrowAddressRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryEscrowAddressRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.transfer.v1.QueryEscrowAddressRequest;

                    /**
                     * Verifies a QueryEscrowAddressRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryEscrowAddressRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryEscrowAddressRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.transfer.v1.QueryEscrowAddressRequest;

                    /**
                     * Creates a plain object from a QueryEscrowAddressRequest message. Also converts values to other types if specified.
                     * @param message QueryEscrowAddressRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.transfer.v1.QueryEscrowAddressRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryEscrowAddressRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryEscrowAddressResponse. */
                interface IQueryEscrowAddressResponse {

                    /** QueryEscrowAddressResponse escrow_address */
                    escrow_address?: (string|null);
                }

                /** Represents a QueryEscrowAddressResponse. */
                class QueryEscrowAddressResponse implements IQueryEscrowAddressResponse {

                    /**
                     * Constructs a new QueryEscrowAddressResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.transfer.v1.IQueryEscrowAddressResponse);

                    /** QueryEscrowAddressResponse escrow_address. */
                    public escrow_address: string;

                    /**
                     * Encodes the specified QueryEscrowAddressResponse message. Does not implicitly {@link ibc.applications.transfer.v1.QueryEscrowAddressResponse.verify|verify} messages.
                     * @param message QueryEscrowAddressResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.transfer.v1.IQueryEscrowAddressResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryEscrowAddressResponse message, length delimited. Does not implicitly {@link ibc.applications.transfer.v1.QueryEscrowAddressResponse.verify|verify} messages.
                     * @param message QueryEscrowAddressResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.transfer.v1.IQueryEscrowAddressResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryEscrowAddressResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryEscrowAddressResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.transfer.v1.QueryEscrowAddressResponse;

                    /**
                     * Decodes a QueryEscrowAddressResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryEscrowAddressResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.transfer.v1.QueryEscrowAddressResponse;

                    /**
                     * Verifies a QueryEscrowAddressResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryEscrowAddressResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryEscrowAddressResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.transfer.v1.QueryEscrowAddressResponse;

                    /**
                     * Creates a plain object from a QueryEscrowAddressResponse message. Also converts values to other types if specified.
                     * @param message QueryEscrowAddressResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.transfer.v1.QueryEscrowAddressResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryEscrowAddressResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryTotalEscrowForDenomRequest. */
                interface IQueryTotalEscrowForDenomRequest {

                    /** QueryTotalEscrowForDenomRequest denom */
                    denom?: (string|null);
                }

                /** Represents a QueryTotalEscrowForDenomRequest. */
                class QueryTotalEscrowForDenomRequest implements IQueryTotalEscrowForDenomRequest {

                    /**
                     * Constructs a new QueryTotalEscrowForDenomRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.transfer.v1.IQueryTotalEscrowForDenomRequest);

                    /** QueryTotalEscrowForDenomRequest denom. */
                    public denom: string;

                    /**
                     * Encodes the specified QueryTotalEscrowForDenomRequest message. Does not implicitly {@link ibc.applications.transfer.v1.QueryTotalEscrowForDenomRequest.verify|verify} messages.
                     * @param message QueryTotalEscrowForDenomRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.transfer.v1.IQueryTotalEscrowForDenomRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryTotalEscrowForDenomRequest message, length delimited. Does not implicitly {@link ibc.applications.transfer.v1.QueryTotalEscrowForDenomRequest.verify|verify} messages.
                     * @param message QueryTotalEscrowForDenomRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.transfer.v1.IQueryTotalEscrowForDenomRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryTotalEscrowForDenomRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryTotalEscrowForDenomRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.transfer.v1.QueryTotalEscrowForDenomRequest;

                    /**
                     * Decodes a QueryTotalEscrowForDenomRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryTotalEscrowForDenomRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.transfer.v1.QueryTotalEscrowForDenomRequest;

                    /**
                     * Verifies a QueryTotalEscrowForDenomRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryTotalEscrowForDenomRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryTotalEscrowForDenomRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.transfer.v1.QueryTotalEscrowForDenomRequest;

                    /**
                     * Creates a plain object from a QueryTotalEscrowForDenomRequest message. Also converts values to other types if specified.
                     * @param message QueryTotalEscrowForDenomRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.transfer.v1.QueryTotalEscrowForDenomRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryTotalEscrowForDenomRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryTotalEscrowForDenomResponse. */
                interface IQueryTotalEscrowForDenomResponse {

                    /** QueryTotalEscrowForDenomResponse amount */
                    amount?: (cosmos.base.v1beta1.ICoin|null);
                }

                /** Represents a QueryTotalEscrowForDenomResponse. */
                class QueryTotalEscrowForDenomResponse implements IQueryTotalEscrowForDenomResponse {

                    /**
                     * Constructs a new QueryTotalEscrowForDenomResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.transfer.v1.IQueryTotalEscrowForDenomResponse);

                    /** QueryTotalEscrowForDenomResponse amount. */
                    public amount?: (cosmos.base.v1beta1.ICoin|null);

                    /**
                     * Encodes the specified QueryTotalEscrowForDenomResponse message. Does not implicitly {@link ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse.verify|verify} messages.
                     * @param message QueryTotalEscrowForDenomResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.transfer.v1.IQueryTotalEscrowForDenomResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryTotalEscrowForDenomResponse message, length delimited. Does not implicitly {@link ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse.verify|verify} messages.
                     * @param message QueryTotalEscrowForDenomResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.transfer.v1.IQueryTotalEscrowForDenomResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryTotalEscrowForDenomResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryTotalEscrowForDenomResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse;

                    /**
                     * Decodes a QueryTotalEscrowForDenomResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryTotalEscrowForDenomResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse;

                    /**
                     * Verifies a QueryTotalEscrowForDenomResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryTotalEscrowForDenomResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryTotalEscrowForDenomResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse;

                    /**
                     * Creates a plain object from a QueryTotalEscrowForDenomResponse message. Also converts values to other types if specified.
                     * @param message QueryTotalEscrowForDenomResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryTotalEscrowForDenomResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of an Allocation. */
                interface IAllocation {

                    /** Allocation source_port */
                    source_port?: (string|null);

                    /** Allocation source_channel */
                    source_channel?: (string|null);

                    /** Allocation spend_limit */
                    spend_limit?: (cosmos.base.v1beta1.ICoin[]|null);

                    /** Allocation allow_list */
                    allow_list?: (string[]|null);
                }

                /** Represents an Allocation. */
                class Allocation implements IAllocation {

                    /**
                     * Constructs a new Allocation.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.transfer.v1.IAllocation);

                    /** Allocation source_port. */
                    public source_port: string;

                    /** Allocation source_channel. */
                    public source_channel: string;

                    /** Allocation spend_limit. */
                    public spend_limit: cosmos.base.v1beta1.ICoin[];

                    /** Allocation allow_list. */
                    public allow_list: string[];

                    /**
                     * Encodes the specified Allocation message. Does not implicitly {@link ibc.applications.transfer.v1.Allocation.verify|verify} messages.
                     * @param message Allocation message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.transfer.v1.IAllocation, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Allocation message, length delimited. Does not implicitly {@link ibc.applications.transfer.v1.Allocation.verify|verify} messages.
                     * @param message Allocation message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.transfer.v1.IAllocation, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes an Allocation message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Allocation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.transfer.v1.Allocation;

                    /**
                     * Decodes an Allocation message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Allocation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.transfer.v1.Allocation;

                    /**
                     * Verifies an Allocation message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates an Allocation message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Allocation
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.transfer.v1.Allocation;

                    /**
                     * Creates a plain object from an Allocation message. Also converts values to other types if specified.
                     * @param message Allocation
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.transfer.v1.Allocation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Allocation to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a TransferAuthorization. */
                interface ITransferAuthorization {

                    /** TransferAuthorization allocations */
                    allocations?: (ibc.applications.transfer.v1.IAllocation[]|null);
                }

                /** Represents a TransferAuthorization. */
                class TransferAuthorization implements ITransferAuthorization {

                    /**
                     * Constructs a new TransferAuthorization.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.transfer.v1.ITransferAuthorization);

                    /** TransferAuthorization allocations. */
                    public allocations: ibc.applications.transfer.v1.IAllocation[];

                    /**
                     * Encodes the specified TransferAuthorization message. Does not implicitly {@link ibc.applications.transfer.v1.TransferAuthorization.verify|verify} messages.
                     * @param message TransferAuthorization message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.transfer.v1.ITransferAuthorization, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified TransferAuthorization message, length delimited. Does not implicitly {@link ibc.applications.transfer.v1.TransferAuthorization.verify|verify} messages.
                     * @param message TransferAuthorization message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.transfer.v1.ITransferAuthorization, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a TransferAuthorization message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns TransferAuthorization
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.transfer.v1.TransferAuthorization;

                    /**
                     * Decodes a TransferAuthorization message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns TransferAuthorization
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.transfer.v1.TransferAuthorization;

                    /**
                     * Verifies a TransferAuthorization message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a TransferAuthorization message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns TransferAuthorization
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.transfer.v1.TransferAuthorization;

                    /**
                     * Creates a plain object from a TransferAuthorization message. Also converts values to other types if specified.
                     * @param message TransferAuthorization
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.transfer.v1.TransferAuthorization, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this TransferAuthorization to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a GenesisState. */
                interface IGenesisState {

                    /** GenesisState port_id */
                    port_id?: (string|null);

                    /** GenesisState denom_traces */
                    denom_traces?: (ibc.applications.transfer.v1.IDenomTrace[]|null);

                    /** GenesisState params */
                    params?: (ibc.applications.transfer.v1.IParams|null);

                    /** GenesisState total_escrowed */
                    total_escrowed?: (cosmos.base.v1beta1.ICoin[]|null);
                }

                /** Represents a GenesisState. */
                class GenesisState implements IGenesisState {

                    /**
                     * Constructs a new GenesisState.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.transfer.v1.IGenesisState);

                    /** GenesisState port_id. */
                    public port_id: string;

                    /** GenesisState denom_traces. */
                    public denom_traces: ibc.applications.transfer.v1.IDenomTrace[];

                    /** GenesisState params. */
                    public params?: (ibc.applications.transfer.v1.IParams|null);

                    /** GenesisState total_escrowed. */
                    public total_escrowed: cosmos.base.v1beta1.ICoin[];

                    /**
                     * Encodes the specified GenesisState message. Does not implicitly {@link ibc.applications.transfer.v1.GenesisState.verify|verify} messages.
                     * @param message GenesisState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.transfer.v1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link ibc.applications.transfer.v1.GenesisState.verify|verify} messages.
                     * @param message GenesisState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.transfer.v1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GenesisState message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns GenesisState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.transfer.v1.GenesisState;

                    /**
                     * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns GenesisState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.transfer.v1.GenesisState;

                    /**
                     * Verifies a GenesisState message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns GenesisState
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.transfer.v1.GenesisState;

                    /**
                     * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                     * @param message GenesisState
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.transfer.v1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this GenesisState to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }

            /** Namespace v2. */
            namespace v2 {

                /** Properties of a FungibleTokenPacketData. */
                interface IFungibleTokenPacketData {

                    /** FungibleTokenPacketData denom */
                    denom?: (string|null);

                    /** FungibleTokenPacketData amount */
                    amount?: (string|null);

                    /** FungibleTokenPacketData sender */
                    sender?: (string|null);

                    /** FungibleTokenPacketData receiver */
                    receiver?: (string|null);

                    /** FungibleTokenPacketData memo */
                    memo?: (string|null);
                }

                /** Represents a FungibleTokenPacketData. */
                class FungibleTokenPacketData implements IFungibleTokenPacketData {

                    /**
                     * Constructs a new FungibleTokenPacketData.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.applications.transfer.v2.IFungibleTokenPacketData);

                    /** FungibleTokenPacketData denom. */
                    public denom: string;

                    /** FungibleTokenPacketData amount. */
                    public amount: string;

                    /** FungibleTokenPacketData sender. */
                    public sender: string;

                    /** FungibleTokenPacketData receiver. */
                    public receiver: string;

                    /** FungibleTokenPacketData memo. */
                    public memo: string;

                    /**
                     * Encodes the specified FungibleTokenPacketData message. Does not implicitly {@link ibc.applications.transfer.v2.FungibleTokenPacketData.verify|verify} messages.
                     * @param message FungibleTokenPacketData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.applications.transfer.v2.IFungibleTokenPacketData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified FungibleTokenPacketData message, length delimited. Does not implicitly {@link ibc.applications.transfer.v2.FungibleTokenPacketData.verify|verify} messages.
                     * @param message FungibleTokenPacketData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.applications.transfer.v2.IFungibleTokenPacketData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a FungibleTokenPacketData message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns FungibleTokenPacketData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.applications.transfer.v2.FungibleTokenPacketData;

                    /**
                     * Decodes a FungibleTokenPacketData message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns FungibleTokenPacketData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.applications.transfer.v2.FungibleTokenPacketData;

                    /**
                     * Verifies a FungibleTokenPacketData message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a FungibleTokenPacketData message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns FungibleTokenPacketData
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.applications.transfer.v2.FungibleTokenPacketData;

                    /**
                     * Creates a plain object from a FungibleTokenPacketData message. Also converts values to other types if specified.
                     * @param message FungibleTokenPacketData
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.applications.transfer.v2.FungibleTokenPacketData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this FungibleTokenPacketData to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }
        }
    }

    /** Namespace core. */
    namespace core {

        /** Namespace channel. */
        namespace channel {

            /** Namespace v1. */
            namespace v1 {

                /** Properties of a Channel. */
                interface IChannel {

                    /** Channel state */
                    state?: (ibc.core.channel.v1.State|null);

                    /** Channel ordering */
                    ordering?: (ibc.core.channel.v1.Order|null);

                    /** Channel counterparty */
                    counterparty?: (ibc.core.channel.v1.ICounterparty|null);

                    /** Channel connection_hops */
                    connection_hops?: (string[]|null);

                    /** Channel version */
                    version?: (string|null);
                }

                /** Represents a Channel. */
                class Channel implements IChannel {

                    /**
                     * Constructs a new Channel.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IChannel);

                    /** Channel state. */
                    public state: ibc.core.channel.v1.State;

                    /** Channel ordering. */
                    public ordering: ibc.core.channel.v1.Order;

                    /** Channel counterparty. */
                    public counterparty?: (ibc.core.channel.v1.ICounterparty|null);

                    /** Channel connection_hops. */
                    public connection_hops: string[];

                    /** Channel version. */
                    public version: string;

                    /**
                     * Encodes the specified Channel message. Does not implicitly {@link ibc.core.channel.v1.Channel.verify|verify} messages.
                     * @param message Channel message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IChannel, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Channel message, length delimited. Does not implicitly {@link ibc.core.channel.v1.Channel.verify|verify} messages.
                     * @param message Channel message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IChannel, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Channel message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Channel
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.Channel;

                    /**
                     * Decodes a Channel message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Channel
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.Channel;

                    /**
                     * Verifies a Channel message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Channel message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Channel
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.Channel;

                    /**
                     * Creates a plain object from a Channel message. Also converts values to other types if specified.
                     * @param message Channel
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.Channel, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Channel to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of an IdentifiedChannel. */
                interface IIdentifiedChannel {

                    /** IdentifiedChannel state */
                    state?: (ibc.core.channel.v1.State|null);

                    /** IdentifiedChannel ordering */
                    ordering?: (ibc.core.channel.v1.Order|null);

                    /** IdentifiedChannel counterparty */
                    counterparty?: (ibc.core.channel.v1.ICounterparty|null);

                    /** IdentifiedChannel connection_hops */
                    connection_hops?: (string[]|null);

                    /** IdentifiedChannel version */
                    version?: (string|null);

                    /** IdentifiedChannel port_id */
                    port_id?: (string|null);

                    /** IdentifiedChannel channel_id */
                    channel_id?: (string|null);
                }

                /** Represents an IdentifiedChannel. */
                class IdentifiedChannel implements IIdentifiedChannel {

                    /**
                     * Constructs a new IdentifiedChannel.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IIdentifiedChannel);

                    /** IdentifiedChannel state. */
                    public state: ibc.core.channel.v1.State;

                    /** IdentifiedChannel ordering. */
                    public ordering: ibc.core.channel.v1.Order;

                    /** IdentifiedChannel counterparty. */
                    public counterparty?: (ibc.core.channel.v1.ICounterparty|null);

                    /** IdentifiedChannel connection_hops. */
                    public connection_hops: string[];

                    /** IdentifiedChannel version. */
                    public version: string;

                    /** IdentifiedChannel port_id. */
                    public port_id: string;

                    /** IdentifiedChannel channel_id. */
                    public channel_id: string;

                    /**
                     * Encodes the specified IdentifiedChannel message. Does not implicitly {@link ibc.core.channel.v1.IdentifiedChannel.verify|verify} messages.
                     * @param message IdentifiedChannel message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IIdentifiedChannel, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified IdentifiedChannel message, length delimited. Does not implicitly {@link ibc.core.channel.v1.IdentifiedChannel.verify|verify} messages.
                     * @param message IdentifiedChannel message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IIdentifiedChannel, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes an IdentifiedChannel message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns IdentifiedChannel
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.IdentifiedChannel;

                    /**
                     * Decodes an IdentifiedChannel message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns IdentifiedChannel
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.IdentifiedChannel;

                    /**
                     * Verifies an IdentifiedChannel message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates an IdentifiedChannel message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns IdentifiedChannel
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.IdentifiedChannel;

                    /**
                     * Creates a plain object from an IdentifiedChannel message. Also converts values to other types if specified.
                     * @param message IdentifiedChannel
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.IdentifiedChannel, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this IdentifiedChannel to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** State enum. */
                enum State {
                    STATE_UNINITIALIZED_UNSPECIFIED = 0,
                    STATE_INIT = 1,
                    STATE_TRYOPEN = 2,
                    STATE_OPEN = 3,
                    STATE_CLOSED = 4
                }

                /** Order enum. */
                enum Order {
                    ORDER_NONE_UNSPECIFIED = 0,
                    ORDER_UNORDERED = 1,
                    ORDER_ORDERED = 2
                }

                /** Properties of a Counterparty. */
                interface ICounterparty {

                    /** Counterparty port_id */
                    port_id?: (string|null);

                    /** Counterparty channel_id */
                    channel_id?: (string|null);
                }

                /** Represents a Counterparty. */
                class Counterparty implements ICounterparty {

                    /**
                     * Constructs a new Counterparty.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.ICounterparty);

                    /** Counterparty port_id. */
                    public port_id: string;

                    /** Counterparty channel_id. */
                    public channel_id: string;

                    /**
                     * Encodes the specified Counterparty message. Does not implicitly {@link ibc.core.channel.v1.Counterparty.verify|verify} messages.
                     * @param message Counterparty message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.ICounterparty, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Counterparty message, length delimited. Does not implicitly {@link ibc.core.channel.v1.Counterparty.verify|verify} messages.
                     * @param message Counterparty message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.ICounterparty, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Counterparty message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Counterparty
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.Counterparty;

                    /**
                     * Decodes a Counterparty message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Counterparty
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.Counterparty;

                    /**
                     * Verifies a Counterparty message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Counterparty message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Counterparty
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.Counterparty;

                    /**
                     * Creates a plain object from a Counterparty message. Also converts values to other types if specified.
                     * @param message Counterparty
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.Counterparty, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Counterparty to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Packet. */
                interface IPacket {

                    /** Packet sequence */
                    sequence?: (Long|null);

                    /** Packet source_port */
                    source_port?: (string|null);

                    /** Packet source_channel */
                    source_channel?: (string|null);

                    /** Packet destination_port */
                    destination_port?: (string|null);

                    /** Packet destination_channel */
                    destination_channel?: (string|null);

                    /** Packet data */
                    data?: (Uint8Array|null);

                    /** Packet timeout_height */
                    timeout_height?: (ibc.core.client.v1.IHeight|null);

                    /** Packet timeout_timestamp */
                    timeout_timestamp?: (Long|null);
                }

                /** Represents a Packet. */
                class Packet implements IPacket {

                    /**
                     * Constructs a new Packet.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IPacket);

                    /** Packet sequence. */
                    public sequence: Long;

                    /** Packet source_port. */
                    public source_port: string;

                    /** Packet source_channel. */
                    public source_channel: string;

                    /** Packet destination_port. */
                    public destination_port: string;

                    /** Packet destination_channel. */
                    public destination_channel: string;

                    /** Packet data. */
                    public data: Uint8Array;

                    /** Packet timeout_height. */
                    public timeout_height?: (ibc.core.client.v1.IHeight|null);

                    /** Packet timeout_timestamp. */
                    public timeout_timestamp: Long;

                    /**
                     * Encodes the specified Packet message. Does not implicitly {@link ibc.core.channel.v1.Packet.verify|verify} messages.
                     * @param message Packet message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IPacket, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Packet message, length delimited. Does not implicitly {@link ibc.core.channel.v1.Packet.verify|verify} messages.
                     * @param message Packet message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IPacket, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Packet message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Packet
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.Packet;

                    /**
                     * Decodes a Packet message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Packet
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.Packet;

                    /**
                     * Verifies a Packet message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Packet message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Packet
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.Packet;

                    /**
                     * Creates a plain object from a Packet message. Also converts values to other types if specified.
                     * @param message Packet
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.Packet, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Packet to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a PacketState. */
                interface IPacketState {

                    /** PacketState port_id */
                    port_id?: (string|null);

                    /** PacketState channel_id */
                    channel_id?: (string|null);

                    /** PacketState sequence */
                    sequence?: (Long|null);

                    /** PacketState data */
                    data?: (Uint8Array|null);
                }

                /** Represents a PacketState. */
                class PacketState implements IPacketState {

                    /**
                     * Constructs a new PacketState.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IPacketState);

                    /** PacketState port_id. */
                    public port_id: string;

                    /** PacketState channel_id. */
                    public channel_id: string;

                    /** PacketState sequence. */
                    public sequence: Long;

                    /** PacketState data. */
                    public data: Uint8Array;

                    /**
                     * Encodes the specified PacketState message. Does not implicitly {@link ibc.core.channel.v1.PacketState.verify|verify} messages.
                     * @param message PacketState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IPacketState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified PacketState message, length delimited. Does not implicitly {@link ibc.core.channel.v1.PacketState.verify|verify} messages.
                     * @param message PacketState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IPacketState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a PacketState message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns PacketState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.PacketState;

                    /**
                     * Decodes a PacketState message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns PacketState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.PacketState;

                    /**
                     * Verifies a PacketState message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a PacketState message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns PacketState
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.PacketState;

                    /**
                     * Creates a plain object from a PacketState message. Also converts values to other types if specified.
                     * @param message PacketState
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.PacketState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this PacketState to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a PacketId. */
                interface IPacketId {

                    /** PacketId port_id */
                    port_id?: (string|null);

                    /** PacketId channel_id */
                    channel_id?: (string|null);

                    /** PacketId sequence */
                    sequence?: (Long|null);
                }

                /** Represents a PacketId. */
                class PacketId implements IPacketId {

                    /**
                     * Constructs a new PacketId.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IPacketId);

                    /** PacketId port_id. */
                    public port_id: string;

                    /** PacketId channel_id. */
                    public channel_id: string;

                    /** PacketId sequence. */
                    public sequence: Long;

                    /**
                     * Encodes the specified PacketId message. Does not implicitly {@link ibc.core.channel.v1.PacketId.verify|verify} messages.
                     * @param message PacketId message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IPacketId, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified PacketId message, length delimited. Does not implicitly {@link ibc.core.channel.v1.PacketId.verify|verify} messages.
                     * @param message PacketId message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IPacketId, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a PacketId message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns PacketId
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.PacketId;

                    /**
                     * Decodes a PacketId message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns PacketId
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.PacketId;

                    /**
                     * Verifies a PacketId message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a PacketId message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns PacketId
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.PacketId;

                    /**
                     * Creates a plain object from a PacketId message. Also converts values to other types if specified.
                     * @param message PacketId
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.PacketId, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this PacketId to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of an Acknowledgement. */
                interface IAcknowledgement {

                    /** Acknowledgement result */
                    result?: (Uint8Array|null);

                    /** Acknowledgement error */
                    error?: (string|null);
                }

                /** Represents an Acknowledgement. */
                class Acknowledgement implements IAcknowledgement {

                    /**
                     * Constructs a new Acknowledgement.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IAcknowledgement);

                    /** Acknowledgement result. */
                    public result?: (Uint8Array|null);

                    /** Acknowledgement error. */
                    public error?: (string|null);

                    /** Acknowledgement response. */
                    public response?: ("result"|"error");

                    /**
                     * Encodes the specified Acknowledgement message. Does not implicitly {@link ibc.core.channel.v1.Acknowledgement.verify|verify} messages.
                     * @param message Acknowledgement message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IAcknowledgement, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Acknowledgement message, length delimited. Does not implicitly {@link ibc.core.channel.v1.Acknowledgement.verify|verify} messages.
                     * @param message Acknowledgement message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IAcknowledgement, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes an Acknowledgement message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Acknowledgement
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.Acknowledgement;

                    /**
                     * Decodes an Acknowledgement message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Acknowledgement
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.Acknowledgement;

                    /**
                     * Verifies an Acknowledgement message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates an Acknowledgement message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Acknowledgement
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.Acknowledgement;

                    /**
                     * Creates a plain object from an Acknowledgement message. Also converts values to other types if specified.
                     * @param message Acknowledgement
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.Acknowledgement, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Acknowledgement to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Represents a Msg */
                class Msg extends $protobuf.rpc.Service {

                    /**
                     * Constructs a new Msg service.
                     * @param rpcImpl RPC implementation
                     * @param [requestDelimited=false] Whether requests are length-delimited
                     * @param [responseDelimited=false] Whether responses are length-delimited
                     */
                    constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                    /**
                     * Calls ChannelOpenInit.
                     * @param request MsgChannelOpenInit message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgChannelOpenInitResponse
                     */
                    public channelOpenInit(request: ibc.core.channel.v1.IMsgChannelOpenInit, callback: ibc.core.channel.v1.Msg.ChannelOpenInitCallback): void;

                    /**
                     * Calls ChannelOpenInit.
                     * @param request MsgChannelOpenInit message or plain object
                     * @returns Promise
                     */
                    public channelOpenInit(request: ibc.core.channel.v1.IMsgChannelOpenInit): Promise<ibc.core.channel.v1.MsgChannelOpenInitResponse>;

                    /**
                     * Calls ChannelOpenTry.
                     * @param request MsgChannelOpenTry message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgChannelOpenTryResponse
                     */
                    public channelOpenTry(request: ibc.core.channel.v1.IMsgChannelOpenTry, callback: ibc.core.channel.v1.Msg.ChannelOpenTryCallback): void;

                    /**
                     * Calls ChannelOpenTry.
                     * @param request MsgChannelOpenTry message or plain object
                     * @returns Promise
                     */
                    public channelOpenTry(request: ibc.core.channel.v1.IMsgChannelOpenTry): Promise<ibc.core.channel.v1.MsgChannelOpenTryResponse>;

                    /**
                     * Calls ChannelOpenAck.
                     * @param request MsgChannelOpenAck message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgChannelOpenAckResponse
                     */
                    public channelOpenAck(request: ibc.core.channel.v1.IMsgChannelOpenAck, callback: ibc.core.channel.v1.Msg.ChannelOpenAckCallback): void;

                    /**
                     * Calls ChannelOpenAck.
                     * @param request MsgChannelOpenAck message or plain object
                     * @returns Promise
                     */
                    public channelOpenAck(request: ibc.core.channel.v1.IMsgChannelOpenAck): Promise<ibc.core.channel.v1.MsgChannelOpenAckResponse>;

                    /**
                     * Calls ChannelOpenConfirm.
                     * @param request MsgChannelOpenConfirm message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgChannelOpenConfirmResponse
                     */
                    public channelOpenConfirm(request: ibc.core.channel.v1.IMsgChannelOpenConfirm, callback: ibc.core.channel.v1.Msg.ChannelOpenConfirmCallback): void;

                    /**
                     * Calls ChannelOpenConfirm.
                     * @param request MsgChannelOpenConfirm message or plain object
                     * @returns Promise
                     */
                    public channelOpenConfirm(request: ibc.core.channel.v1.IMsgChannelOpenConfirm): Promise<ibc.core.channel.v1.MsgChannelOpenConfirmResponse>;

                    /**
                     * Calls ChannelCloseInit.
                     * @param request MsgChannelCloseInit message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgChannelCloseInitResponse
                     */
                    public channelCloseInit(request: ibc.core.channel.v1.IMsgChannelCloseInit, callback: ibc.core.channel.v1.Msg.ChannelCloseInitCallback): void;

                    /**
                     * Calls ChannelCloseInit.
                     * @param request MsgChannelCloseInit message or plain object
                     * @returns Promise
                     */
                    public channelCloseInit(request: ibc.core.channel.v1.IMsgChannelCloseInit): Promise<ibc.core.channel.v1.MsgChannelCloseInitResponse>;

                    /**
                     * Calls ChannelCloseConfirm.
                     * @param request MsgChannelCloseConfirm message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgChannelCloseConfirmResponse
                     */
                    public channelCloseConfirm(request: ibc.core.channel.v1.IMsgChannelCloseConfirm, callback: ibc.core.channel.v1.Msg.ChannelCloseConfirmCallback): void;

                    /**
                     * Calls ChannelCloseConfirm.
                     * @param request MsgChannelCloseConfirm message or plain object
                     * @returns Promise
                     */
                    public channelCloseConfirm(request: ibc.core.channel.v1.IMsgChannelCloseConfirm): Promise<ibc.core.channel.v1.MsgChannelCloseConfirmResponse>;

                    /**
                     * Calls RecvPacket.
                     * @param request MsgRecvPacket message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgRecvPacketResponse
                     */
                    public recvPacket(request: ibc.core.channel.v1.IMsgRecvPacket, callback: ibc.core.channel.v1.Msg.RecvPacketCallback): void;

                    /**
                     * Calls RecvPacket.
                     * @param request MsgRecvPacket message or plain object
                     * @returns Promise
                     */
                    public recvPacket(request: ibc.core.channel.v1.IMsgRecvPacket): Promise<ibc.core.channel.v1.MsgRecvPacketResponse>;

                    /**
                     * Calls Timeout.
                     * @param request MsgTimeout message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgTimeoutResponse
                     */
                    public timeout(request: ibc.core.channel.v1.IMsgTimeout, callback: ibc.core.channel.v1.Msg.TimeoutCallback): void;

                    /**
                     * Calls Timeout.
                     * @param request MsgTimeout message or plain object
                     * @returns Promise
                     */
                    public timeout(request: ibc.core.channel.v1.IMsgTimeout): Promise<ibc.core.channel.v1.MsgTimeoutResponse>;

                    /**
                     * Calls TimeoutOnClose.
                     * @param request MsgTimeoutOnClose message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgTimeoutOnCloseResponse
                     */
                    public timeoutOnClose(request: ibc.core.channel.v1.IMsgTimeoutOnClose, callback: ibc.core.channel.v1.Msg.TimeoutOnCloseCallback): void;

                    /**
                     * Calls TimeoutOnClose.
                     * @param request MsgTimeoutOnClose message or plain object
                     * @returns Promise
                     */
                    public timeoutOnClose(request: ibc.core.channel.v1.IMsgTimeoutOnClose): Promise<ibc.core.channel.v1.MsgTimeoutOnCloseResponse>;

                    /**
                     * Calls Acknowledgement.
                     * @param request MsgAcknowledgement message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgAcknowledgementResponse
                     */
                    public acknowledgement(request: ibc.core.channel.v1.IMsgAcknowledgement, callback: ibc.core.channel.v1.Msg.AcknowledgementCallback): void;

                    /**
                     * Calls Acknowledgement.
                     * @param request MsgAcknowledgement message or plain object
                     * @returns Promise
                     */
                    public acknowledgement(request: ibc.core.channel.v1.IMsgAcknowledgement): Promise<ibc.core.channel.v1.MsgAcknowledgementResponse>;
                }

                namespace Msg {

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Msg#channelOpenInit}.
                     * @param error Error, if any
                     * @param [response] MsgChannelOpenInitResponse
                     */
                    type ChannelOpenInitCallback = (error: (Error|null), response?: ibc.core.channel.v1.MsgChannelOpenInitResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Msg#channelOpenTry}.
                     * @param error Error, if any
                     * @param [response] MsgChannelOpenTryResponse
                     */
                    type ChannelOpenTryCallback = (error: (Error|null), response?: ibc.core.channel.v1.MsgChannelOpenTryResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Msg#channelOpenAck}.
                     * @param error Error, if any
                     * @param [response] MsgChannelOpenAckResponse
                     */
                    type ChannelOpenAckCallback = (error: (Error|null), response?: ibc.core.channel.v1.MsgChannelOpenAckResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Msg#channelOpenConfirm}.
                     * @param error Error, if any
                     * @param [response] MsgChannelOpenConfirmResponse
                     */
                    type ChannelOpenConfirmCallback = (error: (Error|null), response?: ibc.core.channel.v1.MsgChannelOpenConfirmResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Msg#channelCloseInit}.
                     * @param error Error, if any
                     * @param [response] MsgChannelCloseInitResponse
                     */
                    type ChannelCloseInitCallback = (error: (Error|null), response?: ibc.core.channel.v1.MsgChannelCloseInitResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Msg#channelCloseConfirm}.
                     * @param error Error, if any
                     * @param [response] MsgChannelCloseConfirmResponse
                     */
                    type ChannelCloseConfirmCallback = (error: (Error|null), response?: ibc.core.channel.v1.MsgChannelCloseConfirmResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Msg#recvPacket}.
                     * @param error Error, if any
                     * @param [response] MsgRecvPacketResponse
                     */
                    type RecvPacketCallback = (error: (Error|null), response?: ibc.core.channel.v1.MsgRecvPacketResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Msg#timeout}.
                     * @param error Error, if any
                     * @param [response] MsgTimeoutResponse
                     */
                    type TimeoutCallback = (error: (Error|null), response?: ibc.core.channel.v1.MsgTimeoutResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Msg#timeoutOnClose}.
                     * @param error Error, if any
                     * @param [response] MsgTimeoutOnCloseResponse
                     */
                    type TimeoutOnCloseCallback = (error: (Error|null), response?: ibc.core.channel.v1.MsgTimeoutOnCloseResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Msg#acknowledgement}.
                     * @param error Error, if any
                     * @param [response] MsgAcknowledgementResponse
                     */
                    type AcknowledgementCallback = (error: (Error|null), response?: ibc.core.channel.v1.MsgAcknowledgementResponse) => void;
                }

                /** ResponseResultType enum. */
                enum ResponseResultType {
                    RESPONSE_RESULT_TYPE_UNSPECIFIED = 0,
                    RESPONSE_RESULT_TYPE_NOOP = 1,
                    RESPONSE_RESULT_TYPE_SUCCESS = 2
                }

                /** Properties of a MsgChannelOpenInit. */
                interface IMsgChannelOpenInit {

                    /** MsgChannelOpenInit port_id */
                    port_id?: (string|null);

                    /** MsgChannelOpenInit channel */
                    channel?: (ibc.core.channel.v1.IChannel|null);

                    /** MsgChannelOpenInit signer */
                    signer?: (string|null);
                }

                /** Represents a MsgChannelOpenInit. */
                class MsgChannelOpenInit implements IMsgChannelOpenInit {

                    /**
                     * Constructs a new MsgChannelOpenInit.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgChannelOpenInit);

                    /** MsgChannelOpenInit port_id. */
                    public port_id: string;

                    /** MsgChannelOpenInit channel. */
                    public channel?: (ibc.core.channel.v1.IChannel|null);

                    /** MsgChannelOpenInit signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgChannelOpenInit message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenInit.verify|verify} messages.
                     * @param message MsgChannelOpenInit message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgChannelOpenInit, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgChannelOpenInit message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenInit.verify|verify} messages.
                     * @param message MsgChannelOpenInit message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgChannelOpenInit, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelOpenInit message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgChannelOpenInit
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgChannelOpenInit;

                    /**
                     * Decodes a MsgChannelOpenInit message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgChannelOpenInit
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgChannelOpenInit;

                    /**
                     * Verifies a MsgChannelOpenInit message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgChannelOpenInit message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgChannelOpenInit
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgChannelOpenInit;

                    /**
                     * Creates a plain object from a MsgChannelOpenInit message. Also converts values to other types if specified.
                     * @param message MsgChannelOpenInit
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgChannelOpenInit, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgChannelOpenInit to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgChannelOpenInitResponse. */
                interface IMsgChannelOpenInitResponse {

                    /** MsgChannelOpenInitResponse channel_id */
                    channel_id?: (string|null);

                    /** MsgChannelOpenInitResponse version */
                    version?: (string|null);
                }

                /** Represents a MsgChannelOpenInitResponse. */
                class MsgChannelOpenInitResponse implements IMsgChannelOpenInitResponse {

                    /**
                     * Constructs a new MsgChannelOpenInitResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgChannelOpenInitResponse);

                    /** MsgChannelOpenInitResponse channel_id. */
                    public channel_id: string;

                    /** MsgChannelOpenInitResponse version. */
                    public version: string;

                    /**
                     * Encodes the specified MsgChannelOpenInitResponse message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenInitResponse.verify|verify} messages.
                     * @param message MsgChannelOpenInitResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgChannelOpenInitResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgChannelOpenInitResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenInitResponse.verify|verify} messages.
                     * @param message MsgChannelOpenInitResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgChannelOpenInitResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelOpenInitResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgChannelOpenInitResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgChannelOpenInitResponse;

                    /**
                     * Decodes a MsgChannelOpenInitResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgChannelOpenInitResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgChannelOpenInitResponse;

                    /**
                     * Verifies a MsgChannelOpenInitResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgChannelOpenInitResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgChannelOpenInitResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgChannelOpenInitResponse;

                    /**
                     * Creates a plain object from a MsgChannelOpenInitResponse message. Also converts values to other types if specified.
                     * @param message MsgChannelOpenInitResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgChannelOpenInitResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgChannelOpenInitResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgChannelOpenTry. */
                interface IMsgChannelOpenTry {

                    /** MsgChannelOpenTry port_id */
                    port_id?: (string|null);

                    /** MsgChannelOpenTry previous_channel_id */
                    previous_channel_id?: (string|null);

                    /** MsgChannelOpenTry channel */
                    channel?: (ibc.core.channel.v1.IChannel|null);

                    /** MsgChannelOpenTry counterparty_version */
                    counterparty_version?: (string|null);

                    /** MsgChannelOpenTry proof_init */
                    proof_init?: (Uint8Array|null);

                    /** MsgChannelOpenTry proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgChannelOpenTry signer */
                    signer?: (string|null);
                }

                /** Represents a MsgChannelOpenTry. */
                class MsgChannelOpenTry implements IMsgChannelOpenTry {

                    /**
                     * Constructs a new MsgChannelOpenTry.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgChannelOpenTry);

                    /** MsgChannelOpenTry port_id. */
                    public port_id: string;

                    /** MsgChannelOpenTry previous_channel_id. */
                    public previous_channel_id: string;

                    /** MsgChannelOpenTry channel. */
                    public channel?: (ibc.core.channel.v1.IChannel|null);

                    /** MsgChannelOpenTry counterparty_version. */
                    public counterparty_version: string;

                    /** MsgChannelOpenTry proof_init. */
                    public proof_init: Uint8Array;

                    /** MsgChannelOpenTry proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgChannelOpenTry signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgChannelOpenTry message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenTry.verify|verify} messages.
                     * @param message MsgChannelOpenTry message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgChannelOpenTry, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgChannelOpenTry message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenTry.verify|verify} messages.
                     * @param message MsgChannelOpenTry message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgChannelOpenTry, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelOpenTry message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgChannelOpenTry
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgChannelOpenTry;

                    /**
                     * Decodes a MsgChannelOpenTry message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgChannelOpenTry
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgChannelOpenTry;

                    /**
                     * Verifies a MsgChannelOpenTry message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgChannelOpenTry message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgChannelOpenTry
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgChannelOpenTry;

                    /**
                     * Creates a plain object from a MsgChannelOpenTry message. Also converts values to other types if specified.
                     * @param message MsgChannelOpenTry
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgChannelOpenTry, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgChannelOpenTry to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgChannelOpenTryResponse. */
                interface IMsgChannelOpenTryResponse {

                    /** MsgChannelOpenTryResponse version */
                    version?: (string|null);

                    /** MsgChannelOpenTryResponse channel_id */
                    channel_id?: (string|null);
                }

                /** Represents a MsgChannelOpenTryResponse. */
                class MsgChannelOpenTryResponse implements IMsgChannelOpenTryResponse {

                    /**
                     * Constructs a new MsgChannelOpenTryResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgChannelOpenTryResponse);

                    /** MsgChannelOpenTryResponse version. */
                    public version: string;

                    /** MsgChannelOpenTryResponse channel_id. */
                    public channel_id: string;

                    /**
                     * Encodes the specified MsgChannelOpenTryResponse message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenTryResponse.verify|verify} messages.
                     * @param message MsgChannelOpenTryResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgChannelOpenTryResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgChannelOpenTryResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenTryResponse.verify|verify} messages.
                     * @param message MsgChannelOpenTryResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgChannelOpenTryResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelOpenTryResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgChannelOpenTryResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgChannelOpenTryResponse;

                    /**
                     * Decodes a MsgChannelOpenTryResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgChannelOpenTryResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgChannelOpenTryResponse;

                    /**
                     * Verifies a MsgChannelOpenTryResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgChannelOpenTryResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgChannelOpenTryResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgChannelOpenTryResponse;

                    /**
                     * Creates a plain object from a MsgChannelOpenTryResponse message. Also converts values to other types if specified.
                     * @param message MsgChannelOpenTryResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgChannelOpenTryResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgChannelOpenTryResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgChannelOpenAck. */
                interface IMsgChannelOpenAck {

                    /** MsgChannelOpenAck port_id */
                    port_id?: (string|null);

                    /** MsgChannelOpenAck channel_id */
                    channel_id?: (string|null);

                    /** MsgChannelOpenAck counterparty_channel_id */
                    counterparty_channel_id?: (string|null);

                    /** MsgChannelOpenAck counterparty_version */
                    counterparty_version?: (string|null);

                    /** MsgChannelOpenAck proof_try */
                    proof_try?: (Uint8Array|null);

                    /** MsgChannelOpenAck proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgChannelOpenAck signer */
                    signer?: (string|null);
                }

                /** Represents a MsgChannelOpenAck. */
                class MsgChannelOpenAck implements IMsgChannelOpenAck {

                    /**
                     * Constructs a new MsgChannelOpenAck.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgChannelOpenAck);

                    /** MsgChannelOpenAck port_id. */
                    public port_id: string;

                    /** MsgChannelOpenAck channel_id. */
                    public channel_id: string;

                    /** MsgChannelOpenAck counterparty_channel_id. */
                    public counterparty_channel_id: string;

                    /** MsgChannelOpenAck counterparty_version. */
                    public counterparty_version: string;

                    /** MsgChannelOpenAck proof_try. */
                    public proof_try: Uint8Array;

                    /** MsgChannelOpenAck proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgChannelOpenAck signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgChannelOpenAck message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenAck.verify|verify} messages.
                     * @param message MsgChannelOpenAck message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgChannelOpenAck, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgChannelOpenAck message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenAck.verify|verify} messages.
                     * @param message MsgChannelOpenAck message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgChannelOpenAck, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelOpenAck message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgChannelOpenAck
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgChannelOpenAck;

                    /**
                     * Decodes a MsgChannelOpenAck message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgChannelOpenAck
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgChannelOpenAck;

                    /**
                     * Verifies a MsgChannelOpenAck message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgChannelOpenAck message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgChannelOpenAck
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgChannelOpenAck;

                    /**
                     * Creates a plain object from a MsgChannelOpenAck message. Also converts values to other types if specified.
                     * @param message MsgChannelOpenAck
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgChannelOpenAck, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgChannelOpenAck to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgChannelOpenAckResponse. */
                interface IMsgChannelOpenAckResponse {
                }

                /** Represents a MsgChannelOpenAckResponse. */
                class MsgChannelOpenAckResponse implements IMsgChannelOpenAckResponse {

                    /**
                     * Constructs a new MsgChannelOpenAckResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgChannelOpenAckResponse);

                    /**
                     * Encodes the specified MsgChannelOpenAckResponse message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenAckResponse.verify|verify} messages.
                     * @param message MsgChannelOpenAckResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgChannelOpenAckResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgChannelOpenAckResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenAckResponse.verify|verify} messages.
                     * @param message MsgChannelOpenAckResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgChannelOpenAckResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelOpenAckResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgChannelOpenAckResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgChannelOpenAckResponse;

                    /**
                     * Decodes a MsgChannelOpenAckResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgChannelOpenAckResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgChannelOpenAckResponse;

                    /**
                     * Verifies a MsgChannelOpenAckResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgChannelOpenAckResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgChannelOpenAckResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgChannelOpenAckResponse;

                    /**
                     * Creates a plain object from a MsgChannelOpenAckResponse message. Also converts values to other types if specified.
                     * @param message MsgChannelOpenAckResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgChannelOpenAckResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgChannelOpenAckResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgChannelOpenConfirm. */
                interface IMsgChannelOpenConfirm {

                    /** MsgChannelOpenConfirm port_id */
                    port_id?: (string|null);

                    /** MsgChannelOpenConfirm channel_id */
                    channel_id?: (string|null);

                    /** MsgChannelOpenConfirm proof_ack */
                    proof_ack?: (Uint8Array|null);

                    /** MsgChannelOpenConfirm proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgChannelOpenConfirm signer */
                    signer?: (string|null);
                }

                /** Represents a MsgChannelOpenConfirm. */
                class MsgChannelOpenConfirm implements IMsgChannelOpenConfirm {

                    /**
                     * Constructs a new MsgChannelOpenConfirm.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgChannelOpenConfirm);

                    /** MsgChannelOpenConfirm port_id. */
                    public port_id: string;

                    /** MsgChannelOpenConfirm channel_id. */
                    public channel_id: string;

                    /** MsgChannelOpenConfirm proof_ack. */
                    public proof_ack: Uint8Array;

                    /** MsgChannelOpenConfirm proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgChannelOpenConfirm signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgChannelOpenConfirm message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenConfirm.verify|verify} messages.
                     * @param message MsgChannelOpenConfirm message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgChannelOpenConfirm, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgChannelOpenConfirm message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenConfirm.verify|verify} messages.
                     * @param message MsgChannelOpenConfirm message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgChannelOpenConfirm, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelOpenConfirm message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgChannelOpenConfirm
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgChannelOpenConfirm;

                    /**
                     * Decodes a MsgChannelOpenConfirm message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgChannelOpenConfirm
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgChannelOpenConfirm;

                    /**
                     * Verifies a MsgChannelOpenConfirm message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgChannelOpenConfirm message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgChannelOpenConfirm
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgChannelOpenConfirm;

                    /**
                     * Creates a plain object from a MsgChannelOpenConfirm message. Also converts values to other types if specified.
                     * @param message MsgChannelOpenConfirm
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgChannelOpenConfirm, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgChannelOpenConfirm to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgChannelOpenConfirmResponse. */
                interface IMsgChannelOpenConfirmResponse {
                }

                /** Represents a MsgChannelOpenConfirmResponse. */
                class MsgChannelOpenConfirmResponse implements IMsgChannelOpenConfirmResponse {

                    /**
                     * Constructs a new MsgChannelOpenConfirmResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgChannelOpenConfirmResponse);

                    /**
                     * Encodes the specified MsgChannelOpenConfirmResponse message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenConfirmResponse.verify|verify} messages.
                     * @param message MsgChannelOpenConfirmResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgChannelOpenConfirmResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgChannelOpenConfirmResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgChannelOpenConfirmResponse.verify|verify} messages.
                     * @param message MsgChannelOpenConfirmResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgChannelOpenConfirmResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelOpenConfirmResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgChannelOpenConfirmResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgChannelOpenConfirmResponse;

                    /**
                     * Decodes a MsgChannelOpenConfirmResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgChannelOpenConfirmResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgChannelOpenConfirmResponse;

                    /**
                     * Verifies a MsgChannelOpenConfirmResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgChannelOpenConfirmResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgChannelOpenConfirmResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgChannelOpenConfirmResponse;

                    /**
                     * Creates a plain object from a MsgChannelOpenConfirmResponse message. Also converts values to other types if specified.
                     * @param message MsgChannelOpenConfirmResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgChannelOpenConfirmResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgChannelOpenConfirmResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgChannelCloseInit. */
                interface IMsgChannelCloseInit {

                    /** MsgChannelCloseInit port_id */
                    port_id?: (string|null);

                    /** MsgChannelCloseInit channel_id */
                    channel_id?: (string|null);

                    /** MsgChannelCloseInit signer */
                    signer?: (string|null);
                }

                /** Represents a MsgChannelCloseInit. */
                class MsgChannelCloseInit implements IMsgChannelCloseInit {

                    /**
                     * Constructs a new MsgChannelCloseInit.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgChannelCloseInit);

                    /** MsgChannelCloseInit port_id. */
                    public port_id: string;

                    /** MsgChannelCloseInit channel_id. */
                    public channel_id: string;

                    /** MsgChannelCloseInit signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgChannelCloseInit message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelCloseInit.verify|verify} messages.
                     * @param message MsgChannelCloseInit message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgChannelCloseInit, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgChannelCloseInit message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgChannelCloseInit.verify|verify} messages.
                     * @param message MsgChannelCloseInit message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgChannelCloseInit, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelCloseInit message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgChannelCloseInit
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgChannelCloseInit;

                    /**
                     * Decodes a MsgChannelCloseInit message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgChannelCloseInit
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgChannelCloseInit;

                    /**
                     * Verifies a MsgChannelCloseInit message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgChannelCloseInit message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgChannelCloseInit
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgChannelCloseInit;

                    /**
                     * Creates a plain object from a MsgChannelCloseInit message. Also converts values to other types if specified.
                     * @param message MsgChannelCloseInit
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgChannelCloseInit, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgChannelCloseInit to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgChannelCloseInitResponse. */
                interface IMsgChannelCloseInitResponse {
                }

                /** Represents a MsgChannelCloseInitResponse. */
                class MsgChannelCloseInitResponse implements IMsgChannelCloseInitResponse {

                    /**
                     * Constructs a new MsgChannelCloseInitResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgChannelCloseInitResponse);

                    /**
                     * Encodes the specified MsgChannelCloseInitResponse message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelCloseInitResponse.verify|verify} messages.
                     * @param message MsgChannelCloseInitResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgChannelCloseInitResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgChannelCloseInitResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgChannelCloseInitResponse.verify|verify} messages.
                     * @param message MsgChannelCloseInitResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgChannelCloseInitResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelCloseInitResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgChannelCloseInitResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgChannelCloseInitResponse;

                    /**
                     * Decodes a MsgChannelCloseInitResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgChannelCloseInitResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgChannelCloseInitResponse;

                    /**
                     * Verifies a MsgChannelCloseInitResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgChannelCloseInitResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgChannelCloseInitResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgChannelCloseInitResponse;

                    /**
                     * Creates a plain object from a MsgChannelCloseInitResponse message. Also converts values to other types if specified.
                     * @param message MsgChannelCloseInitResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgChannelCloseInitResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgChannelCloseInitResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgChannelCloseConfirm. */
                interface IMsgChannelCloseConfirm {

                    /** MsgChannelCloseConfirm port_id */
                    port_id?: (string|null);

                    /** MsgChannelCloseConfirm channel_id */
                    channel_id?: (string|null);

                    /** MsgChannelCloseConfirm proof_init */
                    proof_init?: (Uint8Array|null);

                    /** MsgChannelCloseConfirm proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgChannelCloseConfirm signer */
                    signer?: (string|null);
                }

                /** Represents a MsgChannelCloseConfirm. */
                class MsgChannelCloseConfirm implements IMsgChannelCloseConfirm {

                    /**
                     * Constructs a new MsgChannelCloseConfirm.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgChannelCloseConfirm);

                    /** MsgChannelCloseConfirm port_id. */
                    public port_id: string;

                    /** MsgChannelCloseConfirm channel_id. */
                    public channel_id: string;

                    /** MsgChannelCloseConfirm proof_init. */
                    public proof_init: Uint8Array;

                    /** MsgChannelCloseConfirm proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgChannelCloseConfirm signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgChannelCloseConfirm message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelCloseConfirm.verify|verify} messages.
                     * @param message MsgChannelCloseConfirm message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgChannelCloseConfirm, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgChannelCloseConfirm message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgChannelCloseConfirm.verify|verify} messages.
                     * @param message MsgChannelCloseConfirm message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgChannelCloseConfirm, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelCloseConfirm message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgChannelCloseConfirm
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgChannelCloseConfirm;

                    /**
                     * Decodes a MsgChannelCloseConfirm message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgChannelCloseConfirm
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgChannelCloseConfirm;

                    /**
                     * Verifies a MsgChannelCloseConfirm message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgChannelCloseConfirm message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgChannelCloseConfirm
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgChannelCloseConfirm;

                    /**
                     * Creates a plain object from a MsgChannelCloseConfirm message. Also converts values to other types if specified.
                     * @param message MsgChannelCloseConfirm
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgChannelCloseConfirm, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgChannelCloseConfirm to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgChannelCloseConfirmResponse. */
                interface IMsgChannelCloseConfirmResponse {
                }

                /** Represents a MsgChannelCloseConfirmResponse. */
                class MsgChannelCloseConfirmResponse implements IMsgChannelCloseConfirmResponse {

                    /**
                     * Constructs a new MsgChannelCloseConfirmResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgChannelCloseConfirmResponse);

                    /**
                     * Encodes the specified MsgChannelCloseConfirmResponse message. Does not implicitly {@link ibc.core.channel.v1.MsgChannelCloseConfirmResponse.verify|verify} messages.
                     * @param message MsgChannelCloseConfirmResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgChannelCloseConfirmResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgChannelCloseConfirmResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgChannelCloseConfirmResponse.verify|verify} messages.
                     * @param message MsgChannelCloseConfirmResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgChannelCloseConfirmResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgChannelCloseConfirmResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgChannelCloseConfirmResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgChannelCloseConfirmResponse;

                    /**
                     * Decodes a MsgChannelCloseConfirmResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgChannelCloseConfirmResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgChannelCloseConfirmResponse;

                    /**
                     * Verifies a MsgChannelCloseConfirmResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgChannelCloseConfirmResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgChannelCloseConfirmResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgChannelCloseConfirmResponse;

                    /**
                     * Creates a plain object from a MsgChannelCloseConfirmResponse message. Also converts values to other types if specified.
                     * @param message MsgChannelCloseConfirmResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgChannelCloseConfirmResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgChannelCloseConfirmResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgRecvPacket. */
                interface IMsgRecvPacket {

                    /** MsgRecvPacket packet */
                    packet?: (ibc.core.channel.v1.IPacket|null);

                    /** MsgRecvPacket proof_commitment */
                    proof_commitment?: (Uint8Array|null);

                    /** MsgRecvPacket proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgRecvPacket signer */
                    signer?: (string|null);
                }

                /** Represents a MsgRecvPacket. */
                class MsgRecvPacket implements IMsgRecvPacket {

                    /**
                     * Constructs a new MsgRecvPacket.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgRecvPacket);

                    /** MsgRecvPacket packet. */
                    public packet?: (ibc.core.channel.v1.IPacket|null);

                    /** MsgRecvPacket proof_commitment. */
                    public proof_commitment: Uint8Array;

                    /** MsgRecvPacket proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgRecvPacket signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgRecvPacket message. Does not implicitly {@link ibc.core.channel.v1.MsgRecvPacket.verify|verify} messages.
                     * @param message MsgRecvPacket message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgRecvPacket, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgRecvPacket message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgRecvPacket.verify|verify} messages.
                     * @param message MsgRecvPacket message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgRecvPacket, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgRecvPacket message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgRecvPacket
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgRecvPacket;

                    /**
                     * Decodes a MsgRecvPacket message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgRecvPacket
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgRecvPacket;

                    /**
                     * Verifies a MsgRecvPacket message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgRecvPacket message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgRecvPacket
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgRecvPacket;

                    /**
                     * Creates a plain object from a MsgRecvPacket message. Also converts values to other types if specified.
                     * @param message MsgRecvPacket
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgRecvPacket, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgRecvPacket to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgRecvPacketResponse. */
                interface IMsgRecvPacketResponse {

                    /** MsgRecvPacketResponse result */
                    result?: (ibc.core.channel.v1.ResponseResultType|null);
                }

                /** Represents a MsgRecvPacketResponse. */
                class MsgRecvPacketResponse implements IMsgRecvPacketResponse {

                    /**
                     * Constructs a new MsgRecvPacketResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgRecvPacketResponse);

                    /** MsgRecvPacketResponse result. */
                    public result: ibc.core.channel.v1.ResponseResultType;

                    /**
                     * Encodes the specified MsgRecvPacketResponse message. Does not implicitly {@link ibc.core.channel.v1.MsgRecvPacketResponse.verify|verify} messages.
                     * @param message MsgRecvPacketResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgRecvPacketResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgRecvPacketResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgRecvPacketResponse.verify|verify} messages.
                     * @param message MsgRecvPacketResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgRecvPacketResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgRecvPacketResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgRecvPacketResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgRecvPacketResponse;

                    /**
                     * Decodes a MsgRecvPacketResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgRecvPacketResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgRecvPacketResponse;

                    /**
                     * Verifies a MsgRecvPacketResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgRecvPacketResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgRecvPacketResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgRecvPacketResponse;

                    /**
                     * Creates a plain object from a MsgRecvPacketResponse message. Also converts values to other types if specified.
                     * @param message MsgRecvPacketResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgRecvPacketResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgRecvPacketResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgTimeout. */
                interface IMsgTimeout {

                    /** MsgTimeout packet */
                    packet?: (ibc.core.channel.v1.IPacket|null);

                    /** MsgTimeout proof_unreceived */
                    proof_unreceived?: (Uint8Array|null);

                    /** MsgTimeout proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgTimeout next_sequence_recv */
                    next_sequence_recv?: (Long|null);

                    /** MsgTimeout signer */
                    signer?: (string|null);
                }

                /** Represents a MsgTimeout. */
                class MsgTimeout implements IMsgTimeout {

                    /**
                     * Constructs a new MsgTimeout.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgTimeout);

                    /** MsgTimeout packet. */
                    public packet?: (ibc.core.channel.v1.IPacket|null);

                    /** MsgTimeout proof_unreceived. */
                    public proof_unreceived: Uint8Array;

                    /** MsgTimeout proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgTimeout next_sequence_recv. */
                    public next_sequence_recv: Long;

                    /** MsgTimeout signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgTimeout message. Does not implicitly {@link ibc.core.channel.v1.MsgTimeout.verify|verify} messages.
                     * @param message MsgTimeout message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgTimeout, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgTimeout message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgTimeout.verify|verify} messages.
                     * @param message MsgTimeout message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgTimeout, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgTimeout message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgTimeout
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgTimeout;

                    /**
                     * Decodes a MsgTimeout message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgTimeout
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgTimeout;

                    /**
                     * Verifies a MsgTimeout message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgTimeout message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgTimeout
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgTimeout;

                    /**
                     * Creates a plain object from a MsgTimeout message. Also converts values to other types if specified.
                     * @param message MsgTimeout
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgTimeout, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgTimeout to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgTimeoutResponse. */
                interface IMsgTimeoutResponse {

                    /** MsgTimeoutResponse result */
                    result?: (ibc.core.channel.v1.ResponseResultType|null);
                }

                /** Represents a MsgTimeoutResponse. */
                class MsgTimeoutResponse implements IMsgTimeoutResponse {

                    /**
                     * Constructs a new MsgTimeoutResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgTimeoutResponse);

                    /** MsgTimeoutResponse result. */
                    public result: ibc.core.channel.v1.ResponseResultType;

                    /**
                     * Encodes the specified MsgTimeoutResponse message. Does not implicitly {@link ibc.core.channel.v1.MsgTimeoutResponse.verify|verify} messages.
                     * @param message MsgTimeoutResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgTimeoutResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgTimeoutResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgTimeoutResponse.verify|verify} messages.
                     * @param message MsgTimeoutResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgTimeoutResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgTimeoutResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgTimeoutResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgTimeoutResponse;

                    /**
                     * Decodes a MsgTimeoutResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgTimeoutResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgTimeoutResponse;

                    /**
                     * Verifies a MsgTimeoutResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgTimeoutResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgTimeoutResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgTimeoutResponse;

                    /**
                     * Creates a plain object from a MsgTimeoutResponse message. Also converts values to other types if specified.
                     * @param message MsgTimeoutResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgTimeoutResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgTimeoutResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgTimeoutOnClose. */
                interface IMsgTimeoutOnClose {

                    /** MsgTimeoutOnClose packet */
                    packet?: (ibc.core.channel.v1.IPacket|null);

                    /** MsgTimeoutOnClose proof_unreceived */
                    proof_unreceived?: (Uint8Array|null);

                    /** MsgTimeoutOnClose proof_close */
                    proof_close?: (Uint8Array|null);

                    /** MsgTimeoutOnClose proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgTimeoutOnClose next_sequence_recv */
                    next_sequence_recv?: (Long|null);

                    /** MsgTimeoutOnClose signer */
                    signer?: (string|null);
                }

                /** Represents a MsgTimeoutOnClose. */
                class MsgTimeoutOnClose implements IMsgTimeoutOnClose {

                    /**
                     * Constructs a new MsgTimeoutOnClose.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgTimeoutOnClose);

                    /** MsgTimeoutOnClose packet. */
                    public packet?: (ibc.core.channel.v1.IPacket|null);

                    /** MsgTimeoutOnClose proof_unreceived. */
                    public proof_unreceived: Uint8Array;

                    /** MsgTimeoutOnClose proof_close. */
                    public proof_close: Uint8Array;

                    /** MsgTimeoutOnClose proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgTimeoutOnClose next_sequence_recv. */
                    public next_sequence_recv: Long;

                    /** MsgTimeoutOnClose signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgTimeoutOnClose message. Does not implicitly {@link ibc.core.channel.v1.MsgTimeoutOnClose.verify|verify} messages.
                     * @param message MsgTimeoutOnClose message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgTimeoutOnClose, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgTimeoutOnClose message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgTimeoutOnClose.verify|verify} messages.
                     * @param message MsgTimeoutOnClose message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgTimeoutOnClose, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgTimeoutOnClose message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgTimeoutOnClose
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgTimeoutOnClose;

                    /**
                     * Decodes a MsgTimeoutOnClose message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgTimeoutOnClose
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgTimeoutOnClose;

                    /**
                     * Verifies a MsgTimeoutOnClose message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgTimeoutOnClose message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgTimeoutOnClose
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgTimeoutOnClose;

                    /**
                     * Creates a plain object from a MsgTimeoutOnClose message. Also converts values to other types if specified.
                     * @param message MsgTimeoutOnClose
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgTimeoutOnClose, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgTimeoutOnClose to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgTimeoutOnCloseResponse. */
                interface IMsgTimeoutOnCloseResponse {

                    /** MsgTimeoutOnCloseResponse result */
                    result?: (ibc.core.channel.v1.ResponseResultType|null);
                }

                /** Represents a MsgTimeoutOnCloseResponse. */
                class MsgTimeoutOnCloseResponse implements IMsgTimeoutOnCloseResponse {

                    /**
                     * Constructs a new MsgTimeoutOnCloseResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgTimeoutOnCloseResponse);

                    /** MsgTimeoutOnCloseResponse result. */
                    public result: ibc.core.channel.v1.ResponseResultType;

                    /**
                     * Encodes the specified MsgTimeoutOnCloseResponse message. Does not implicitly {@link ibc.core.channel.v1.MsgTimeoutOnCloseResponse.verify|verify} messages.
                     * @param message MsgTimeoutOnCloseResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgTimeoutOnCloseResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgTimeoutOnCloseResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgTimeoutOnCloseResponse.verify|verify} messages.
                     * @param message MsgTimeoutOnCloseResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgTimeoutOnCloseResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgTimeoutOnCloseResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgTimeoutOnCloseResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgTimeoutOnCloseResponse;

                    /**
                     * Decodes a MsgTimeoutOnCloseResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgTimeoutOnCloseResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgTimeoutOnCloseResponse;

                    /**
                     * Verifies a MsgTimeoutOnCloseResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgTimeoutOnCloseResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgTimeoutOnCloseResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgTimeoutOnCloseResponse;

                    /**
                     * Creates a plain object from a MsgTimeoutOnCloseResponse message. Also converts values to other types if specified.
                     * @param message MsgTimeoutOnCloseResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgTimeoutOnCloseResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgTimeoutOnCloseResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgAcknowledgement. */
                interface IMsgAcknowledgement {

                    /** MsgAcknowledgement packet */
                    packet?: (ibc.core.channel.v1.IPacket|null);

                    /** MsgAcknowledgement acknowledgement */
                    acknowledgement?: (Uint8Array|null);

                    /** MsgAcknowledgement proof_acked */
                    proof_acked?: (Uint8Array|null);

                    /** MsgAcknowledgement proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgAcknowledgement signer */
                    signer?: (string|null);
                }

                /** Represents a MsgAcknowledgement. */
                class MsgAcknowledgement implements IMsgAcknowledgement {

                    /**
                     * Constructs a new MsgAcknowledgement.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgAcknowledgement);

                    /** MsgAcknowledgement packet. */
                    public packet?: (ibc.core.channel.v1.IPacket|null);

                    /** MsgAcknowledgement acknowledgement. */
                    public acknowledgement: Uint8Array;

                    /** MsgAcknowledgement proof_acked. */
                    public proof_acked: Uint8Array;

                    /** MsgAcknowledgement proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgAcknowledgement signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgAcknowledgement message. Does not implicitly {@link ibc.core.channel.v1.MsgAcknowledgement.verify|verify} messages.
                     * @param message MsgAcknowledgement message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgAcknowledgement, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgAcknowledgement message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgAcknowledgement.verify|verify} messages.
                     * @param message MsgAcknowledgement message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgAcknowledgement, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgAcknowledgement message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgAcknowledgement
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgAcknowledgement;

                    /**
                     * Decodes a MsgAcknowledgement message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgAcknowledgement
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgAcknowledgement;

                    /**
                     * Verifies a MsgAcknowledgement message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgAcknowledgement message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgAcknowledgement
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgAcknowledgement;

                    /**
                     * Creates a plain object from a MsgAcknowledgement message. Also converts values to other types if specified.
                     * @param message MsgAcknowledgement
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgAcknowledgement, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgAcknowledgement to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgAcknowledgementResponse. */
                interface IMsgAcknowledgementResponse {

                    /** MsgAcknowledgementResponse result */
                    result?: (ibc.core.channel.v1.ResponseResultType|null);
                }

                /** Represents a MsgAcknowledgementResponse. */
                class MsgAcknowledgementResponse implements IMsgAcknowledgementResponse {

                    /**
                     * Constructs a new MsgAcknowledgementResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IMsgAcknowledgementResponse);

                    /** MsgAcknowledgementResponse result. */
                    public result: ibc.core.channel.v1.ResponseResultType;

                    /**
                     * Encodes the specified MsgAcknowledgementResponse message. Does not implicitly {@link ibc.core.channel.v1.MsgAcknowledgementResponse.verify|verify} messages.
                     * @param message MsgAcknowledgementResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IMsgAcknowledgementResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgAcknowledgementResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.MsgAcknowledgementResponse.verify|verify} messages.
                     * @param message MsgAcknowledgementResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IMsgAcknowledgementResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgAcknowledgementResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgAcknowledgementResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.MsgAcknowledgementResponse;

                    /**
                     * Decodes a MsgAcknowledgementResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgAcknowledgementResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.MsgAcknowledgementResponse;

                    /**
                     * Verifies a MsgAcknowledgementResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgAcknowledgementResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgAcknowledgementResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.MsgAcknowledgementResponse;

                    /**
                     * Creates a plain object from a MsgAcknowledgementResponse message. Also converts values to other types if specified.
                     * @param message MsgAcknowledgementResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.MsgAcknowledgementResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgAcknowledgementResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Represents a Query */
                class Query extends $protobuf.rpc.Service {

                    /**
                     * Constructs a new Query service.
                     * @param rpcImpl RPC implementation
                     * @param [requestDelimited=false] Whether requests are length-delimited
                     * @param [responseDelimited=false] Whether responses are length-delimited
                     */
                    constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                    /**
                     * Calls Channel.
                     * @param request QueryChannelRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryChannelResponse
                     */
                    public channel(request: ibc.core.channel.v1.IQueryChannelRequest, callback: ibc.core.channel.v1.Query.ChannelCallback): void;

                    /**
                     * Calls Channel.
                     * @param request QueryChannelRequest message or plain object
                     * @returns Promise
                     */
                    public channel(request: ibc.core.channel.v1.IQueryChannelRequest): Promise<ibc.core.channel.v1.QueryChannelResponse>;

                    /**
                     * Calls Channels.
                     * @param request QueryChannelsRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryChannelsResponse
                     */
                    public channels(request: ibc.core.channel.v1.IQueryChannelsRequest, callback: ibc.core.channel.v1.Query.ChannelsCallback): void;

                    /**
                     * Calls Channels.
                     * @param request QueryChannelsRequest message or plain object
                     * @returns Promise
                     */
                    public channels(request: ibc.core.channel.v1.IQueryChannelsRequest): Promise<ibc.core.channel.v1.QueryChannelsResponse>;

                    /**
                     * Calls ConnectionChannels.
                     * @param request QueryConnectionChannelsRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryConnectionChannelsResponse
                     */
                    public connectionChannels(request: ibc.core.channel.v1.IQueryConnectionChannelsRequest, callback: ibc.core.channel.v1.Query.ConnectionChannelsCallback): void;

                    /**
                     * Calls ConnectionChannels.
                     * @param request QueryConnectionChannelsRequest message or plain object
                     * @returns Promise
                     */
                    public connectionChannels(request: ibc.core.channel.v1.IQueryConnectionChannelsRequest): Promise<ibc.core.channel.v1.QueryConnectionChannelsResponse>;

                    /**
                     * Calls ChannelClientState.
                     * @param request QueryChannelClientStateRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryChannelClientStateResponse
                     */
                    public channelClientState(request: ibc.core.channel.v1.IQueryChannelClientStateRequest, callback: ibc.core.channel.v1.Query.ChannelClientStateCallback): void;

                    /**
                     * Calls ChannelClientState.
                     * @param request QueryChannelClientStateRequest message or plain object
                     * @returns Promise
                     */
                    public channelClientState(request: ibc.core.channel.v1.IQueryChannelClientStateRequest): Promise<ibc.core.channel.v1.QueryChannelClientStateResponse>;

                    /**
                     * Calls ChannelConsensusState.
                     * @param request QueryChannelConsensusStateRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryChannelConsensusStateResponse
                     */
                    public channelConsensusState(request: ibc.core.channel.v1.IQueryChannelConsensusStateRequest, callback: ibc.core.channel.v1.Query.ChannelConsensusStateCallback): void;

                    /**
                     * Calls ChannelConsensusState.
                     * @param request QueryChannelConsensusStateRequest message or plain object
                     * @returns Promise
                     */
                    public channelConsensusState(request: ibc.core.channel.v1.IQueryChannelConsensusStateRequest): Promise<ibc.core.channel.v1.QueryChannelConsensusStateResponse>;

                    /**
                     * Calls PacketCommitment.
                     * @param request QueryPacketCommitmentRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryPacketCommitmentResponse
                     */
                    public packetCommitment(request: ibc.core.channel.v1.IQueryPacketCommitmentRequest, callback: ibc.core.channel.v1.Query.PacketCommitmentCallback): void;

                    /**
                     * Calls PacketCommitment.
                     * @param request QueryPacketCommitmentRequest message or plain object
                     * @returns Promise
                     */
                    public packetCommitment(request: ibc.core.channel.v1.IQueryPacketCommitmentRequest): Promise<ibc.core.channel.v1.QueryPacketCommitmentResponse>;

                    /**
                     * Calls PacketCommitments.
                     * @param request QueryPacketCommitmentsRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryPacketCommitmentsResponse
                     */
                    public packetCommitments(request: ibc.core.channel.v1.IQueryPacketCommitmentsRequest, callback: ibc.core.channel.v1.Query.PacketCommitmentsCallback): void;

                    /**
                     * Calls PacketCommitments.
                     * @param request QueryPacketCommitmentsRequest message or plain object
                     * @returns Promise
                     */
                    public packetCommitments(request: ibc.core.channel.v1.IQueryPacketCommitmentsRequest): Promise<ibc.core.channel.v1.QueryPacketCommitmentsResponse>;

                    /**
                     * Calls PacketReceipt.
                     * @param request QueryPacketReceiptRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryPacketReceiptResponse
                     */
                    public packetReceipt(request: ibc.core.channel.v1.IQueryPacketReceiptRequest, callback: ibc.core.channel.v1.Query.PacketReceiptCallback): void;

                    /**
                     * Calls PacketReceipt.
                     * @param request QueryPacketReceiptRequest message or plain object
                     * @returns Promise
                     */
                    public packetReceipt(request: ibc.core.channel.v1.IQueryPacketReceiptRequest): Promise<ibc.core.channel.v1.QueryPacketReceiptResponse>;

                    /**
                     * Calls PacketAcknowledgement.
                     * @param request QueryPacketAcknowledgementRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryPacketAcknowledgementResponse
                     */
                    public packetAcknowledgement(request: ibc.core.channel.v1.IQueryPacketAcknowledgementRequest, callback: ibc.core.channel.v1.Query.PacketAcknowledgementCallback): void;

                    /**
                     * Calls PacketAcknowledgement.
                     * @param request QueryPacketAcknowledgementRequest message or plain object
                     * @returns Promise
                     */
                    public packetAcknowledgement(request: ibc.core.channel.v1.IQueryPacketAcknowledgementRequest): Promise<ibc.core.channel.v1.QueryPacketAcknowledgementResponse>;

                    /**
                     * Calls PacketAcknowledgements.
                     * @param request QueryPacketAcknowledgementsRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryPacketAcknowledgementsResponse
                     */
                    public packetAcknowledgements(request: ibc.core.channel.v1.IQueryPacketAcknowledgementsRequest, callback: ibc.core.channel.v1.Query.PacketAcknowledgementsCallback): void;

                    /**
                     * Calls PacketAcknowledgements.
                     * @param request QueryPacketAcknowledgementsRequest message or plain object
                     * @returns Promise
                     */
                    public packetAcknowledgements(request: ibc.core.channel.v1.IQueryPacketAcknowledgementsRequest): Promise<ibc.core.channel.v1.QueryPacketAcknowledgementsResponse>;

                    /**
                     * Calls UnreceivedPackets.
                     * @param request QueryUnreceivedPacketsRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryUnreceivedPacketsResponse
                     */
                    public unreceivedPackets(request: ibc.core.channel.v1.IQueryUnreceivedPacketsRequest, callback: ibc.core.channel.v1.Query.UnreceivedPacketsCallback): void;

                    /**
                     * Calls UnreceivedPackets.
                     * @param request QueryUnreceivedPacketsRequest message or plain object
                     * @returns Promise
                     */
                    public unreceivedPackets(request: ibc.core.channel.v1.IQueryUnreceivedPacketsRequest): Promise<ibc.core.channel.v1.QueryUnreceivedPacketsResponse>;

                    /**
                     * Calls UnreceivedAcks.
                     * @param request QueryUnreceivedAcksRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryUnreceivedAcksResponse
                     */
                    public unreceivedAcks(request: ibc.core.channel.v1.IQueryUnreceivedAcksRequest, callback: ibc.core.channel.v1.Query.UnreceivedAcksCallback): void;

                    /**
                     * Calls UnreceivedAcks.
                     * @param request QueryUnreceivedAcksRequest message or plain object
                     * @returns Promise
                     */
                    public unreceivedAcks(request: ibc.core.channel.v1.IQueryUnreceivedAcksRequest): Promise<ibc.core.channel.v1.QueryUnreceivedAcksResponse>;

                    /**
                     * Calls NextSequenceReceive.
                     * @param request QueryNextSequenceReceiveRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryNextSequenceReceiveResponse
                     */
                    public nextSequenceReceive(request: ibc.core.channel.v1.IQueryNextSequenceReceiveRequest, callback: ibc.core.channel.v1.Query.NextSequenceReceiveCallback): void;

                    /**
                     * Calls NextSequenceReceive.
                     * @param request QueryNextSequenceReceiveRequest message or plain object
                     * @returns Promise
                     */
                    public nextSequenceReceive(request: ibc.core.channel.v1.IQueryNextSequenceReceiveRequest): Promise<ibc.core.channel.v1.QueryNextSequenceReceiveResponse>;
                }

                namespace Query {

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Query#channel}.
                     * @param error Error, if any
                     * @param [response] QueryChannelResponse
                     */
                    type ChannelCallback = (error: (Error|null), response?: ibc.core.channel.v1.QueryChannelResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Query#channels}.
                     * @param error Error, if any
                     * @param [response] QueryChannelsResponse
                     */
                    type ChannelsCallback = (error: (Error|null), response?: ibc.core.channel.v1.QueryChannelsResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Query#connectionChannels}.
                     * @param error Error, if any
                     * @param [response] QueryConnectionChannelsResponse
                     */
                    type ConnectionChannelsCallback = (error: (Error|null), response?: ibc.core.channel.v1.QueryConnectionChannelsResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Query#channelClientState}.
                     * @param error Error, if any
                     * @param [response] QueryChannelClientStateResponse
                     */
                    type ChannelClientStateCallback = (error: (Error|null), response?: ibc.core.channel.v1.QueryChannelClientStateResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Query#channelConsensusState}.
                     * @param error Error, if any
                     * @param [response] QueryChannelConsensusStateResponse
                     */
                    type ChannelConsensusStateCallback = (error: (Error|null), response?: ibc.core.channel.v1.QueryChannelConsensusStateResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Query#packetCommitment}.
                     * @param error Error, if any
                     * @param [response] QueryPacketCommitmentResponse
                     */
                    type PacketCommitmentCallback = (error: (Error|null), response?: ibc.core.channel.v1.QueryPacketCommitmentResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Query#packetCommitments}.
                     * @param error Error, if any
                     * @param [response] QueryPacketCommitmentsResponse
                     */
                    type PacketCommitmentsCallback = (error: (Error|null), response?: ibc.core.channel.v1.QueryPacketCommitmentsResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Query#packetReceipt}.
                     * @param error Error, if any
                     * @param [response] QueryPacketReceiptResponse
                     */
                    type PacketReceiptCallback = (error: (Error|null), response?: ibc.core.channel.v1.QueryPacketReceiptResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Query#packetAcknowledgement}.
                     * @param error Error, if any
                     * @param [response] QueryPacketAcknowledgementResponse
                     */
                    type PacketAcknowledgementCallback = (error: (Error|null), response?: ibc.core.channel.v1.QueryPacketAcknowledgementResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Query#packetAcknowledgements}.
                     * @param error Error, if any
                     * @param [response] QueryPacketAcknowledgementsResponse
                     */
                    type PacketAcknowledgementsCallback = (error: (Error|null), response?: ibc.core.channel.v1.QueryPacketAcknowledgementsResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Query#unreceivedPackets}.
                     * @param error Error, if any
                     * @param [response] QueryUnreceivedPacketsResponse
                     */
                    type UnreceivedPacketsCallback = (error: (Error|null), response?: ibc.core.channel.v1.QueryUnreceivedPacketsResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Query#unreceivedAcks}.
                     * @param error Error, if any
                     * @param [response] QueryUnreceivedAcksResponse
                     */
                    type UnreceivedAcksCallback = (error: (Error|null), response?: ibc.core.channel.v1.QueryUnreceivedAcksResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.channel.v1.Query#nextSequenceReceive}.
                     * @param error Error, if any
                     * @param [response] QueryNextSequenceReceiveResponse
                     */
                    type NextSequenceReceiveCallback = (error: (Error|null), response?: ibc.core.channel.v1.QueryNextSequenceReceiveResponse) => void;
                }

                /** Properties of a QueryChannelRequest. */
                interface IQueryChannelRequest {

                    /** QueryChannelRequest port_id */
                    port_id?: (string|null);

                    /** QueryChannelRequest channel_id */
                    channel_id?: (string|null);
                }

                /** Represents a QueryChannelRequest. */
                class QueryChannelRequest implements IQueryChannelRequest {

                    /**
                     * Constructs a new QueryChannelRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryChannelRequest);

                    /** QueryChannelRequest port_id. */
                    public port_id: string;

                    /** QueryChannelRequest channel_id. */
                    public channel_id: string;

                    /**
                     * Encodes the specified QueryChannelRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryChannelRequest.verify|verify} messages.
                     * @param message QueryChannelRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryChannelRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryChannelRequest message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryChannelRequest.verify|verify} messages.
                     * @param message QueryChannelRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryChannelRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryChannelRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryChannelRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryChannelRequest;

                    /**
                     * Decodes a QueryChannelRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryChannelRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryChannelRequest;

                    /**
                     * Verifies a QueryChannelRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryChannelRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryChannelRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryChannelRequest;

                    /**
                     * Creates a plain object from a QueryChannelRequest message. Also converts values to other types if specified.
                     * @param message QueryChannelRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryChannelRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryChannelRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryChannelResponse. */
                interface IQueryChannelResponse {

                    /** QueryChannelResponse channel */
                    channel?: (ibc.core.channel.v1.IChannel|null);

                    /** QueryChannelResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryChannelResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryChannelResponse. */
                class QueryChannelResponse implements IQueryChannelResponse {

                    /**
                     * Constructs a new QueryChannelResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryChannelResponse);

                    /** QueryChannelResponse channel. */
                    public channel?: (ibc.core.channel.v1.IChannel|null);

                    /** QueryChannelResponse proof. */
                    public proof: Uint8Array;

                    /** QueryChannelResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryChannelResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryChannelResponse.verify|verify} messages.
                     * @param message QueryChannelResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryChannelResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryChannelResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryChannelResponse.verify|verify} messages.
                     * @param message QueryChannelResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryChannelResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryChannelResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryChannelResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryChannelResponse;

                    /**
                     * Decodes a QueryChannelResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryChannelResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryChannelResponse;

                    /**
                     * Verifies a QueryChannelResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryChannelResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryChannelResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryChannelResponse;

                    /**
                     * Creates a plain object from a QueryChannelResponse message. Also converts values to other types if specified.
                     * @param message QueryChannelResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryChannelResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryChannelResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryChannelsRequest. */
                interface IQueryChannelsRequest {

                    /** QueryChannelsRequest pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
                }

                /** Represents a QueryChannelsRequest. */
                class QueryChannelsRequest implements IQueryChannelsRequest {

                    /**
                     * Constructs a new QueryChannelsRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryChannelsRequest);

                    /** QueryChannelsRequest pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /**
                     * Encodes the specified QueryChannelsRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryChannelsRequest.verify|verify} messages.
                     * @param message QueryChannelsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryChannelsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryChannelsRequest message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryChannelsRequest.verify|verify} messages.
                     * @param message QueryChannelsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryChannelsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryChannelsRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryChannelsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryChannelsRequest;

                    /**
                     * Decodes a QueryChannelsRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryChannelsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryChannelsRequest;

                    /**
                     * Verifies a QueryChannelsRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryChannelsRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryChannelsRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryChannelsRequest;

                    /**
                     * Creates a plain object from a QueryChannelsRequest message. Also converts values to other types if specified.
                     * @param message QueryChannelsRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryChannelsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryChannelsRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryChannelsResponse. */
                interface IQueryChannelsResponse {

                    /** QueryChannelsResponse channels */
                    channels?: (ibc.core.channel.v1.IIdentifiedChannel[]|null);

                    /** QueryChannelsResponse pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /** QueryChannelsResponse height */
                    height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryChannelsResponse. */
                class QueryChannelsResponse implements IQueryChannelsResponse {

                    /**
                     * Constructs a new QueryChannelsResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryChannelsResponse);

                    /** QueryChannelsResponse channels. */
                    public channels: ibc.core.channel.v1.IIdentifiedChannel[];

                    /** QueryChannelsResponse pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /** QueryChannelsResponse height. */
                    public height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryChannelsResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryChannelsResponse.verify|verify} messages.
                     * @param message QueryChannelsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryChannelsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryChannelsResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryChannelsResponse.verify|verify} messages.
                     * @param message QueryChannelsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryChannelsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryChannelsResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryChannelsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryChannelsResponse;

                    /**
                     * Decodes a QueryChannelsResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryChannelsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryChannelsResponse;

                    /**
                     * Verifies a QueryChannelsResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryChannelsResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryChannelsResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryChannelsResponse;

                    /**
                     * Creates a plain object from a QueryChannelsResponse message. Also converts values to other types if specified.
                     * @param message QueryChannelsResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryChannelsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryChannelsResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryConnectionChannelsRequest. */
                interface IQueryConnectionChannelsRequest {

                    /** QueryConnectionChannelsRequest connection */
                    connection?: (string|null);

                    /** QueryConnectionChannelsRequest pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
                }

                /** Represents a QueryConnectionChannelsRequest. */
                class QueryConnectionChannelsRequest implements IQueryConnectionChannelsRequest {

                    /**
                     * Constructs a new QueryConnectionChannelsRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryConnectionChannelsRequest);

                    /** QueryConnectionChannelsRequest connection. */
                    public connection: string;

                    /** QueryConnectionChannelsRequest pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /**
                     * Encodes the specified QueryConnectionChannelsRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryConnectionChannelsRequest.verify|verify} messages.
                     * @param message QueryConnectionChannelsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryConnectionChannelsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryConnectionChannelsRequest message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryConnectionChannelsRequest.verify|verify} messages.
                     * @param message QueryConnectionChannelsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryConnectionChannelsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConnectionChannelsRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryConnectionChannelsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryConnectionChannelsRequest;

                    /**
                     * Decodes a QueryConnectionChannelsRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryConnectionChannelsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryConnectionChannelsRequest;

                    /**
                     * Verifies a QueryConnectionChannelsRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryConnectionChannelsRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryConnectionChannelsRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryConnectionChannelsRequest;

                    /**
                     * Creates a plain object from a QueryConnectionChannelsRequest message. Also converts values to other types if specified.
                     * @param message QueryConnectionChannelsRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryConnectionChannelsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryConnectionChannelsRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryConnectionChannelsResponse. */
                interface IQueryConnectionChannelsResponse {

                    /** QueryConnectionChannelsResponse channels */
                    channels?: (ibc.core.channel.v1.IIdentifiedChannel[]|null);

                    /** QueryConnectionChannelsResponse pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /** QueryConnectionChannelsResponse height */
                    height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryConnectionChannelsResponse. */
                class QueryConnectionChannelsResponse implements IQueryConnectionChannelsResponse {

                    /**
                     * Constructs a new QueryConnectionChannelsResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryConnectionChannelsResponse);

                    /** QueryConnectionChannelsResponse channels. */
                    public channels: ibc.core.channel.v1.IIdentifiedChannel[];

                    /** QueryConnectionChannelsResponse pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /** QueryConnectionChannelsResponse height. */
                    public height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryConnectionChannelsResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryConnectionChannelsResponse.verify|verify} messages.
                     * @param message QueryConnectionChannelsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryConnectionChannelsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryConnectionChannelsResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryConnectionChannelsResponse.verify|verify} messages.
                     * @param message QueryConnectionChannelsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryConnectionChannelsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConnectionChannelsResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryConnectionChannelsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryConnectionChannelsResponse;

                    /**
                     * Decodes a QueryConnectionChannelsResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryConnectionChannelsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryConnectionChannelsResponse;

                    /**
                     * Verifies a QueryConnectionChannelsResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryConnectionChannelsResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryConnectionChannelsResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryConnectionChannelsResponse;

                    /**
                     * Creates a plain object from a QueryConnectionChannelsResponse message. Also converts values to other types if specified.
                     * @param message QueryConnectionChannelsResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryConnectionChannelsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryConnectionChannelsResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryChannelClientStateRequest. */
                interface IQueryChannelClientStateRequest {

                    /** QueryChannelClientStateRequest port_id */
                    port_id?: (string|null);

                    /** QueryChannelClientStateRequest channel_id */
                    channel_id?: (string|null);
                }

                /** Represents a QueryChannelClientStateRequest. */
                class QueryChannelClientStateRequest implements IQueryChannelClientStateRequest {

                    /**
                     * Constructs a new QueryChannelClientStateRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryChannelClientStateRequest);

                    /** QueryChannelClientStateRequest port_id. */
                    public port_id: string;

                    /** QueryChannelClientStateRequest channel_id. */
                    public channel_id: string;

                    /**
                     * Encodes the specified QueryChannelClientStateRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryChannelClientStateRequest.verify|verify} messages.
                     * @param message QueryChannelClientStateRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryChannelClientStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryChannelClientStateRequest message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryChannelClientStateRequest.verify|verify} messages.
                     * @param message QueryChannelClientStateRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryChannelClientStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryChannelClientStateRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryChannelClientStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryChannelClientStateRequest;

                    /**
                     * Decodes a QueryChannelClientStateRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryChannelClientStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryChannelClientStateRequest;

                    /**
                     * Verifies a QueryChannelClientStateRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryChannelClientStateRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryChannelClientStateRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryChannelClientStateRequest;

                    /**
                     * Creates a plain object from a QueryChannelClientStateRequest message. Also converts values to other types if specified.
                     * @param message QueryChannelClientStateRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryChannelClientStateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryChannelClientStateRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryChannelClientStateResponse. */
                interface IQueryChannelClientStateResponse {

                    /** QueryChannelClientStateResponse identified_client_state */
                    identified_client_state?: (ibc.core.client.v1.IIdentifiedClientState|null);

                    /** QueryChannelClientStateResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryChannelClientStateResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryChannelClientStateResponse. */
                class QueryChannelClientStateResponse implements IQueryChannelClientStateResponse {

                    /**
                     * Constructs a new QueryChannelClientStateResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryChannelClientStateResponse);

                    /** QueryChannelClientStateResponse identified_client_state. */
                    public identified_client_state?: (ibc.core.client.v1.IIdentifiedClientState|null);

                    /** QueryChannelClientStateResponse proof. */
                    public proof: Uint8Array;

                    /** QueryChannelClientStateResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryChannelClientStateResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryChannelClientStateResponse.verify|verify} messages.
                     * @param message QueryChannelClientStateResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryChannelClientStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryChannelClientStateResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryChannelClientStateResponse.verify|verify} messages.
                     * @param message QueryChannelClientStateResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryChannelClientStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryChannelClientStateResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryChannelClientStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryChannelClientStateResponse;

                    /**
                     * Decodes a QueryChannelClientStateResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryChannelClientStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryChannelClientStateResponse;

                    /**
                     * Verifies a QueryChannelClientStateResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryChannelClientStateResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryChannelClientStateResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryChannelClientStateResponse;

                    /**
                     * Creates a plain object from a QueryChannelClientStateResponse message. Also converts values to other types if specified.
                     * @param message QueryChannelClientStateResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryChannelClientStateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryChannelClientStateResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryChannelConsensusStateRequest. */
                interface IQueryChannelConsensusStateRequest {

                    /** QueryChannelConsensusStateRequest port_id */
                    port_id?: (string|null);

                    /** QueryChannelConsensusStateRequest channel_id */
                    channel_id?: (string|null);

                    /** QueryChannelConsensusStateRequest revision_number */
                    revision_number?: (Long|null);

                    /** QueryChannelConsensusStateRequest revision_height */
                    revision_height?: (Long|null);
                }

                /** Represents a QueryChannelConsensusStateRequest. */
                class QueryChannelConsensusStateRequest implements IQueryChannelConsensusStateRequest {

                    /**
                     * Constructs a new QueryChannelConsensusStateRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryChannelConsensusStateRequest);

                    /** QueryChannelConsensusStateRequest port_id. */
                    public port_id: string;

                    /** QueryChannelConsensusStateRequest channel_id. */
                    public channel_id: string;

                    /** QueryChannelConsensusStateRequest revision_number. */
                    public revision_number: Long;

                    /** QueryChannelConsensusStateRequest revision_height. */
                    public revision_height: Long;

                    /**
                     * Encodes the specified QueryChannelConsensusStateRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryChannelConsensusStateRequest.verify|verify} messages.
                     * @param message QueryChannelConsensusStateRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryChannelConsensusStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryChannelConsensusStateRequest message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryChannelConsensusStateRequest.verify|verify} messages.
                     * @param message QueryChannelConsensusStateRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryChannelConsensusStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryChannelConsensusStateRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryChannelConsensusStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryChannelConsensusStateRequest;

                    /**
                     * Decodes a QueryChannelConsensusStateRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryChannelConsensusStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryChannelConsensusStateRequest;

                    /**
                     * Verifies a QueryChannelConsensusStateRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryChannelConsensusStateRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryChannelConsensusStateRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryChannelConsensusStateRequest;

                    /**
                     * Creates a plain object from a QueryChannelConsensusStateRequest message. Also converts values to other types if specified.
                     * @param message QueryChannelConsensusStateRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryChannelConsensusStateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryChannelConsensusStateRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryChannelConsensusStateResponse. */
                interface IQueryChannelConsensusStateResponse {

                    /** QueryChannelConsensusStateResponse consensus_state */
                    consensus_state?: (google.protobuf.IAny|null);

                    /** QueryChannelConsensusStateResponse client_id */
                    client_id?: (string|null);

                    /** QueryChannelConsensusStateResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryChannelConsensusStateResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryChannelConsensusStateResponse. */
                class QueryChannelConsensusStateResponse implements IQueryChannelConsensusStateResponse {

                    /**
                     * Constructs a new QueryChannelConsensusStateResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryChannelConsensusStateResponse);

                    /** QueryChannelConsensusStateResponse consensus_state. */
                    public consensus_state?: (google.protobuf.IAny|null);

                    /** QueryChannelConsensusStateResponse client_id. */
                    public client_id: string;

                    /** QueryChannelConsensusStateResponse proof. */
                    public proof: Uint8Array;

                    /** QueryChannelConsensusStateResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryChannelConsensusStateResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryChannelConsensusStateResponse.verify|verify} messages.
                     * @param message QueryChannelConsensusStateResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryChannelConsensusStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryChannelConsensusStateResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryChannelConsensusStateResponse.verify|verify} messages.
                     * @param message QueryChannelConsensusStateResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryChannelConsensusStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryChannelConsensusStateResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryChannelConsensusStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryChannelConsensusStateResponse;

                    /**
                     * Decodes a QueryChannelConsensusStateResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryChannelConsensusStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryChannelConsensusStateResponse;

                    /**
                     * Verifies a QueryChannelConsensusStateResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryChannelConsensusStateResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryChannelConsensusStateResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryChannelConsensusStateResponse;

                    /**
                     * Creates a plain object from a QueryChannelConsensusStateResponse message. Also converts values to other types if specified.
                     * @param message QueryChannelConsensusStateResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryChannelConsensusStateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryChannelConsensusStateResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryPacketCommitmentRequest. */
                interface IQueryPacketCommitmentRequest {

                    /** QueryPacketCommitmentRequest port_id */
                    port_id?: (string|null);

                    /** QueryPacketCommitmentRequest channel_id */
                    channel_id?: (string|null);

                    /** QueryPacketCommitmentRequest sequence */
                    sequence?: (Long|null);
                }

                /** Represents a QueryPacketCommitmentRequest. */
                class QueryPacketCommitmentRequest implements IQueryPacketCommitmentRequest {

                    /**
                     * Constructs a new QueryPacketCommitmentRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryPacketCommitmentRequest);

                    /** QueryPacketCommitmentRequest port_id. */
                    public port_id: string;

                    /** QueryPacketCommitmentRequest channel_id. */
                    public channel_id: string;

                    /** QueryPacketCommitmentRequest sequence. */
                    public sequence: Long;

                    /**
                     * Encodes the specified QueryPacketCommitmentRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryPacketCommitmentRequest.verify|verify} messages.
                     * @param message QueryPacketCommitmentRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryPacketCommitmentRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryPacketCommitmentRequest message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryPacketCommitmentRequest.verify|verify} messages.
                     * @param message QueryPacketCommitmentRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryPacketCommitmentRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryPacketCommitmentRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryPacketCommitmentRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryPacketCommitmentRequest;

                    /**
                     * Decodes a QueryPacketCommitmentRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryPacketCommitmentRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryPacketCommitmentRequest;

                    /**
                     * Verifies a QueryPacketCommitmentRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryPacketCommitmentRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryPacketCommitmentRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryPacketCommitmentRequest;

                    /**
                     * Creates a plain object from a QueryPacketCommitmentRequest message. Also converts values to other types if specified.
                     * @param message QueryPacketCommitmentRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryPacketCommitmentRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryPacketCommitmentRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryPacketCommitmentResponse. */
                interface IQueryPacketCommitmentResponse {

                    /** QueryPacketCommitmentResponse commitment */
                    commitment?: (Uint8Array|null);

                    /** QueryPacketCommitmentResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryPacketCommitmentResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryPacketCommitmentResponse. */
                class QueryPacketCommitmentResponse implements IQueryPacketCommitmentResponse {

                    /**
                     * Constructs a new QueryPacketCommitmentResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryPacketCommitmentResponse);

                    /** QueryPacketCommitmentResponse commitment. */
                    public commitment: Uint8Array;

                    /** QueryPacketCommitmentResponse proof. */
                    public proof: Uint8Array;

                    /** QueryPacketCommitmentResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryPacketCommitmentResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryPacketCommitmentResponse.verify|verify} messages.
                     * @param message QueryPacketCommitmentResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryPacketCommitmentResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryPacketCommitmentResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryPacketCommitmentResponse.verify|verify} messages.
                     * @param message QueryPacketCommitmentResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryPacketCommitmentResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryPacketCommitmentResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryPacketCommitmentResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryPacketCommitmentResponse;

                    /**
                     * Decodes a QueryPacketCommitmentResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryPacketCommitmentResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryPacketCommitmentResponse;

                    /**
                     * Verifies a QueryPacketCommitmentResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryPacketCommitmentResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryPacketCommitmentResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryPacketCommitmentResponse;

                    /**
                     * Creates a plain object from a QueryPacketCommitmentResponse message. Also converts values to other types if specified.
                     * @param message QueryPacketCommitmentResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryPacketCommitmentResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryPacketCommitmentResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryPacketCommitmentsRequest. */
                interface IQueryPacketCommitmentsRequest {

                    /** QueryPacketCommitmentsRequest port_id */
                    port_id?: (string|null);

                    /** QueryPacketCommitmentsRequest channel_id */
                    channel_id?: (string|null);

                    /** QueryPacketCommitmentsRequest pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
                }

                /** Represents a QueryPacketCommitmentsRequest. */
                class QueryPacketCommitmentsRequest implements IQueryPacketCommitmentsRequest {

                    /**
                     * Constructs a new QueryPacketCommitmentsRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryPacketCommitmentsRequest);

                    /** QueryPacketCommitmentsRequest port_id. */
                    public port_id: string;

                    /** QueryPacketCommitmentsRequest channel_id. */
                    public channel_id: string;

                    /** QueryPacketCommitmentsRequest pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /**
                     * Encodes the specified QueryPacketCommitmentsRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryPacketCommitmentsRequest.verify|verify} messages.
                     * @param message QueryPacketCommitmentsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryPacketCommitmentsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryPacketCommitmentsRequest message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryPacketCommitmentsRequest.verify|verify} messages.
                     * @param message QueryPacketCommitmentsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryPacketCommitmentsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryPacketCommitmentsRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryPacketCommitmentsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryPacketCommitmentsRequest;

                    /**
                     * Decodes a QueryPacketCommitmentsRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryPacketCommitmentsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryPacketCommitmentsRequest;

                    /**
                     * Verifies a QueryPacketCommitmentsRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryPacketCommitmentsRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryPacketCommitmentsRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryPacketCommitmentsRequest;

                    /**
                     * Creates a plain object from a QueryPacketCommitmentsRequest message. Also converts values to other types if specified.
                     * @param message QueryPacketCommitmentsRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryPacketCommitmentsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryPacketCommitmentsRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryPacketCommitmentsResponse. */
                interface IQueryPacketCommitmentsResponse {

                    /** QueryPacketCommitmentsResponse commitments */
                    commitments?: (ibc.core.channel.v1.IPacketState[]|null);

                    /** QueryPacketCommitmentsResponse pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /** QueryPacketCommitmentsResponse height */
                    height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryPacketCommitmentsResponse. */
                class QueryPacketCommitmentsResponse implements IQueryPacketCommitmentsResponse {

                    /**
                     * Constructs a new QueryPacketCommitmentsResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryPacketCommitmentsResponse);

                    /** QueryPacketCommitmentsResponse commitments. */
                    public commitments: ibc.core.channel.v1.IPacketState[];

                    /** QueryPacketCommitmentsResponse pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /** QueryPacketCommitmentsResponse height. */
                    public height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryPacketCommitmentsResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryPacketCommitmentsResponse.verify|verify} messages.
                     * @param message QueryPacketCommitmentsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryPacketCommitmentsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryPacketCommitmentsResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryPacketCommitmentsResponse.verify|verify} messages.
                     * @param message QueryPacketCommitmentsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryPacketCommitmentsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryPacketCommitmentsResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryPacketCommitmentsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryPacketCommitmentsResponse;

                    /**
                     * Decodes a QueryPacketCommitmentsResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryPacketCommitmentsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryPacketCommitmentsResponse;

                    /**
                     * Verifies a QueryPacketCommitmentsResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryPacketCommitmentsResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryPacketCommitmentsResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryPacketCommitmentsResponse;

                    /**
                     * Creates a plain object from a QueryPacketCommitmentsResponse message. Also converts values to other types if specified.
                     * @param message QueryPacketCommitmentsResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryPacketCommitmentsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryPacketCommitmentsResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryPacketReceiptRequest. */
                interface IQueryPacketReceiptRequest {

                    /** QueryPacketReceiptRequest port_id */
                    port_id?: (string|null);

                    /** QueryPacketReceiptRequest channel_id */
                    channel_id?: (string|null);

                    /** QueryPacketReceiptRequest sequence */
                    sequence?: (Long|null);
                }

                /** Represents a QueryPacketReceiptRequest. */
                class QueryPacketReceiptRequest implements IQueryPacketReceiptRequest {

                    /**
                     * Constructs a new QueryPacketReceiptRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryPacketReceiptRequest);

                    /** QueryPacketReceiptRequest port_id. */
                    public port_id: string;

                    /** QueryPacketReceiptRequest channel_id. */
                    public channel_id: string;

                    /** QueryPacketReceiptRequest sequence. */
                    public sequence: Long;

                    /**
                     * Encodes the specified QueryPacketReceiptRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryPacketReceiptRequest.verify|verify} messages.
                     * @param message QueryPacketReceiptRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryPacketReceiptRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryPacketReceiptRequest message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryPacketReceiptRequest.verify|verify} messages.
                     * @param message QueryPacketReceiptRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryPacketReceiptRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryPacketReceiptRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryPacketReceiptRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryPacketReceiptRequest;

                    /**
                     * Decodes a QueryPacketReceiptRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryPacketReceiptRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryPacketReceiptRequest;

                    /**
                     * Verifies a QueryPacketReceiptRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryPacketReceiptRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryPacketReceiptRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryPacketReceiptRequest;

                    /**
                     * Creates a plain object from a QueryPacketReceiptRequest message. Also converts values to other types if specified.
                     * @param message QueryPacketReceiptRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryPacketReceiptRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryPacketReceiptRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryPacketReceiptResponse. */
                interface IQueryPacketReceiptResponse {

                    /** QueryPacketReceiptResponse received */
                    received?: (boolean|null);

                    /** QueryPacketReceiptResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryPacketReceiptResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryPacketReceiptResponse. */
                class QueryPacketReceiptResponse implements IQueryPacketReceiptResponse {

                    /**
                     * Constructs a new QueryPacketReceiptResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryPacketReceiptResponse);

                    /** QueryPacketReceiptResponse received. */
                    public received: boolean;

                    /** QueryPacketReceiptResponse proof. */
                    public proof: Uint8Array;

                    /** QueryPacketReceiptResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryPacketReceiptResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryPacketReceiptResponse.verify|verify} messages.
                     * @param message QueryPacketReceiptResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryPacketReceiptResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryPacketReceiptResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryPacketReceiptResponse.verify|verify} messages.
                     * @param message QueryPacketReceiptResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryPacketReceiptResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryPacketReceiptResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryPacketReceiptResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryPacketReceiptResponse;

                    /**
                     * Decodes a QueryPacketReceiptResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryPacketReceiptResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryPacketReceiptResponse;

                    /**
                     * Verifies a QueryPacketReceiptResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryPacketReceiptResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryPacketReceiptResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryPacketReceiptResponse;

                    /**
                     * Creates a plain object from a QueryPacketReceiptResponse message. Also converts values to other types if specified.
                     * @param message QueryPacketReceiptResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryPacketReceiptResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryPacketReceiptResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryPacketAcknowledgementRequest. */
                interface IQueryPacketAcknowledgementRequest {

                    /** QueryPacketAcknowledgementRequest port_id */
                    port_id?: (string|null);

                    /** QueryPacketAcknowledgementRequest channel_id */
                    channel_id?: (string|null);

                    /** QueryPacketAcknowledgementRequest sequence */
                    sequence?: (Long|null);
                }

                /** Represents a QueryPacketAcknowledgementRequest. */
                class QueryPacketAcknowledgementRequest implements IQueryPacketAcknowledgementRequest {

                    /**
                     * Constructs a new QueryPacketAcknowledgementRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryPacketAcknowledgementRequest);

                    /** QueryPacketAcknowledgementRequest port_id. */
                    public port_id: string;

                    /** QueryPacketAcknowledgementRequest channel_id. */
                    public channel_id: string;

                    /** QueryPacketAcknowledgementRequest sequence. */
                    public sequence: Long;

                    /**
                     * Encodes the specified QueryPacketAcknowledgementRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryPacketAcknowledgementRequest.verify|verify} messages.
                     * @param message QueryPacketAcknowledgementRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryPacketAcknowledgementRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryPacketAcknowledgementRequest message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryPacketAcknowledgementRequest.verify|verify} messages.
                     * @param message QueryPacketAcknowledgementRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryPacketAcknowledgementRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryPacketAcknowledgementRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryPacketAcknowledgementRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryPacketAcknowledgementRequest;

                    /**
                     * Decodes a QueryPacketAcknowledgementRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryPacketAcknowledgementRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryPacketAcknowledgementRequest;

                    /**
                     * Verifies a QueryPacketAcknowledgementRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryPacketAcknowledgementRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryPacketAcknowledgementRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryPacketAcknowledgementRequest;

                    /**
                     * Creates a plain object from a QueryPacketAcknowledgementRequest message. Also converts values to other types if specified.
                     * @param message QueryPacketAcknowledgementRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryPacketAcknowledgementRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryPacketAcknowledgementRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryPacketAcknowledgementResponse. */
                interface IQueryPacketAcknowledgementResponse {

                    /** QueryPacketAcknowledgementResponse acknowledgement */
                    acknowledgement?: (Uint8Array|null);

                    /** QueryPacketAcknowledgementResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryPacketAcknowledgementResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryPacketAcknowledgementResponse. */
                class QueryPacketAcknowledgementResponse implements IQueryPacketAcknowledgementResponse {

                    /**
                     * Constructs a new QueryPacketAcknowledgementResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryPacketAcknowledgementResponse);

                    /** QueryPacketAcknowledgementResponse acknowledgement. */
                    public acknowledgement: Uint8Array;

                    /** QueryPacketAcknowledgementResponse proof. */
                    public proof: Uint8Array;

                    /** QueryPacketAcknowledgementResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryPacketAcknowledgementResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryPacketAcknowledgementResponse.verify|verify} messages.
                     * @param message QueryPacketAcknowledgementResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryPacketAcknowledgementResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryPacketAcknowledgementResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryPacketAcknowledgementResponse.verify|verify} messages.
                     * @param message QueryPacketAcknowledgementResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryPacketAcknowledgementResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryPacketAcknowledgementResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryPacketAcknowledgementResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryPacketAcknowledgementResponse;

                    /**
                     * Decodes a QueryPacketAcknowledgementResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryPacketAcknowledgementResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryPacketAcknowledgementResponse;

                    /**
                     * Verifies a QueryPacketAcknowledgementResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryPacketAcknowledgementResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryPacketAcknowledgementResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryPacketAcknowledgementResponse;

                    /**
                     * Creates a plain object from a QueryPacketAcknowledgementResponse message. Also converts values to other types if specified.
                     * @param message QueryPacketAcknowledgementResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryPacketAcknowledgementResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryPacketAcknowledgementResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryPacketAcknowledgementsRequest. */
                interface IQueryPacketAcknowledgementsRequest {

                    /** QueryPacketAcknowledgementsRequest port_id */
                    port_id?: (string|null);

                    /** QueryPacketAcknowledgementsRequest channel_id */
                    channel_id?: (string|null);

                    /** QueryPacketAcknowledgementsRequest pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /** QueryPacketAcknowledgementsRequest packet_commitment_sequences */
                    packet_commitment_sequences?: (Long[]|null);
                }

                /** Represents a QueryPacketAcknowledgementsRequest. */
                class QueryPacketAcknowledgementsRequest implements IQueryPacketAcknowledgementsRequest {

                    /**
                     * Constructs a new QueryPacketAcknowledgementsRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryPacketAcknowledgementsRequest);

                    /** QueryPacketAcknowledgementsRequest port_id. */
                    public port_id: string;

                    /** QueryPacketAcknowledgementsRequest channel_id. */
                    public channel_id: string;

                    /** QueryPacketAcknowledgementsRequest pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /** QueryPacketAcknowledgementsRequest packet_commitment_sequences. */
                    public packet_commitment_sequences: Long[];

                    /**
                     * Encodes the specified QueryPacketAcknowledgementsRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryPacketAcknowledgementsRequest.verify|verify} messages.
                     * @param message QueryPacketAcknowledgementsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryPacketAcknowledgementsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryPacketAcknowledgementsRequest message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryPacketAcknowledgementsRequest.verify|verify} messages.
                     * @param message QueryPacketAcknowledgementsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryPacketAcknowledgementsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryPacketAcknowledgementsRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryPacketAcknowledgementsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryPacketAcknowledgementsRequest;

                    /**
                     * Decodes a QueryPacketAcknowledgementsRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryPacketAcknowledgementsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryPacketAcknowledgementsRequest;

                    /**
                     * Verifies a QueryPacketAcknowledgementsRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryPacketAcknowledgementsRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryPacketAcknowledgementsRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryPacketAcknowledgementsRequest;

                    /**
                     * Creates a plain object from a QueryPacketAcknowledgementsRequest message. Also converts values to other types if specified.
                     * @param message QueryPacketAcknowledgementsRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryPacketAcknowledgementsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryPacketAcknowledgementsRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryPacketAcknowledgementsResponse. */
                interface IQueryPacketAcknowledgementsResponse {

                    /** QueryPacketAcknowledgementsResponse acknowledgements */
                    acknowledgements?: (ibc.core.channel.v1.IPacketState[]|null);

                    /** QueryPacketAcknowledgementsResponse pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /** QueryPacketAcknowledgementsResponse height */
                    height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryPacketAcknowledgementsResponse. */
                class QueryPacketAcknowledgementsResponse implements IQueryPacketAcknowledgementsResponse {

                    /**
                     * Constructs a new QueryPacketAcknowledgementsResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryPacketAcknowledgementsResponse);

                    /** QueryPacketAcknowledgementsResponse acknowledgements. */
                    public acknowledgements: ibc.core.channel.v1.IPacketState[];

                    /** QueryPacketAcknowledgementsResponse pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /** QueryPacketAcknowledgementsResponse height. */
                    public height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryPacketAcknowledgementsResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryPacketAcknowledgementsResponse.verify|verify} messages.
                     * @param message QueryPacketAcknowledgementsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryPacketAcknowledgementsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryPacketAcknowledgementsResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryPacketAcknowledgementsResponse.verify|verify} messages.
                     * @param message QueryPacketAcknowledgementsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryPacketAcknowledgementsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryPacketAcknowledgementsResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryPacketAcknowledgementsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryPacketAcknowledgementsResponse;

                    /**
                     * Decodes a QueryPacketAcknowledgementsResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryPacketAcknowledgementsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryPacketAcknowledgementsResponse;

                    /**
                     * Verifies a QueryPacketAcknowledgementsResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryPacketAcknowledgementsResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryPacketAcknowledgementsResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryPacketAcknowledgementsResponse;

                    /**
                     * Creates a plain object from a QueryPacketAcknowledgementsResponse message. Also converts values to other types if specified.
                     * @param message QueryPacketAcknowledgementsResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryPacketAcknowledgementsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryPacketAcknowledgementsResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryUnreceivedPacketsRequest. */
                interface IQueryUnreceivedPacketsRequest {

                    /** QueryUnreceivedPacketsRequest port_id */
                    port_id?: (string|null);

                    /** QueryUnreceivedPacketsRequest channel_id */
                    channel_id?: (string|null);

                    /** QueryUnreceivedPacketsRequest packet_commitment_sequences */
                    packet_commitment_sequences?: (Long[]|null);
                }

                /** Represents a QueryUnreceivedPacketsRequest. */
                class QueryUnreceivedPacketsRequest implements IQueryUnreceivedPacketsRequest {

                    /**
                     * Constructs a new QueryUnreceivedPacketsRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryUnreceivedPacketsRequest);

                    /** QueryUnreceivedPacketsRequest port_id. */
                    public port_id: string;

                    /** QueryUnreceivedPacketsRequest channel_id. */
                    public channel_id: string;

                    /** QueryUnreceivedPacketsRequest packet_commitment_sequences. */
                    public packet_commitment_sequences: Long[];

                    /**
                     * Encodes the specified QueryUnreceivedPacketsRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryUnreceivedPacketsRequest.verify|verify} messages.
                     * @param message QueryUnreceivedPacketsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryUnreceivedPacketsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryUnreceivedPacketsRequest message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryUnreceivedPacketsRequest.verify|verify} messages.
                     * @param message QueryUnreceivedPacketsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryUnreceivedPacketsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryUnreceivedPacketsRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryUnreceivedPacketsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryUnreceivedPacketsRequest;

                    /**
                     * Decodes a QueryUnreceivedPacketsRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryUnreceivedPacketsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryUnreceivedPacketsRequest;

                    /**
                     * Verifies a QueryUnreceivedPacketsRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryUnreceivedPacketsRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryUnreceivedPacketsRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryUnreceivedPacketsRequest;

                    /**
                     * Creates a plain object from a QueryUnreceivedPacketsRequest message. Also converts values to other types if specified.
                     * @param message QueryUnreceivedPacketsRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryUnreceivedPacketsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryUnreceivedPacketsRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryUnreceivedPacketsResponse. */
                interface IQueryUnreceivedPacketsResponse {

                    /** QueryUnreceivedPacketsResponse sequences */
                    sequences?: (Long[]|null);

                    /** QueryUnreceivedPacketsResponse height */
                    height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryUnreceivedPacketsResponse. */
                class QueryUnreceivedPacketsResponse implements IQueryUnreceivedPacketsResponse {

                    /**
                     * Constructs a new QueryUnreceivedPacketsResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryUnreceivedPacketsResponse);

                    /** QueryUnreceivedPacketsResponse sequences. */
                    public sequences: Long[];

                    /** QueryUnreceivedPacketsResponse height. */
                    public height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryUnreceivedPacketsResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryUnreceivedPacketsResponse.verify|verify} messages.
                     * @param message QueryUnreceivedPacketsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryUnreceivedPacketsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryUnreceivedPacketsResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryUnreceivedPacketsResponse.verify|verify} messages.
                     * @param message QueryUnreceivedPacketsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryUnreceivedPacketsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryUnreceivedPacketsResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryUnreceivedPacketsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryUnreceivedPacketsResponse;

                    /**
                     * Decodes a QueryUnreceivedPacketsResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryUnreceivedPacketsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryUnreceivedPacketsResponse;

                    /**
                     * Verifies a QueryUnreceivedPacketsResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryUnreceivedPacketsResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryUnreceivedPacketsResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryUnreceivedPacketsResponse;

                    /**
                     * Creates a plain object from a QueryUnreceivedPacketsResponse message. Also converts values to other types if specified.
                     * @param message QueryUnreceivedPacketsResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryUnreceivedPacketsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryUnreceivedPacketsResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryUnreceivedAcksRequest. */
                interface IQueryUnreceivedAcksRequest {

                    /** QueryUnreceivedAcksRequest port_id */
                    port_id?: (string|null);

                    /** QueryUnreceivedAcksRequest channel_id */
                    channel_id?: (string|null);

                    /** QueryUnreceivedAcksRequest packet_ack_sequences */
                    packet_ack_sequences?: (Long[]|null);
                }

                /** Represents a QueryUnreceivedAcksRequest. */
                class QueryUnreceivedAcksRequest implements IQueryUnreceivedAcksRequest {

                    /**
                     * Constructs a new QueryUnreceivedAcksRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryUnreceivedAcksRequest);

                    /** QueryUnreceivedAcksRequest port_id. */
                    public port_id: string;

                    /** QueryUnreceivedAcksRequest channel_id. */
                    public channel_id: string;

                    /** QueryUnreceivedAcksRequest packet_ack_sequences. */
                    public packet_ack_sequences: Long[];

                    /**
                     * Encodes the specified QueryUnreceivedAcksRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryUnreceivedAcksRequest.verify|verify} messages.
                     * @param message QueryUnreceivedAcksRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryUnreceivedAcksRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryUnreceivedAcksRequest message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryUnreceivedAcksRequest.verify|verify} messages.
                     * @param message QueryUnreceivedAcksRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryUnreceivedAcksRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryUnreceivedAcksRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryUnreceivedAcksRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryUnreceivedAcksRequest;

                    /**
                     * Decodes a QueryUnreceivedAcksRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryUnreceivedAcksRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryUnreceivedAcksRequest;

                    /**
                     * Verifies a QueryUnreceivedAcksRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryUnreceivedAcksRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryUnreceivedAcksRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryUnreceivedAcksRequest;

                    /**
                     * Creates a plain object from a QueryUnreceivedAcksRequest message. Also converts values to other types if specified.
                     * @param message QueryUnreceivedAcksRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryUnreceivedAcksRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryUnreceivedAcksRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryUnreceivedAcksResponse. */
                interface IQueryUnreceivedAcksResponse {

                    /** QueryUnreceivedAcksResponse sequences */
                    sequences?: (Long[]|null);

                    /** QueryUnreceivedAcksResponse height */
                    height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryUnreceivedAcksResponse. */
                class QueryUnreceivedAcksResponse implements IQueryUnreceivedAcksResponse {

                    /**
                     * Constructs a new QueryUnreceivedAcksResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryUnreceivedAcksResponse);

                    /** QueryUnreceivedAcksResponse sequences. */
                    public sequences: Long[];

                    /** QueryUnreceivedAcksResponse height. */
                    public height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryUnreceivedAcksResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryUnreceivedAcksResponse.verify|verify} messages.
                     * @param message QueryUnreceivedAcksResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryUnreceivedAcksResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryUnreceivedAcksResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryUnreceivedAcksResponse.verify|verify} messages.
                     * @param message QueryUnreceivedAcksResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryUnreceivedAcksResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryUnreceivedAcksResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryUnreceivedAcksResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryUnreceivedAcksResponse;

                    /**
                     * Decodes a QueryUnreceivedAcksResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryUnreceivedAcksResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryUnreceivedAcksResponse;

                    /**
                     * Verifies a QueryUnreceivedAcksResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryUnreceivedAcksResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryUnreceivedAcksResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryUnreceivedAcksResponse;

                    /**
                     * Creates a plain object from a QueryUnreceivedAcksResponse message. Also converts values to other types if specified.
                     * @param message QueryUnreceivedAcksResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryUnreceivedAcksResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryUnreceivedAcksResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryNextSequenceReceiveRequest. */
                interface IQueryNextSequenceReceiveRequest {

                    /** QueryNextSequenceReceiveRequest port_id */
                    port_id?: (string|null);

                    /** QueryNextSequenceReceiveRequest channel_id */
                    channel_id?: (string|null);
                }

                /** Represents a QueryNextSequenceReceiveRequest. */
                class QueryNextSequenceReceiveRequest implements IQueryNextSequenceReceiveRequest {

                    /**
                     * Constructs a new QueryNextSequenceReceiveRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryNextSequenceReceiveRequest);

                    /** QueryNextSequenceReceiveRequest port_id. */
                    public port_id: string;

                    /** QueryNextSequenceReceiveRequest channel_id. */
                    public channel_id: string;

                    /**
                     * Encodes the specified QueryNextSequenceReceiveRequest message. Does not implicitly {@link ibc.core.channel.v1.QueryNextSequenceReceiveRequest.verify|verify} messages.
                     * @param message QueryNextSequenceReceiveRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryNextSequenceReceiveRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryNextSequenceReceiveRequest message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryNextSequenceReceiveRequest.verify|verify} messages.
                     * @param message QueryNextSequenceReceiveRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryNextSequenceReceiveRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryNextSequenceReceiveRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryNextSequenceReceiveRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryNextSequenceReceiveRequest;

                    /**
                     * Decodes a QueryNextSequenceReceiveRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryNextSequenceReceiveRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryNextSequenceReceiveRequest;

                    /**
                     * Verifies a QueryNextSequenceReceiveRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryNextSequenceReceiveRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryNextSequenceReceiveRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryNextSequenceReceiveRequest;

                    /**
                     * Creates a plain object from a QueryNextSequenceReceiveRequest message. Also converts values to other types if specified.
                     * @param message QueryNextSequenceReceiveRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryNextSequenceReceiveRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryNextSequenceReceiveRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryNextSequenceReceiveResponse. */
                interface IQueryNextSequenceReceiveResponse {

                    /** QueryNextSequenceReceiveResponse next_sequence_receive */
                    next_sequence_receive?: (Long|null);

                    /** QueryNextSequenceReceiveResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryNextSequenceReceiveResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryNextSequenceReceiveResponse. */
                class QueryNextSequenceReceiveResponse implements IQueryNextSequenceReceiveResponse {

                    /**
                     * Constructs a new QueryNextSequenceReceiveResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IQueryNextSequenceReceiveResponse);

                    /** QueryNextSequenceReceiveResponse next_sequence_receive. */
                    public next_sequence_receive: Long;

                    /** QueryNextSequenceReceiveResponse proof. */
                    public proof: Uint8Array;

                    /** QueryNextSequenceReceiveResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryNextSequenceReceiveResponse message. Does not implicitly {@link ibc.core.channel.v1.QueryNextSequenceReceiveResponse.verify|verify} messages.
                     * @param message QueryNextSequenceReceiveResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IQueryNextSequenceReceiveResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryNextSequenceReceiveResponse message, length delimited. Does not implicitly {@link ibc.core.channel.v1.QueryNextSequenceReceiveResponse.verify|verify} messages.
                     * @param message QueryNextSequenceReceiveResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IQueryNextSequenceReceiveResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryNextSequenceReceiveResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryNextSequenceReceiveResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.QueryNextSequenceReceiveResponse;

                    /**
                     * Decodes a QueryNextSequenceReceiveResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryNextSequenceReceiveResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.QueryNextSequenceReceiveResponse;

                    /**
                     * Verifies a QueryNextSequenceReceiveResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryNextSequenceReceiveResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryNextSequenceReceiveResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.QueryNextSequenceReceiveResponse;

                    /**
                     * Creates a plain object from a QueryNextSequenceReceiveResponse message. Also converts values to other types if specified.
                     * @param message QueryNextSequenceReceiveResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.QueryNextSequenceReceiveResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryNextSequenceReceiveResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a GenesisState. */
                interface IGenesisState {

                    /** GenesisState channels */
                    channels?: (ibc.core.channel.v1.IIdentifiedChannel[]|null);

                    /** GenesisState acknowledgements */
                    acknowledgements?: (ibc.core.channel.v1.IPacketState[]|null);

                    /** GenesisState commitments */
                    commitments?: (ibc.core.channel.v1.IPacketState[]|null);

                    /** GenesisState receipts */
                    receipts?: (ibc.core.channel.v1.IPacketState[]|null);

                    /** GenesisState send_sequences */
                    send_sequences?: (ibc.core.channel.v1.IPacketSequence[]|null);

                    /** GenesisState recv_sequences */
                    recv_sequences?: (ibc.core.channel.v1.IPacketSequence[]|null);

                    /** GenesisState ack_sequences */
                    ack_sequences?: (ibc.core.channel.v1.IPacketSequence[]|null);

                    /** GenesisState next_channel_sequence */
                    next_channel_sequence?: (Long|null);
                }

                /** Represents a GenesisState. */
                class GenesisState implements IGenesisState {

                    /**
                     * Constructs a new GenesisState.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IGenesisState);

                    /** GenesisState channels. */
                    public channels: ibc.core.channel.v1.IIdentifiedChannel[];

                    /** GenesisState acknowledgements. */
                    public acknowledgements: ibc.core.channel.v1.IPacketState[];

                    /** GenesisState commitments. */
                    public commitments: ibc.core.channel.v1.IPacketState[];

                    /** GenesisState receipts. */
                    public receipts: ibc.core.channel.v1.IPacketState[];

                    /** GenesisState send_sequences. */
                    public send_sequences: ibc.core.channel.v1.IPacketSequence[];

                    /** GenesisState recv_sequences. */
                    public recv_sequences: ibc.core.channel.v1.IPacketSequence[];

                    /** GenesisState ack_sequences. */
                    public ack_sequences: ibc.core.channel.v1.IPacketSequence[];

                    /** GenesisState next_channel_sequence. */
                    public next_channel_sequence: Long;

                    /**
                     * Encodes the specified GenesisState message. Does not implicitly {@link ibc.core.channel.v1.GenesisState.verify|verify} messages.
                     * @param message GenesisState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link ibc.core.channel.v1.GenesisState.verify|verify} messages.
                     * @param message GenesisState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GenesisState message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns GenesisState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.GenesisState;

                    /**
                     * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns GenesisState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.GenesisState;

                    /**
                     * Verifies a GenesisState message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns GenesisState
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.GenesisState;

                    /**
                     * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                     * @param message GenesisState
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this GenesisState to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a PacketSequence. */
                interface IPacketSequence {

                    /** PacketSequence port_id */
                    port_id?: (string|null);

                    /** PacketSequence channel_id */
                    channel_id?: (string|null);

                    /** PacketSequence sequence */
                    sequence?: (Long|null);
                }

                /** Represents a PacketSequence. */
                class PacketSequence implements IPacketSequence {

                    /**
                     * Constructs a new PacketSequence.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.channel.v1.IPacketSequence);

                    /** PacketSequence port_id. */
                    public port_id: string;

                    /** PacketSequence channel_id. */
                    public channel_id: string;

                    /** PacketSequence sequence. */
                    public sequence: Long;

                    /**
                     * Encodes the specified PacketSequence message. Does not implicitly {@link ibc.core.channel.v1.PacketSequence.verify|verify} messages.
                     * @param message PacketSequence message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.channel.v1.IPacketSequence, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified PacketSequence message, length delimited. Does not implicitly {@link ibc.core.channel.v1.PacketSequence.verify|verify} messages.
                     * @param message PacketSequence message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.channel.v1.IPacketSequence, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a PacketSequence message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns PacketSequence
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.channel.v1.PacketSequence;

                    /**
                     * Decodes a PacketSequence message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns PacketSequence
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.channel.v1.PacketSequence;

                    /**
                     * Verifies a PacketSequence message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a PacketSequence message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns PacketSequence
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.channel.v1.PacketSequence;

                    /**
                     * Creates a plain object from a PacketSequence message. Also converts values to other types if specified.
                     * @param message PacketSequence
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.channel.v1.PacketSequence, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this PacketSequence to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }
        }

        /** Namespace client. */
        namespace client {

            /** Namespace v1. */
            namespace v1 {

                /** Properties of an IdentifiedClientState. */
                interface IIdentifiedClientState {

                    /** IdentifiedClientState client_id */
                    client_id?: (string|null);

                    /** IdentifiedClientState client_state */
                    client_state?: (google.protobuf.IAny|null);
                }

                /** Represents an IdentifiedClientState. */
                class IdentifiedClientState implements IIdentifiedClientState {

                    /**
                     * Constructs a new IdentifiedClientState.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IIdentifiedClientState);

                    /** IdentifiedClientState client_id. */
                    public client_id: string;

                    /** IdentifiedClientState client_state. */
                    public client_state?: (google.protobuf.IAny|null);

                    /**
                     * Encodes the specified IdentifiedClientState message. Does not implicitly {@link ibc.core.client.v1.IdentifiedClientState.verify|verify} messages.
                     * @param message IdentifiedClientState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IIdentifiedClientState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified IdentifiedClientState message, length delimited. Does not implicitly {@link ibc.core.client.v1.IdentifiedClientState.verify|verify} messages.
                     * @param message IdentifiedClientState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IIdentifiedClientState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes an IdentifiedClientState message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns IdentifiedClientState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.IdentifiedClientState;

                    /**
                     * Decodes an IdentifiedClientState message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns IdentifiedClientState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.IdentifiedClientState;

                    /**
                     * Verifies an IdentifiedClientState message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates an IdentifiedClientState message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns IdentifiedClientState
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.IdentifiedClientState;

                    /**
                     * Creates a plain object from an IdentifiedClientState message. Also converts values to other types if specified.
                     * @param message IdentifiedClientState
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.IdentifiedClientState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this IdentifiedClientState to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a ConsensusStateWithHeight. */
                interface IConsensusStateWithHeight {

                    /** ConsensusStateWithHeight height */
                    height?: (ibc.core.client.v1.IHeight|null);

                    /** ConsensusStateWithHeight consensus_state */
                    consensus_state?: (google.protobuf.IAny|null);
                }

                /** Represents a ConsensusStateWithHeight. */
                class ConsensusStateWithHeight implements IConsensusStateWithHeight {

                    /**
                     * Constructs a new ConsensusStateWithHeight.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IConsensusStateWithHeight);

                    /** ConsensusStateWithHeight height. */
                    public height?: (ibc.core.client.v1.IHeight|null);

                    /** ConsensusStateWithHeight consensus_state. */
                    public consensus_state?: (google.protobuf.IAny|null);

                    /**
                     * Encodes the specified ConsensusStateWithHeight message. Does not implicitly {@link ibc.core.client.v1.ConsensusStateWithHeight.verify|verify} messages.
                     * @param message ConsensusStateWithHeight message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IConsensusStateWithHeight, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ConsensusStateWithHeight message, length delimited. Does not implicitly {@link ibc.core.client.v1.ConsensusStateWithHeight.verify|verify} messages.
                     * @param message ConsensusStateWithHeight message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IConsensusStateWithHeight, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ConsensusStateWithHeight message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ConsensusStateWithHeight
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.ConsensusStateWithHeight;

                    /**
                     * Decodes a ConsensusStateWithHeight message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ConsensusStateWithHeight
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.ConsensusStateWithHeight;

                    /**
                     * Verifies a ConsensusStateWithHeight message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ConsensusStateWithHeight message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ConsensusStateWithHeight
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.ConsensusStateWithHeight;

                    /**
                     * Creates a plain object from a ConsensusStateWithHeight message. Also converts values to other types if specified.
                     * @param message ConsensusStateWithHeight
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.ConsensusStateWithHeight, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ConsensusStateWithHeight to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a ClientConsensusStates. */
                interface IClientConsensusStates {

                    /** ClientConsensusStates client_id */
                    client_id?: (string|null);

                    /** ClientConsensusStates consensus_states */
                    consensus_states?: (ibc.core.client.v1.IConsensusStateWithHeight[]|null);
                }

                /** Represents a ClientConsensusStates. */
                class ClientConsensusStates implements IClientConsensusStates {

                    /**
                     * Constructs a new ClientConsensusStates.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IClientConsensusStates);

                    /** ClientConsensusStates client_id. */
                    public client_id: string;

                    /** ClientConsensusStates consensus_states. */
                    public consensus_states: ibc.core.client.v1.IConsensusStateWithHeight[];

                    /**
                     * Encodes the specified ClientConsensusStates message. Does not implicitly {@link ibc.core.client.v1.ClientConsensusStates.verify|verify} messages.
                     * @param message ClientConsensusStates message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IClientConsensusStates, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ClientConsensusStates message, length delimited. Does not implicitly {@link ibc.core.client.v1.ClientConsensusStates.verify|verify} messages.
                     * @param message ClientConsensusStates message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IClientConsensusStates, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ClientConsensusStates message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ClientConsensusStates
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.ClientConsensusStates;

                    /**
                     * Decodes a ClientConsensusStates message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ClientConsensusStates
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.ClientConsensusStates;

                    /**
                     * Verifies a ClientConsensusStates message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ClientConsensusStates message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ClientConsensusStates
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.ClientConsensusStates;

                    /**
                     * Creates a plain object from a ClientConsensusStates message. Also converts values to other types if specified.
                     * @param message ClientConsensusStates
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.ClientConsensusStates, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ClientConsensusStates to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a ClientUpdateProposal. */
                interface IClientUpdateProposal {

                    /** ClientUpdateProposal title */
                    title?: (string|null);

                    /** ClientUpdateProposal description */
                    description?: (string|null);

                    /** ClientUpdateProposal subject_client_id */
                    subject_client_id?: (string|null);

                    /** ClientUpdateProposal substitute_client_id */
                    substitute_client_id?: (string|null);
                }

                /** Represents a ClientUpdateProposal. */
                class ClientUpdateProposal implements IClientUpdateProposal {

                    /**
                     * Constructs a new ClientUpdateProposal.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IClientUpdateProposal);

                    /** ClientUpdateProposal title. */
                    public title: string;

                    /** ClientUpdateProposal description. */
                    public description: string;

                    /** ClientUpdateProposal subject_client_id. */
                    public subject_client_id: string;

                    /** ClientUpdateProposal substitute_client_id. */
                    public substitute_client_id: string;

                    /**
                     * Encodes the specified ClientUpdateProposal message. Does not implicitly {@link ibc.core.client.v1.ClientUpdateProposal.verify|verify} messages.
                     * @param message ClientUpdateProposal message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IClientUpdateProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ClientUpdateProposal message, length delimited. Does not implicitly {@link ibc.core.client.v1.ClientUpdateProposal.verify|verify} messages.
                     * @param message ClientUpdateProposal message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IClientUpdateProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ClientUpdateProposal message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ClientUpdateProposal
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.ClientUpdateProposal;

                    /**
                     * Decodes a ClientUpdateProposal message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ClientUpdateProposal
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.ClientUpdateProposal;

                    /**
                     * Verifies a ClientUpdateProposal message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ClientUpdateProposal message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ClientUpdateProposal
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.ClientUpdateProposal;

                    /**
                     * Creates a plain object from a ClientUpdateProposal message. Also converts values to other types if specified.
                     * @param message ClientUpdateProposal
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.ClientUpdateProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ClientUpdateProposal to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of an UpgradeProposal. */
                interface IUpgradeProposal {

                    /** UpgradeProposal title */
                    title?: (string|null);

                    /** UpgradeProposal description */
                    description?: (string|null);

                    /** UpgradeProposal plan */
                    plan?: (cosmos.upgrade.v1beta1.IPlan|null);

                    /** UpgradeProposal upgraded_client_state */
                    upgraded_client_state?: (google.protobuf.IAny|null);
                }

                /** Represents an UpgradeProposal. */
                class UpgradeProposal implements IUpgradeProposal {

                    /**
                     * Constructs a new UpgradeProposal.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IUpgradeProposal);

                    /** UpgradeProposal title. */
                    public title: string;

                    /** UpgradeProposal description. */
                    public description: string;

                    /** UpgradeProposal plan. */
                    public plan?: (cosmos.upgrade.v1beta1.IPlan|null);

                    /** UpgradeProposal upgraded_client_state. */
                    public upgraded_client_state?: (google.protobuf.IAny|null);

                    /**
                     * Encodes the specified UpgradeProposal message. Does not implicitly {@link ibc.core.client.v1.UpgradeProposal.verify|verify} messages.
                     * @param message UpgradeProposal message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IUpgradeProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified UpgradeProposal message, length delimited. Does not implicitly {@link ibc.core.client.v1.UpgradeProposal.verify|verify} messages.
                     * @param message UpgradeProposal message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IUpgradeProposal, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes an UpgradeProposal message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns UpgradeProposal
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.UpgradeProposal;

                    /**
                     * Decodes an UpgradeProposal message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns UpgradeProposal
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.UpgradeProposal;

                    /**
                     * Verifies an UpgradeProposal message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates an UpgradeProposal message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns UpgradeProposal
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.UpgradeProposal;

                    /**
                     * Creates a plain object from an UpgradeProposal message. Also converts values to other types if specified.
                     * @param message UpgradeProposal
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.UpgradeProposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this UpgradeProposal to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of an Height. */
                interface IHeight {

                    /** Height revision_number */
                    revision_number?: (Long|null);

                    /** Height revision_height */
                    revision_height?: (Long|null);
                }

                /** Represents an Height. */
                class Height implements IHeight {

                    /**
                     * Constructs a new Height.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IHeight);

                    /** Height revision_number. */
                    public revision_number: Long;

                    /** Height revision_height. */
                    public revision_height: Long;

                    /**
                     * Encodes the specified Height message. Does not implicitly {@link ibc.core.client.v1.Height.verify|verify} messages.
                     * @param message Height message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IHeight, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Height message, length delimited. Does not implicitly {@link ibc.core.client.v1.Height.verify|verify} messages.
                     * @param message Height message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IHeight, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes an Height message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Height
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.Height;

                    /**
                     * Decodes an Height message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Height
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.Height;

                    /**
                     * Verifies an Height message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates an Height message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Height
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.Height;

                    /**
                     * Creates a plain object from an Height message. Also converts values to other types if specified.
                     * @param message Height
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.Height, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Height to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Params. */
                interface IParams {

                    /** Params allowed_clients */
                    allowed_clients?: (string[]|null);
                }

                /** Represents a Params. */
                class Params implements IParams {

                    /**
                     * Constructs a new Params.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IParams);

                    /** Params allowed_clients. */
                    public allowed_clients: string[];

                    /**
                     * Encodes the specified Params message. Does not implicitly {@link ibc.core.client.v1.Params.verify|verify} messages.
                     * @param message Params message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Params message, length delimited. Does not implicitly {@link ibc.core.client.v1.Params.verify|verify} messages.
                     * @param message Params message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Params message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Params
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.Params;

                    /**
                     * Decodes a Params message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Params
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.Params;

                    /**
                     * Verifies a Params message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Params message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Params
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.Params;

                    /**
                     * Creates a plain object from a Params message. Also converts values to other types if specified.
                     * @param message Params
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Params to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Represents a Msg */
                class Msg extends $protobuf.rpc.Service {

                    /**
                     * Constructs a new Msg service.
                     * @param rpcImpl RPC implementation
                     * @param [requestDelimited=false] Whether requests are length-delimited
                     * @param [responseDelimited=false] Whether responses are length-delimited
                     */
                    constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                    /**
                     * Calls CreateClient.
                     * @param request MsgCreateClient message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgCreateClientResponse
                     */
                    public createClient(request: ibc.core.client.v1.IMsgCreateClient, callback: ibc.core.client.v1.Msg.CreateClientCallback): void;

                    /**
                     * Calls CreateClient.
                     * @param request MsgCreateClient message or plain object
                     * @returns Promise
                     */
                    public createClient(request: ibc.core.client.v1.IMsgCreateClient): Promise<ibc.core.client.v1.MsgCreateClientResponse>;

                    /**
                     * Calls UpdateClient.
                     * @param request MsgUpdateClient message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgUpdateClientResponse
                     */
                    public updateClient(request: ibc.core.client.v1.IMsgUpdateClient, callback: ibc.core.client.v1.Msg.UpdateClientCallback): void;

                    /**
                     * Calls UpdateClient.
                     * @param request MsgUpdateClient message or plain object
                     * @returns Promise
                     */
                    public updateClient(request: ibc.core.client.v1.IMsgUpdateClient): Promise<ibc.core.client.v1.MsgUpdateClientResponse>;

                    /**
                     * Calls UpgradeClient.
                     * @param request MsgUpgradeClient message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgUpgradeClientResponse
                     */
                    public upgradeClient(request: ibc.core.client.v1.IMsgUpgradeClient, callback: ibc.core.client.v1.Msg.UpgradeClientCallback): void;

                    /**
                     * Calls UpgradeClient.
                     * @param request MsgUpgradeClient message or plain object
                     * @returns Promise
                     */
                    public upgradeClient(request: ibc.core.client.v1.IMsgUpgradeClient): Promise<ibc.core.client.v1.MsgUpgradeClientResponse>;

                    /**
                     * Calls SubmitMisbehaviour.
                     * @param request MsgSubmitMisbehaviour message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgSubmitMisbehaviourResponse
                     */
                    public submitMisbehaviour(request: ibc.core.client.v1.IMsgSubmitMisbehaviour, callback: ibc.core.client.v1.Msg.SubmitMisbehaviourCallback): void;

                    /**
                     * Calls SubmitMisbehaviour.
                     * @param request MsgSubmitMisbehaviour message or plain object
                     * @returns Promise
                     */
                    public submitMisbehaviour(request: ibc.core.client.v1.IMsgSubmitMisbehaviour): Promise<ibc.core.client.v1.MsgSubmitMisbehaviourResponse>;
                }

                namespace Msg {

                    /**
                     * Callback as used by {@link ibc.core.client.v1.Msg#createClient}.
                     * @param error Error, if any
                     * @param [response] MsgCreateClientResponse
                     */
                    type CreateClientCallback = (error: (Error|null), response?: ibc.core.client.v1.MsgCreateClientResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.client.v1.Msg#updateClient}.
                     * @param error Error, if any
                     * @param [response] MsgUpdateClientResponse
                     */
                    type UpdateClientCallback = (error: (Error|null), response?: ibc.core.client.v1.MsgUpdateClientResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.client.v1.Msg#upgradeClient}.
                     * @param error Error, if any
                     * @param [response] MsgUpgradeClientResponse
                     */
                    type UpgradeClientCallback = (error: (Error|null), response?: ibc.core.client.v1.MsgUpgradeClientResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.client.v1.Msg#submitMisbehaviour}.
                     * @param error Error, if any
                     * @param [response] MsgSubmitMisbehaviourResponse
                     */
                    type SubmitMisbehaviourCallback = (error: (Error|null), response?: ibc.core.client.v1.MsgSubmitMisbehaviourResponse) => void;
                }

                /** Properties of a MsgCreateClient. */
                interface IMsgCreateClient {

                    /** MsgCreateClient client_state */
                    client_state?: (google.protobuf.IAny|null);

                    /** MsgCreateClient consensus_state */
                    consensus_state?: (google.protobuf.IAny|null);

                    /** MsgCreateClient signer */
                    signer?: (string|null);
                }

                /** Represents a MsgCreateClient. */
                class MsgCreateClient implements IMsgCreateClient {

                    /**
                     * Constructs a new MsgCreateClient.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IMsgCreateClient);

                    /** MsgCreateClient client_state. */
                    public client_state?: (google.protobuf.IAny|null);

                    /** MsgCreateClient consensus_state. */
                    public consensus_state?: (google.protobuf.IAny|null);

                    /** MsgCreateClient signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgCreateClient message. Does not implicitly {@link ibc.core.client.v1.MsgCreateClient.verify|verify} messages.
                     * @param message MsgCreateClient message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IMsgCreateClient, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgCreateClient message, length delimited. Does not implicitly {@link ibc.core.client.v1.MsgCreateClient.verify|verify} messages.
                     * @param message MsgCreateClient message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IMsgCreateClient, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgCreateClient message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgCreateClient
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.MsgCreateClient;

                    /**
                     * Decodes a MsgCreateClient message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgCreateClient
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.MsgCreateClient;

                    /**
                     * Verifies a MsgCreateClient message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgCreateClient message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgCreateClient
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.MsgCreateClient;

                    /**
                     * Creates a plain object from a MsgCreateClient message. Also converts values to other types if specified.
                     * @param message MsgCreateClient
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.MsgCreateClient, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgCreateClient to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgCreateClientResponse. */
                interface IMsgCreateClientResponse {
                }

                /** Represents a MsgCreateClientResponse. */
                class MsgCreateClientResponse implements IMsgCreateClientResponse {

                    /**
                     * Constructs a new MsgCreateClientResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IMsgCreateClientResponse);

                    /**
                     * Encodes the specified MsgCreateClientResponse message. Does not implicitly {@link ibc.core.client.v1.MsgCreateClientResponse.verify|verify} messages.
                     * @param message MsgCreateClientResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IMsgCreateClientResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgCreateClientResponse message, length delimited. Does not implicitly {@link ibc.core.client.v1.MsgCreateClientResponse.verify|verify} messages.
                     * @param message MsgCreateClientResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IMsgCreateClientResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgCreateClientResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgCreateClientResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.MsgCreateClientResponse;

                    /**
                     * Decodes a MsgCreateClientResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgCreateClientResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.MsgCreateClientResponse;

                    /**
                     * Verifies a MsgCreateClientResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgCreateClientResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgCreateClientResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.MsgCreateClientResponse;

                    /**
                     * Creates a plain object from a MsgCreateClientResponse message. Also converts values to other types if specified.
                     * @param message MsgCreateClientResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.MsgCreateClientResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgCreateClientResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgUpdateClient. */
                interface IMsgUpdateClient {

                    /** MsgUpdateClient client_id */
                    client_id?: (string|null);

                    /** MsgUpdateClient client_message */
                    client_message?: (google.protobuf.IAny|null);

                    /** MsgUpdateClient signer */
                    signer?: (string|null);
                }

                /** Represents a MsgUpdateClient. */
                class MsgUpdateClient implements IMsgUpdateClient {

                    /**
                     * Constructs a new MsgUpdateClient.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IMsgUpdateClient);

                    /** MsgUpdateClient client_id. */
                    public client_id: string;

                    /** MsgUpdateClient client_message. */
                    public client_message?: (google.protobuf.IAny|null);

                    /** MsgUpdateClient signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgUpdateClient message. Does not implicitly {@link ibc.core.client.v1.MsgUpdateClient.verify|verify} messages.
                     * @param message MsgUpdateClient message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IMsgUpdateClient, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgUpdateClient message, length delimited. Does not implicitly {@link ibc.core.client.v1.MsgUpdateClient.verify|verify} messages.
                     * @param message MsgUpdateClient message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IMsgUpdateClient, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgUpdateClient message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgUpdateClient
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.MsgUpdateClient;

                    /**
                     * Decodes a MsgUpdateClient message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgUpdateClient
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.MsgUpdateClient;

                    /**
                     * Verifies a MsgUpdateClient message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgUpdateClient message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgUpdateClient
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.MsgUpdateClient;

                    /**
                     * Creates a plain object from a MsgUpdateClient message. Also converts values to other types if specified.
                     * @param message MsgUpdateClient
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.MsgUpdateClient, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgUpdateClient to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgUpdateClientResponse. */
                interface IMsgUpdateClientResponse {
                }

                /** Represents a MsgUpdateClientResponse. */
                class MsgUpdateClientResponse implements IMsgUpdateClientResponse {

                    /**
                     * Constructs a new MsgUpdateClientResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IMsgUpdateClientResponse);

                    /**
                     * Encodes the specified MsgUpdateClientResponse message. Does not implicitly {@link ibc.core.client.v1.MsgUpdateClientResponse.verify|verify} messages.
                     * @param message MsgUpdateClientResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IMsgUpdateClientResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgUpdateClientResponse message, length delimited. Does not implicitly {@link ibc.core.client.v1.MsgUpdateClientResponse.verify|verify} messages.
                     * @param message MsgUpdateClientResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IMsgUpdateClientResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgUpdateClientResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgUpdateClientResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.MsgUpdateClientResponse;

                    /**
                     * Decodes a MsgUpdateClientResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgUpdateClientResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.MsgUpdateClientResponse;

                    /**
                     * Verifies a MsgUpdateClientResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgUpdateClientResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgUpdateClientResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.MsgUpdateClientResponse;

                    /**
                     * Creates a plain object from a MsgUpdateClientResponse message. Also converts values to other types if specified.
                     * @param message MsgUpdateClientResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.MsgUpdateClientResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgUpdateClientResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgUpgradeClient. */
                interface IMsgUpgradeClient {

                    /** MsgUpgradeClient client_id */
                    client_id?: (string|null);

                    /** MsgUpgradeClient client_state */
                    client_state?: (google.protobuf.IAny|null);

                    /** MsgUpgradeClient consensus_state */
                    consensus_state?: (google.protobuf.IAny|null);

                    /** MsgUpgradeClient proof_upgrade_client */
                    proof_upgrade_client?: (Uint8Array|null);

                    /** MsgUpgradeClient proof_upgrade_consensus_state */
                    proof_upgrade_consensus_state?: (Uint8Array|null);

                    /** MsgUpgradeClient signer */
                    signer?: (string|null);
                }

                /** Represents a MsgUpgradeClient. */
                class MsgUpgradeClient implements IMsgUpgradeClient {

                    /**
                     * Constructs a new MsgUpgradeClient.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IMsgUpgradeClient);

                    /** MsgUpgradeClient client_id. */
                    public client_id: string;

                    /** MsgUpgradeClient client_state. */
                    public client_state?: (google.protobuf.IAny|null);

                    /** MsgUpgradeClient consensus_state. */
                    public consensus_state?: (google.protobuf.IAny|null);

                    /** MsgUpgradeClient proof_upgrade_client. */
                    public proof_upgrade_client: Uint8Array;

                    /** MsgUpgradeClient proof_upgrade_consensus_state. */
                    public proof_upgrade_consensus_state: Uint8Array;

                    /** MsgUpgradeClient signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgUpgradeClient message. Does not implicitly {@link ibc.core.client.v1.MsgUpgradeClient.verify|verify} messages.
                     * @param message MsgUpgradeClient message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IMsgUpgradeClient, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgUpgradeClient message, length delimited. Does not implicitly {@link ibc.core.client.v1.MsgUpgradeClient.verify|verify} messages.
                     * @param message MsgUpgradeClient message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IMsgUpgradeClient, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgUpgradeClient message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgUpgradeClient
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.MsgUpgradeClient;

                    /**
                     * Decodes a MsgUpgradeClient message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgUpgradeClient
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.MsgUpgradeClient;

                    /**
                     * Verifies a MsgUpgradeClient message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgUpgradeClient message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgUpgradeClient
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.MsgUpgradeClient;

                    /**
                     * Creates a plain object from a MsgUpgradeClient message. Also converts values to other types if specified.
                     * @param message MsgUpgradeClient
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.MsgUpgradeClient, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgUpgradeClient to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgUpgradeClientResponse. */
                interface IMsgUpgradeClientResponse {
                }

                /** Represents a MsgUpgradeClientResponse. */
                class MsgUpgradeClientResponse implements IMsgUpgradeClientResponse {

                    /**
                     * Constructs a new MsgUpgradeClientResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IMsgUpgradeClientResponse);

                    /**
                     * Encodes the specified MsgUpgradeClientResponse message. Does not implicitly {@link ibc.core.client.v1.MsgUpgradeClientResponse.verify|verify} messages.
                     * @param message MsgUpgradeClientResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IMsgUpgradeClientResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgUpgradeClientResponse message, length delimited. Does not implicitly {@link ibc.core.client.v1.MsgUpgradeClientResponse.verify|verify} messages.
                     * @param message MsgUpgradeClientResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IMsgUpgradeClientResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgUpgradeClientResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgUpgradeClientResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.MsgUpgradeClientResponse;

                    /**
                     * Decodes a MsgUpgradeClientResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgUpgradeClientResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.MsgUpgradeClientResponse;

                    /**
                     * Verifies a MsgUpgradeClientResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgUpgradeClientResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgUpgradeClientResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.MsgUpgradeClientResponse;

                    /**
                     * Creates a plain object from a MsgUpgradeClientResponse message. Also converts values to other types if specified.
                     * @param message MsgUpgradeClientResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.MsgUpgradeClientResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgUpgradeClientResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgSubmitMisbehaviour. */
                interface IMsgSubmitMisbehaviour {

                    /** MsgSubmitMisbehaviour client_id */
                    client_id?: (string|null);

                    /** MsgSubmitMisbehaviour misbehaviour */
                    misbehaviour?: (google.protobuf.IAny|null);

                    /** MsgSubmitMisbehaviour signer */
                    signer?: (string|null);
                }

                /** Represents a MsgSubmitMisbehaviour. */
                class MsgSubmitMisbehaviour implements IMsgSubmitMisbehaviour {

                    /**
                     * Constructs a new MsgSubmitMisbehaviour.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IMsgSubmitMisbehaviour);

                    /** MsgSubmitMisbehaviour client_id. */
                    public client_id: string;

                    /** MsgSubmitMisbehaviour misbehaviour. */
                    public misbehaviour?: (google.protobuf.IAny|null);

                    /** MsgSubmitMisbehaviour signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgSubmitMisbehaviour message. Does not implicitly {@link ibc.core.client.v1.MsgSubmitMisbehaviour.verify|verify} messages.
                     * @param message MsgSubmitMisbehaviour message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IMsgSubmitMisbehaviour, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgSubmitMisbehaviour message, length delimited. Does not implicitly {@link ibc.core.client.v1.MsgSubmitMisbehaviour.verify|verify} messages.
                     * @param message MsgSubmitMisbehaviour message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IMsgSubmitMisbehaviour, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgSubmitMisbehaviour message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgSubmitMisbehaviour
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.MsgSubmitMisbehaviour;

                    /**
                     * Decodes a MsgSubmitMisbehaviour message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgSubmitMisbehaviour
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.MsgSubmitMisbehaviour;

                    /**
                     * Verifies a MsgSubmitMisbehaviour message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgSubmitMisbehaviour message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgSubmitMisbehaviour
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.MsgSubmitMisbehaviour;

                    /**
                     * Creates a plain object from a MsgSubmitMisbehaviour message. Also converts values to other types if specified.
                     * @param message MsgSubmitMisbehaviour
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.MsgSubmitMisbehaviour, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgSubmitMisbehaviour to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgSubmitMisbehaviourResponse. */
                interface IMsgSubmitMisbehaviourResponse {
                }

                /** Represents a MsgSubmitMisbehaviourResponse. */
                class MsgSubmitMisbehaviourResponse implements IMsgSubmitMisbehaviourResponse {

                    /**
                     * Constructs a new MsgSubmitMisbehaviourResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IMsgSubmitMisbehaviourResponse);

                    /**
                     * Encodes the specified MsgSubmitMisbehaviourResponse message. Does not implicitly {@link ibc.core.client.v1.MsgSubmitMisbehaviourResponse.verify|verify} messages.
                     * @param message MsgSubmitMisbehaviourResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IMsgSubmitMisbehaviourResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgSubmitMisbehaviourResponse message, length delimited. Does not implicitly {@link ibc.core.client.v1.MsgSubmitMisbehaviourResponse.verify|verify} messages.
                     * @param message MsgSubmitMisbehaviourResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IMsgSubmitMisbehaviourResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgSubmitMisbehaviourResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgSubmitMisbehaviourResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.MsgSubmitMisbehaviourResponse;

                    /**
                     * Decodes a MsgSubmitMisbehaviourResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgSubmitMisbehaviourResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.MsgSubmitMisbehaviourResponse;

                    /**
                     * Verifies a MsgSubmitMisbehaviourResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgSubmitMisbehaviourResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgSubmitMisbehaviourResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.MsgSubmitMisbehaviourResponse;

                    /**
                     * Creates a plain object from a MsgSubmitMisbehaviourResponse message. Also converts values to other types if specified.
                     * @param message MsgSubmitMisbehaviourResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.MsgSubmitMisbehaviourResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgSubmitMisbehaviourResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Represents a Query */
                class Query extends $protobuf.rpc.Service {

                    /**
                     * Constructs a new Query service.
                     * @param rpcImpl RPC implementation
                     * @param [requestDelimited=false] Whether requests are length-delimited
                     * @param [responseDelimited=false] Whether responses are length-delimited
                     */
                    constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                    /**
                     * Calls ClientState.
                     * @param request QueryClientStateRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryClientStateResponse
                     */
                    public clientState(request: ibc.core.client.v1.IQueryClientStateRequest, callback: ibc.core.client.v1.Query.ClientStateCallback): void;

                    /**
                     * Calls ClientState.
                     * @param request QueryClientStateRequest message or plain object
                     * @returns Promise
                     */
                    public clientState(request: ibc.core.client.v1.IQueryClientStateRequest): Promise<ibc.core.client.v1.QueryClientStateResponse>;

                    /**
                     * Calls ClientStates.
                     * @param request QueryClientStatesRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryClientStatesResponse
                     */
                    public clientStates(request: ibc.core.client.v1.IQueryClientStatesRequest, callback: ibc.core.client.v1.Query.ClientStatesCallback): void;

                    /**
                     * Calls ClientStates.
                     * @param request QueryClientStatesRequest message or plain object
                     * @returns Promise
                     */
                    public clientStates(request: ibc.core.client.v1.IQueryClientStatesRequest): Promise<ibc.core.client.v1.QueryClientStatesResponse>;

                    /**
                     * Calls ConsensusState.
                     * @param request QueryConsensusStateRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryConsensusStateResponse
                     */
                    public consensusState(request: ibc.core.client.v1.IQueryConsensusStateRequest, callback: ibc.core.client.v1.Query.ConsensusStateCallback): void;

                    /**
                     * Calls ConsensusState.
                     * @param request QueryConsensusStateRequest message or plain object
                     * @returns Promise
                     */
                    public consensusState(request: ibc.core.client.v1.IQueryConsensusStateRequest): Promise<ibc.core.client.v1.QueryConsensusStateResponse>;

                    /**
                     * Calls ConsensusStates.
                     * @param request QueryConsensusStatesRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryConsensusStatesResponse
                     */
                    public consensusStates(request: ibc.core.client.v1.IQueryConsensusStatesRequest, callback: ibc.core.client.v1.Query.ConsensusStatesCallback): void;

                    /**
                     * Calls ConsensusStates.
                     * @param request QueryConsensusStatesRequest message or plain object
                     * @returns Promise
                     */
                    public consensusStates(request: ibc.core.client.v1.IQueryConsensusStatesRequest): Promise<ibc.core.client.v1.QueryConsensusStatesResponse>;

                    /**
                     * Calls ConsensusStateHeights.
                     * @param request QueryConsensusStateHeightsRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryConsensusStateHeightsResponse
                     */
                    public consensusStateHeights(request: ibc.core.client.v1.IQueryConsensusStateHeightsRequest, callback: ibc.core.client.v1.Query.ConsensusStateHeightsCallback): void;

                    /**
                     * Calls ConsensusStateHeights.
                     * @param request QueryConsensusStateHeightsRequest message or plain object
                     * @returns Promise
                     */
                    public consensusStateHeights(request: ibc.core.client.v1.IQueryConsensusStateHeightsRequest): Promise<ibc.core.client.v1.QueryConsensusStateHeightsResponse>;

                    /**
                     * Calls ClientStatus.
                     * @param request QueryClientStatusRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryClientStatusResponse
                     */
                    public clientStatus(request: ibc.core.client.v1.IQueryClientStatusRequest, callback: ibc.core.client.v1.Query.ClientStatusCallback): void;

                    /**
                     * Calls ClientStatus.
                     * @param request QueryClientStatusRequest message or plain object
                     * @returns Promise
                     */
                    public clientStatus(request: ibc.core.client.v1.IQueryClientStatusRequest): Promise<ibc.core.client.v1.QueryClientStatusResponse>;

                    /**
                     * Calls ClientParams.
                     * @param request QueryClientParamsRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryClientParamsResponse
                     */
                    public clientParams(request: ibc.core.client.v1.IQueryClientParamsRequest, callback: ibc.core.client.v1.Query.ClientParamsCallback): void;

                    /**
                     * Calls ClientParams.
                     * @param request QueryClientParamsRequest message or plain object
                     * @returns Promise
                     */
                    public clientParams(request: ibc.core.client.v1.IQueryClientParamsRequest): Promise<ibc.core.client.v1.QueryClientParamsResponse>;

                    /**
                     * Calls UpgradedClientState.
                     * @param request QueryUpgradedClientStateRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryUpgradedClientStateResponse
                     */
                    public upgradedClientState(request: ibc.core.client.v1.IQueryUpgradedClientStateRequest, callback: ibc.core.client.v1.Query.UpgradedClientStateCallback): void;

                    /**
                     * Calls UpgradedClientState.
                     * @param request QueryUpgradedClientStateRequest message or plain object
                     * @returns Promise
                     */
                    public upgradedClientState(request: ibc.core.client.v1.IQueryUpgradedClientStateRequest): Promise<ibc.core.client.v1.QueryUpgradedClientStateResponse>;

                    /**
                     * Calls UpgradedConsensusState.
                     * @param request QueryUpgradedConsensusStateRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryUpgradedConsensusStateResponse
                     */
                    public upgradedConsensusState(request: ibc.core.client.v1.IQueryUpgradedConsensusStateRequest, callback: ibc.core.client.v1.Query.UpgradedConsensusStateCallback): void;

                    /**
                     * Calls UpgradedConsensusState.
                     * @param request QueryUpgradedConsensusStateRequest message or plain object
                     * @returns Promise
                     */
                    public upgradedConsensusState(request: ibc.core.client.v1.IQueryUpgradedConsensusStateRequest): Promise<ibc.core.client.v1.QueryUpgradedConsensusStateResponse>;
                }

                namespace Query {

                    /**
                     * Callback as used by {@link ibc.core.client.v1.Query#clientState}.
                     * @param error Error, if any
                     * @param [response] QueryClientStateResponse
                     */
                    type ClientStateCallback = (error: (Error|null), response?: ibc.core.client.v1.QueryClientStateResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.client.v1.Query#clientStates}.
                     * @param error Error, if any
                     * @param [response] QueryClientStatesResponse
                     */
                    type ClientStatesCallback = (error: (Error|null), response?: ibc.core.client.v1.QueryClientStatesResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.client.v1.Query#consensusState}.
                     * @param error Error, if any
                     * @param [response] QueryConsensusStateResponse
                     */
                    type ConsensusStateCallback = (error: (Error|null), response?: ibc.core.client.v1.QueryConsensusStateResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.client.v1.Query#consensusStates}.
                     * @param error Error, if any
                     * @param [response] QueryConsensusStatesResponse
                     */
                    type ConsensusStatesCallback = (error: (Error|null), response?: ibc.core.client.v1.QueryConsensusStatesResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.client.v1.Query#consensusStateHeights}.
                     * @param error Error, if any
                     * @param [response] QueryConsensusStateHeightsResponse
                     */
                    type ConsensusStateHeightsCallback = (error: (Error|null), response?: ibc.core.client.v1.QueryConsensusStateHeightsResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.client.v1.Query#clientStatus}.
                     * @param error Error, if any
                     * @param [response] QueryClientStatusResponse
                     */
                    type ClientStatusCallback = (error: (Error|null), response?: ibc.core.client.v1.QueryClientStatusResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.client.v1.Query#clientParams}.
                     * @param error Error, if any
                     * @param [response] QueryClientParamsResponse
                     */
                    type ClientParamsCallback = (error: (Error|null), response?: ibc.core.client.v1.QueryClientParamsResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.client.v1.Query#upgradedClientState}.
                     * @param error Error, if any
                     * @param [response] QueryUpgradedClientStateResponse
                     */
                    type UpgradedClientStateCallback = (error: (Error|null), response?: ibc.core.client.v1.QueryUpgradedClientStateResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.client.v1.Query#upgradedConsensusState}.
                     * @param error Error, if any
                     * @param [response] QueryUpgradedConsensusStateResponse
                     */
                    type UpgradedConsensusStateCallback = (error: (Error|null), response?: ibc.core.client.v1.QueryUpgradedConsensusStateResponse) => void;
                }

                /** Properties of a QueryClientStateRequest. */
                interface IQueryClientStateRequest {

                    /** QueryClientStateRequest client_id */
                    client_id?: (string|null);
                }

                /** Represents a QueryClientStateRequest. */
                class QueryClientStateRequest implements IQueryClientStateRequest {

                    /**
                     * Constructs a new QueryClientStateRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IQueryClientStateRequest);

                    /** QueryClientStateRequest client_id. */
                    public client_id: string;

                    /**
                     * Encodes the specified QueryClientStateRequest message. Does not implicitly {@link ibc.core.client.v1.QueryClientStateRequest.verify|verify} messages.
                     * @param message QueryClientStateRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IQueryClientStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryClientStateRequest message, length delimited. Does not implicitly {@link ibc.core.client.v1.QueryClientStateRequest.verify|verify} messages.
                     * @param message QueryClientStateRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IQueryClientStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryClientStateRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryClientStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.QueryClientStateRequest;

                    /**
                     * Decodes a QueryClientStateRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryClientStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.QueryClientStateRequest;

                    /**
                     * Verifies a QueryClientStateRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryClientStateRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryClientStateRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.QueryClientStateRequest;

                    /**
                     * Creates a plain object from a QueryClientStateRequest message. Also converts values to other types if specified.
                     * @param message QueryClientStateRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.QueryClientStateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryClientStateRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryClientStateResponse. */
                interface IQueryClientStateResponse {

                    /** QueryClientStateResponse client_state */
                    client_state?: (google.protobuf.IAny|null);

                    /** QueryClientStateResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryClientStateResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryClientStateResponse. */
                class QueryClientStateResponse implements IQueryClientStateResponse {

                    /**
                     * Constructs a new QueryClientStateResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IQueryClientStateResponse);

                    /** QueryClientStateResponse client_state. */
                    public client_state?: (google.protobuf.IAny|null);

                    /** QueryClientStateResponse proof. */
                    public proof: Uint8Array;

                    /** QueryClientStateResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryClientStateResponse message. Does not implicitly {@link ibc.core.client.v1.QueryClientStateResponse.verify|verify} messages.
                     * @param message QueryClientStateResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IQueryClientStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryClientStateResponse message, length delimited. Does not implicitly {@link ibc.core.client.v1.QueryClientStateResponse.verify|verify} messages.
                     * @param message QueryClientStateResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IQueryClientStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryClientStateResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryClientStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.QueryClientStateResponse;

                    /**
                     * Decodes a QueryClientStateResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryClientStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.QueryClientStateResponse;

                    /**
                     * Verifies a QueryClientStateResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryClientStateResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryClientStateResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.QueryClientStateResponse;

                    /**
                     * Creates a plain object from a QueryClientStateResponse message. Also converts values to other types if specified.
                     * @param message QueryClientStateResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.QueryClientStateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryClientStateResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryClientStatesRequest. */
                interface IQueryClientStatesRequest {

                    /** QueryClientStatesRequest pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
                }

                /** Represents a QueryClientStatesRequest. */
                class QueryClientStatesRequest implements IQueryClientStatesRequest {

                    /**
                     * Constructs a new QueryClientStatesRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IQueryClientStatesRequest);

                    /** QueryClientStatesRequest pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /**
                     * Encodes the specified QueryClientStatesRequest message. Does not implicitly {@link ibc.core.client.v1.QueryClientStatesRequest.verify|verify} messages.
                     * @param message QueryClientStatesRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IQueryClientStatesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryClientStatesRequest message, length delimited. Does not implicitly {@link ibc.core.client.v1.QueryClientStatesRequest.verify|verify} messages.
                     * @param message QueryClientStatesRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IQueryClientStatesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryClientStatesRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryClientStatesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.QueryClientStatesRequest;

                    /**
                     * Decodes a QueryClientStatesRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryClientStatesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.QueryClientStatesRequest;

                    /**
                     * Verifies a QueryClientStatesRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryClientStatesRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryClientStatesRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.QueryClientStatesRequest;

                    /**
                     * Creates a plain object from a QueryClientStatesRequest message. Also converts values to other types if specified.
                     * @param message QueryClientStatesRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.QueryClientStatesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryClientStatesRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryClientStatesResponse. */
                interface IQueryClientStatesResponse {

                    /** QueryClientStatesResponse client_states */
                    client_states?: (ibc.core.client.v1.IIdentifiedClientState[]|null);

                    /** QueryClientStatesResponse pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
                }

                /** Represents a QueryClientStatesResponse. */
                class QueryClientStatesResponse implements IQueryClientStatesResponse {

                    /**
                     * Constructs a new QueryClientStatesResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IQueryClientStatesResponse);

                    /** QueryClientStatesResponse client_states. */
                    public client_states: ibc.core.client.v1.IIdentifiedClientState[];

                    /** QueryClientStatesResponse pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /**
                     * Encodes the specified QueryClientStatesResponse message. Does not implicitly {@link ibc.core.client.v1.QueryClientStatesResponse.verify|verify} messages.
                     * @param message QueryClientStatesResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IQueryClientStatesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryClientStatesResponse message, length delimited. Does not implicitly {@link ibc.core.client.v1.QueryClientStatesResponse.verify|verify} messages.
                     * @param message QueryClientStatesResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IQueryClientStatesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryClientStatesResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryClientStatesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.QueryClientStatesResponse;

                    /**
                     * Decodes a QueryClientStatesResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryClientStatesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.QueryClientStatesResponse;

                    /**
                     * Verifies a QueryClientStatesResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryClientStatesResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryClientStatesResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.QueryClientStatesResponse;

                    /**
                     * Creates a plain object from a QueryClientStatesResponse message. Also converts values to other types if specified.
                     * @param message QueryClientStatesResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.QueryClientStatesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryClientStatesResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryConsensusStateRequest. */
                interface IQueryConsensusStateRequest {

                    /** QueryConsensusStateRequest client_id */
                    client_id?: (string|null);

                    /** QueryConsensusStateRequest revision_number */
                    revision_number?: (Long|null);

                    /** QueryConsensusStateRequest revision_height */
                    revision_height?: (Long|null);

                    /** QueryConsensusStateRequest latest_height */
                    latest_height?: (boolean|null);
                }

                /** Represents a QueryConsensusStateRequest. */
                class QueryConsensusStateRequest implements IQueryConsensusStateRequest {

                    /**
                     * Constructs a new QueryConsensusStateRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IQueryConsensusStateRequest);

                    /** QueryConsensusStateRequest client_id. */
                    public client_id: string;

                    /** QueryConsensusStateRequest revision_number. */
                    public revision_number: Long;

                    /** QueryConsensusStateRequest revision_height. */
                    public revision_height: Long;

                    /** QueryConsensusStateRequest latest_height. */
                    public latest_height: boolean;

                    /**
                     * Encodes the specified QueryConsensusStateRequest message. Does not implicitly {@link ibc.core.client.v1.QueryConsensusStateRequest.verify|verify} messages.
                     * @param message QueryConsensusStateRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IQueryConsensusStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryConsensusStateRequest message, length delimited. Does not implicitly {@link ibc.core.client.v1.QueryConsensusStateRequest.verify|verify} messages.
                     * @param message QueryConsensusStateRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IQueryConsensusStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConsensusStateRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryConsensusStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.QueryConsensusStateRequest;

                    /**
                     * Decodes a QueryConsensusStateRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryConsensusStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.QueryConsensusStateRequest;

                    /**
                     * Verifies a QueryConsensusStateRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryConsensusStateRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryConsensusStateRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.QueryConsensusStateRequest;

                    /**
                     * Creates a plain object from a QueryConsensusStateRequest message. Also converts values to other types if specified.
                     * @param message QueryConsensusStateRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.QueryConsensusStateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryConsensusStateRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryConsensusStateResponse. */
                interface IQueryConsensusStateResponse {

                    /** QueryConsensusStateResponse consensus_state */
                    consensus_state?: (google.protobuf.IAny|null);

                    /** QueryConsensusStateResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryConsensusStateResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryConsensusStateResponse. */
                class QueryConsensusStateResponse implements IQueryConsensusStateResponse {

                    /**
                     * Constructs a new QueryConsensusStateResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IQueryConsensusStateResponse);

                    /** QueryConsensusStateResponse consensus_state. */
                    public consensus_state?: (google.protobuf.IAny|null);

                    /** QueryConsensusStateResponse proof. */
                    public proof: Uint8Array;

                    /** QueryConsensusStateResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryConsensusStateResponse message. Does not implicitly {@link ibc.core.client.v1.QueryConsensusStateResponse.verify|verify} messages.
                     * @param message QueryConsensusStateResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IQueryConsensusStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryConsensusStateResponse message, length delimited. Does not implicitly {@link ibc.core.client.v1.QueryConsensusStateResponse.verify|verify} messages.
                     * @param message QueryConsensusStateResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IQueryConsensusStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConsensusStateResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryConsensusStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.QueryConsensusStateResponse;

                    /**
                     * Decodes a QueryConsensusStateResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryConsensusStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.QueryConsensusStateResponse;

                    /**
                     * Verifies a QueryConsensusStateResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryConsensusStateResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryConsensusStateResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.QueryConsensusStateResponse;

                    /**
                     * Creates a plain object from a QueryConsensusStateResponse message. Also converts values to other types if specified.
                     * @param message QueryConsensusStateResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.QueryConsensusStateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryConsensusStateResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryConsensusStatesRequest. */
                interface IQueryConsensusStatesRequest {

                    /** QueryConsensusStatesRequest client_id */
                    client_id?: (string|null);

                    /** QueryConsensusStatesRequest pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
                }

                /** Represents a QueryConsensusStatesRequest. */
                class QueryConsensusStatesRequest implements IQueryConsensusStatesRequest {

                    /**
                     * Constructs a new QueryConsensusStatesRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IQueryConsensusStatesRequest);

                    /** QueryConsensusStatesRequest client_id. */
                    public client_id: string;

                    /** QueryConsensusStatesRequest pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /**
                     * Encodes the specified QueryConsensusStatesRequest message. Does not implicitly {@link ibc.core.client.v1.QueryConsensusStatesRequest.verify|verify} messages.
                     * @param message QueryConsensusStatesRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IQueryConsensusStatesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryConsensusStatesRequest message, length delimited. Does not implicitly {@link ibc.core.client.v1.QueryConsensusStatesRequest.verify|verify} messages.
                     * @param message QueryConsensusStatesRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IQueryConsensusStatesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConsensusStatesRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryConsensusStatesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.QueryConsensusStatesRequest;

                    /**
                     * Decodes a QueryConsensusStatesRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryConsensusStatesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.QueryConsensusStatesRequest;

                    /**
                     * Verifies a QueryConsensusStatesRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryConsensusStatesRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryConsensusStatesRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.QueryConsensusStatesRequest;

                    /**
                     * Creates a plain object from a QueryConsensusStatesRequest message. Also converts values to other types if specified.
                     * @param message QueryConsensusStatesRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.QueryConsensusStatesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryConsensusStatesRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryConsensusStatesResponse. */
                interface IQueryConsensusStatesResponse {

                    /** QueryConsensusStatesResponse consensus_states */
                    consensus_states?: (ibc.core.client.v1.IConsensusStateWithHeight[]|null);

                    /** QueryConsensusStatesResponse pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
                }

                /** Represents a QueryConsensusStatesResponse. */
                class QueryConsensusStatesResponse implements IQueryConsensusStatesResponse {

                    /**
                     * Constructs a new QueryConsensusStatesResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IQueryConsensusStatesResponse);

                    /** QueryConsensusStatesResponse consensus_states. */
                    public consensus_states: ibc.core.client.v1.IConsensusStateWithHeight[];

                    /** QueryConsensusStatesResponse pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /**
                     * Encodes the specified QueryConsensusStatesResponse message. Does not implicitly {@link ibc.core.client.v1.QueryConsensusStatesResponse.verify|verify} messages.
                     * @param message QueryConsensusStatesResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IQueryConsensusStatesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryConsensusStatesResponse message, length delimited. Does not implicitly {@link ibc.core.client.v1.QueryConsensusStatesResponse.verify|verify} messages.
                     * @param message QueryConsensusStatesResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IQueryConsensusStatesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConsensusStatesResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryConsensusStatesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.QueryConsensusStatesResponse;

                    /**
                     * Decodes a QueryConsensusStatesResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryConsensusStatesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.QueryConsensusStatesResponse;

                    /**
                     * Verifies a QueryConsensusStatesResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryConsensusStatesResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryConsensusStatesResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.QueryConsensusStatesResponse;

                    /**
                     * Creates a plain object from a QueryConsensusStatesResponse message. Also converts values to other types if specified.
                     * @param message QueryConsensusStatesResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.QueryConsensusStatesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryConsensusStatesResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryConsensusStateHeightsRequest. */
                interface IQueryConsensusStateHeightsRequest {

                    /** QueryConsensusStateHeightsRequest client_id */
                    client_id?: (string|null);

                    /** QueryConsensusStateHeightsRequest pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
                }

                /** Represents a QueryConsensusStateHeightsRequest. */
                class QueryConsensusStateHeightsRequest implements IQueryConsensusStateHeightsRequest {

                    /**
                     * Constructs a new QueryConsensusStateHeightsRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IQueryConsensusStateHeightsRequest);

                    /** QueryConsensusStateHeightsRequest client_id. */
                    public client_id: string;

                    /** QueryConsensusStateHeightsRequest pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /**
                     * Encodes the specified QueryConsensusStateHeightsRequest message. Does not implicitly {@link ibc.core.client.v1.QueryConsensusStateHeightsRequest.verify|verify} messages.
                     * @param message QueryConsensusStateHeightsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IQueryConsensusStateHeightsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryConsensusStateHeightsRequest message, length delimited. Does not implicitly {@link ibc.core.client.v1.QueryConsensusStateHeightsRequest.verify|verify} messages.
                     * @param message QueryConsensusStateHeightsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IQueryConsensusStateHeightsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConsensusStateHeightsRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryConsensusStateHeightsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.QueryConsensusStateHeightsRequest;

                    /**
                     * Decodes a QueryConsensusStateHeightsRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryConsensusStateHeightsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.QueryConsensusStateHeightsRequest;

                    /**
                     * Verifies a QueryConsensusStateHeightsRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryConsensusStateHeightsRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryConsensusStateHeightsRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.QueryConsensusStateHeightsRequest;

                    /**
                     * Creates a plain object from a QueryConsensusStateHeightsRequest message. Also converts values to other types if specified.
                     * @param message QueryConsensusStateHeightsRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.QueryConsensusStateHeightsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryConsensusStateHeightsRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryConsensusStateHeightsResponse. */
                interface IQueryConsensusStateHeightsResponse {

                    /** QueryConsensusStateHeightsResponse consensus_state_heights */
                    consensus_state_heights?: (ibc.core.client.v1.IHeight[]|null);

                    /** QueryConsensusStateHeightsResponse pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);
                }

                /** Represents a QueryConsensusStateHeightsResponse. */
                class QueryConsensusStateHeightsResponse implements IQueryConsensusStateHeightsResponse {

                    /**
                     * Constructs a new QueryConsensusStateHeightsResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IQueryConsensusStateHeightsResponse);

                    /** QueryConsensusStateHeightsResponse consensus_state_heights. */
                    public consensus_state_heights: ibc.core.client.v1.IHeight[];

                    /** QueryConsensusStateHeightsResponse pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /**
                     * Encodes the specified QueryConsensusStateHeightsResponse message. Does not implicitly {@link ibc.core.client.v1.QueryConsensusStateHeightsResponse.verify|verify} messages.
                     * @param message QueryConsensusStateHeightsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IQueryConsensusStateHeightsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryConsensusStateHeightsResponse message, length delimited. Does not implicitly {@link ibc.core.client.v1.QueryConsensusStateHeightsResponse.verify|verify} messages.
                     * @param message QueryConsensusStateHeightsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IQueryConsensusStateHeightsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConsensusStateHeightsResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryConsensusStateHeightsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.QueryConsensusStateHeightsResponse;

                    /**
                     * Decodes a QueryConsensusStateHeightsResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryConsensusStateHeightsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.QueryConsensusStateHeightsResponse;

                    /**
                     * Verifies a QueryConsensusStateHeightsResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryConsensusStateHeightsResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryConsensusStateHeightsResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.QueryConsensusStateHeightsResponse;

                    /**
                     * Creates a plain object from a QueryConsensusStateHeightsResponse message. Also converts values to other types if specified.
                     * @param message QueryConsensusStateHeightsResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.QueryConsensusStateHeightsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryConsensusStateHeightsResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryClientStatusRequest. */
                interface IQueryClientStatusRequest {

                    /** QueryClientStatusRequest client_id */
                    client_id?: (string|null);
                }

                /** Represents a QueryClientStatusRequest. */
                class QueryClientStatusRequest implements IQueryClientStatusRequest {

                    /**
                     * Constructs a new QueryClientStatusRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IQueryClientStatusRequest);

                    /** QueryClientStatusRequest client_id. */
                    public client_id: string;

                    /**
                     * Encodes the specified QueryClientStatusRequest message. Does not implicitly {@link ibc.core.client.v1.QueryClientStatusRequest.verify|verify} messages.
                     * @param message QueryClientStatusRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IQueryClientStatusRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryClientStatusRequest message, length delimited. Does not implicitly {@link ibc.core.client.v1.QueryClientStatusRequest.verify|verify} messages.
                     * @param message QueryClientStatusRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IQueryClientStatusRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryClientStatusRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryClientStatusRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.QueryClientStatusRequest;

                    /**
                     * Decodes a QueryClientStatusRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryClientStatusRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.QueryClientStatusRequest;

                    /**
                     * Verifies a QueryClientStatusRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryClientStatusRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryClientStatusRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.QueryClientStatusRequest;

                    /**
                     * Creates a plain object from a QueryClientStatusRequest message. Also converts values to other types if specified.
                     * @param message QueryClientStatusRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.QueryClientStatusRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryClientStatusRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryClientStatusResponse. */
                interface IQueryClientStatusResponse {

                    /** QueryClientStatusResponse status */
                    status?: (string|null);
                }

                /** Represents a QueryClientStatusResponse. */
                class QueryClientStatusResponse implements IQueryClientStatusResponse {

                    /**
                     * Constructs a new QueryClientStatusResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IQueryClientStatusResponse);

                    /** QueryClientStatusResponse status. */
                    public status: string;

                    /**
                     * Encodes the specified QueryClientStatusResponse message. Does not implicitly {@link ibc.core.client.v1.QueryClientStatusResponse.verify|verify} messages.
                     * @param message QueryClientStatusResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IQueryClientStatusResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryClientStatusResponse message, length delimited. Does not implicitly {@link ibc.core.client.v1.QueryClientStatusResponse.verify|verify} messages.
                     * @param message QueryClientStatusResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IQueryClientStatusResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryClientStatusResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryClientStatusResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.QueryClientStatusResponse;

                    /**
                     * Decodes a QueryClientStatusResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryClientStatusResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.QueryClientStatusResponse;

                    /**
                     * Verifies a QueryClientStatusResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryClientStatusResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryClientStatusResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.QueryClientStatusResponse;

                    /**
                     * Creates a plain object from a QueryClientStatusResponse message. Also converts values to other types if specified.
                     * @param message QueryClientStatusResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.QueryClientStatusResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryClientStatusResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryClientParamsRequest. */
                interface IQueryClientParamsRequest {
                }

                /** Represents a QueryClientParamsRequest. */
                class QueryClientParamsRequest implements IQueryClientParamsRequest {

                    /**
                     * Constructs a new QueryClientParamsRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IQueryClientParamsRequest);

                    /**
                     * Encodes the specified QueryClientParamsRequest message. Does not implicitly {@link ibc.core.client.v1.QueryClientParamsRequest.verify|verify} messages.
                     * @param message QueryClientParamsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IQueryClientParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryClientParamsRequest message, length delimited. Does not implicitly {@link ibc.core.client.v1.QueryClientParamsRequest.verify|verify} messages.
                     * @param message QueryClientParamsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IQueryClientParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryClientParamsRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryClientParamsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.QueryClientParamsRequest;

                    /**
                     * Decodes a QueryClientParamsRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryClientParamsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.QueryClientParamsRequest;

                    /**
                     * Verifies a QueryClientParamsRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryClientParamsRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryClientParamsRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.QueryClientParamsRequest;

                    /**
                     * Creates a plain object from a QueryClientParamsRequest message. Also converts values to other types if specified.
                     * @param message QueryClientParamsRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.QueryClientParamsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryClientParamsRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryClientParamsResponse. */
                interface IQueryClientParamsResponse {

                    /** QueryClientParamsResponse params */
                    params?: (ibc.core.client.v1.IParams|null);
                }

                /** Represents a QueryClientParamsResponse. */
                class QueryClientParamsResponse implements IQueryClientParamsResponse {

                    /**
                     * Constructs a new QueryClientParamsResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IQueryClientParamsResponse);

                    /** QueryClientParamsResponse params. */
                    public params?: (ibc.core.client.v1.IParams|null);

                    /**
                     * Encodes the specified QueryClientParamsResponse message. Does not implicitly {@link ibc.core.client.v1.QueryClientParamsResponse.verify|verify} messages.
                     * @param message QueryClientParamsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IQueryClientParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryClientParamsResponse message, length delimited. Does not implicitly {@link ibc.core.client.v1.QueryClientParamsResponse.verify|verify} messages.
                     * @param message QueryClientParamsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IQueryClientParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryClientParamsResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryClientParamsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.QueryClientParamsResponse;

                    /**
                     * Decodes a QueryClientParamsResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryClientParamsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.QueryClientParamsResponse;

                    /**
                     * Verifies a QueryClientParamsResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryClientParamsResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryClientParamsResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.QueryClientParamsResponse;

                    /**
                     * Creates a plain object from a QueryClientParamsResponse message. Also converts values to other types if specified.
                     * @param message QueryClientParamsResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.QueryClientParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryClientParamsResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryUpgradedClientStateRequest. */
                interface IQueryUpgradedClientStateRequest {
                }

                /** Represents a QueryUpgradedClientStateRequest. */
                class QueryUpgradedClientStateRequest implements IQueryUpgradedClientStateRequest {

                    /**
                     * Constructs a new QueryUpgradedClientStateRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IQueryUpgradedClientStateRequest);

                    /**
                     * Encodes the specified QueryUpgradedClientStateRequest message. Does not implicitly {@link ibc.core.client.v1.QueryUpgradedClientStateRequest.verify|verify} messages.
                     * @param message QueryUpgradedClientStateRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IQueryUpgradedClientStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryUpgradedClientStateRequest message, length delimited. Does not implicitly {@link ibc.core.client.v1.QueryUpgradedClientStateRequest.verify|verify} messages.
                     * @param message QueryUpgradedClientStateRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IQueryUpgradedClientStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryUpgradedClientStateRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryUpgradedClientStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.QueryUpgradedClientStateRequest;

                    /**
                     * Decodes a QueryUpgradedClientStateRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryUpgradedClientStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.QueryUpgradedClientStateRequest;

                    /**
                     * Verifies a QueryUpgradedClientStateRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryUpgradedClientStateRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryUpgradedClientStateRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.QueryUpgradedClientStateRequest;

                    /**
                     * Creates a plain object from a QueryUpgradedClientStateRequest message. Also converts values to other types if specified.
                     * @param message QueryUpgradedClientStateRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.QueryUpgradedClientStateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryUpgradedClientStateRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryUpgradedClientStateResponse. */
                interface IQueryUpgradedClientStateResponse {

                    /** QueryUpgradedClientStateResponse upgraded_client_state */
                    upgraded_client_state?: (google.protobuf.IAny|null);
                }

                /** Represents a QueryUpgradedClientStateResponse. */
                class QueryUpgradedClientStateResponse implements IQueryUpgradedClientStateResponse {

                    /**
                     * Constructs a new QueryUpgradedClientStateResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IQueryUpgradedClientStateResponse);

                    /** QueryUpgradedClientStateResponse upgraded_client_state. */
                    public upgraded_client_state?: (google.protobuf.IAny|null);

                    /**
                     * Encodes the specified QueryUpgradedClientStateResponse message. Does not implicitly {@link ibc.core.client.v1.QueryUpgradedClientStateResponse.verify|verify} messages.
                     * @param message QueryUpgradedClientStateResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IQueryUpgradedClientStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryUpgradedClientStateResponse message, length delimited. Does not implicitly {@link ibc.core.client.v1.QueryUpgradedClientStateResponse.verify|verify} messages.
                     * @param message QueryUpgradedClientStateResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IQueryUpgradedClientStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryUpgradedClientStateResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryUpgradedClientStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.QueryUpgradedClientStateResponse;

                    /**
                     * Decodes a QueryUpgradedClientStateResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryUpgradedClientStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.QueryUpgradedClientStateResponse;

                    /**
                     * Verifies a QueryUpgradedClientStateResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryUpgradedClientStateResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryUpgradedClientStateResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.QueryUpgradedClientStateResponse;

                    /**
                     * Creates a plain object from a QueryUpgradedClientStateResponse message. Also converts values to other types if specified.
                     * @param message QueryUpgradedClientStateResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.QueryUpgradedClientStateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryUpgradedClientStateResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryUpgradedConsensusStateRequest. */
                interface IQueryUpgradedConsensusStateRequest {
                }

                /** Represents a QueryUpgradedConsensusStateRequest. */
                class QueryUpgradedConsensusStateRequest implements IQueryUpgradedConsensusStateRequest {

                    /**
                     * Constructs a new QueryUpgradedConsensusStateRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IQueryUpgradedConsensusStateRequest);

                    /**
                     * Encodes the specified QueryUpgradedConsensusStateRequest message. Does not implicitly {@link ibc.core.client.v1.QueryUpgradedConsensusStateRequest.verify|verify} messages.
                     * @param message QueryUpgradedConsensusStateRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IQueryUpgradedConsensusStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryUpgradedConsensusStateRequest message, length delimited. Does not implicitly {@link ibc.core.client.v1.QueryUpgradedConsensusStateRequest.verify|verify} messages.
                     * @param message QueryUpgradedConsensusStateRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IQueryUpgradedConsensusStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryUpgradedConsensusStateRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryUpgradedConsensusStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.QueryUpgradedConsensusStateRequest;

                    /**
                     * Decodes a QueryUpgradedConsensusStateRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryUpgradedConsensusStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.QueryUpgradedConsensusStateRequest;

                    /**
                     * Verifies a QueryUpgradedConsensusStateRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryUpgradedConsensusStateRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryUpgradedConsensusStateRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.QueryUpgradedConsensusStateRequest;

                    /**
                     * Creates a plain object from a QueryUpgradedConsensusStateRequest message. Also converts values to other types if specified.
                     * @param message QueryUpgradedConsensusStateRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.QueryUpgradedConsensusStateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryUpgradedConsensusStateRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryUpgradedConsensusStateResponse. */
                interface IQueryUpgradedConsensusStateResponse {

                    /** QueryUpgradedConsensusStateResponse upgraded_consensus_state */
                    upgraded_consensus_state?: (google.protobuf.IAny|null);
                }

                /** Represents a QueryUpgradedConsensusStateResponse. */
                class QueryUpgradedConsensusStateResponse implements IQueryUpgradedConsensusStateResponse {

                    /**
                     * Constructs a new QueryUpgradedConsensusStateResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IQueryUpgradedConsensusStateResponse);

                    /** QueryUpgradedConsensusStateResponse upgraded_consensus_state. */
                    public upgraded_consensus_state?: (google.protobuf.IAny|null);

                    /**
                     * Encodes the specified QueryUpgradedConsensusStateResponse message. Does not implicitly {@link ibc.core.client.v1.QueryUpgradedConsensusStateResponse.verify|verify} messages.
                     * @param message QueryUpgradedConsensusStateResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IQueryUpgradedConsensusStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryUpgradedConsensusStateResponse message, length delimited. Does not implicitly {@link ibc.core.client.v1.QueryUpgradedConsensusStateResponse.verify|verify} messages.
                     * @param message QueryUpgradedConsensusStateResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IQueryUpgradedConsensusStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryUpgradedConsensusStateResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryUpgradedConsensusStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.QueryUpgradedConsensusStateResponse;

                    /**
                     * Decodes a QueryUpgradedConsensusStateResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryUpgradedConsensusStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.QueryUpgradedConsensusStateResponse;

                    /**
                     * Verifies a QueryUpgradedConsensusStateResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryUpgradedConsensusStateResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryUpgradedConsensusStateResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.QueryUpgradedConsensusStateResponse;

                    /**
                     * Creates a plain object from a QueryUpgradedConsensusStateResponse message. Also converts values to other types if specified.
                     * @param message QueryUpgradedConsensusStateResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.QueryUpgradedConsensusStateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryUpgradedConsensusStateResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a GenesisState. */
                interface IGenesisState {

                    /** GenesisState clients */
                    clients?: (ibc.core.client.v1.IIdentifiedClientState[]|null);

                    /** GenesisState clients_consensus */
                    clients_consensus?: (ibc.core.client.v1.IClientConsensusStates[]|null);

                    /** GenesisState clients_metadata */
                    clients_metadata?: (ibc.core.client.v1.IIdentifiedGenesisMetadata[]|null);

                    /** GenesisState params */
                    params?: (ibc.core.client.v1.IParams|null);

                    /** GenesisState create_localhost */
                    create_localhost?: (boolean|null);

                    /** GenesisState next_client_sequence */
                    next_client_sequence?: (Long|null);
                }

                /** Represents a GenesisState. */
                class GenesisState implements IGenesisState {

                    /**
                     * Constructs a new GenesisState.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IGenesisState);

                    /** GenesisState clients. */
                    public clients: ibc.core.client.v1.IIdentifiedClientState[];

                    /** GenesisState clients_consensus. */
                    public clients_consensus: ibc.core.client.v1.IClientConsensusStates[];

                    /** GenesisState clients_metadata. */
                    public clients_metadata: ibc.core.client.v1.IIdentifiedGenesisMetadata[];

                    /** GenesisState params. */
                    public params?: (ibc.core.client.v1.IParams|null);

                    /** GenesisState create_localhost. */
                    public create_localhost: boolean;

                    /** GenesisState next_client_sequence. */
                    public next_client_sequence: Long;

                    /**
                     * Encodes the specified GenesisState message. Does not implicitly {@link ibc.core.client.v1.GenesisState.verify|verify} messages.
                     * @param message GenesisState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link ibc.core.client.v1.GenesisState.verify|verify} messages.
                     * @param message GenesisState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GenesisState message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns GenesisState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.GenesisState;

                    /**
                     * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns GenesisState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.GenesisState;

                    /**
                     * Verifies a GenesisState message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns GenesisState
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.GenesisState;

                    /**
                     * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                     * @param message GenesisState
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this GenesisState to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a GenesisMetadata. */
                interface IGenesisMetadata {

                    /** GenesisMetadata key */
                    key?: (Uint8Array|null);

                    /** GenesisMetadata value */
                    value?: (Uint8Array|null);
                }

                /** Represents a GenesisMetadata. */
                class GenesisMetadata implements IGenesisMetadata {

                    /**
                     * Constructs a new GenesisMetadata.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IGenesisMetadata);

                    /** GenesisMetadata key. */
                    public key: Uint8Array;

                    /** GenesisMetadata value. */
                    public value: Uint8Array;

                    /**
                     * Encodes the specified GenesisMetadata message. Does not implicitly {@link ibc.core.client.v1.GenesisMetadata.verify|verify} messages.
                     * @param message GenesisMetadata message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IGenesisMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified GenesisMetadata message, length delimited. Does not implicitly {@link ibc.core.client.v1.GenesisMetadata.verify|verify} messages.
                     * @param message GenesisMetadata message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IGenesisMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GenesisMetadata message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns GenesisMetadata
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.GenesisMetadata;

                    /**
                     * Decodes a GenesisMetadata message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns GenesisMetadata
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.GenesisMetadata;

                    /**
                     * Verifies a GenesisMetadata message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a GenesisMetadata message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns GenesisMetadata
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.GenesisMetadata;

                    /**
                     * Creates a plain object from a GenesisMetadata message. Also converts values to other types if specified.
                     * @param message GenesisMetadata
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.GenesisMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this GenesisMetadata to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of an IdentifiedGenesisMetadata. */
                interface IIdentifiedGenesisMetadata {

                    /** IdentifiedGenesisMetadata client_id */
                    client_id?: (string|null);

                    /** IdentifiedGenesisMetadata client_metadata */
                    client_metadata?: (ibc.core.client.v1.IGenesisMetadata[]|null);
                }

                /** Represents an IdentifiedGenesisMetadata. */
                class IdentifiedGenesisMetadata implements IIdentifiedGenesisMetadata {

                    /**
                     * Constructs a new IdentifiedGenesisMetadata.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.client.v1.IIdentifiedGenesisMetadata);

                    /** IdentifiedGenesisMetadata client_id. */
                    public client_id: string;

                    /** IdentifiedGenesisMetadata client_metadata. */
                    public client_metadata: ibc.core.client.v1.IGenesisMetadata[];

                    /**
                     * Encodes the specified IdentifiedGenesisMetadata message. Does not implicitly {@link ibc.core.client.v1.IdentifiedGenesisMetadata.verify|verify} messages.
                     * @param message IdentifiedGenesisMetadata message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.client.v1.IIdentifiedGenesisMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified IdentifiedGenesisMetadata message, length delimited. Does not implicitly {@link ibc.core.client.v1.IdentifiedGenesisMetadata.verify|verify} messages.
                     * @param message IdentifiedGenesisMetadata message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.client.v1.IIdentifiedGenesisMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes an IdentifiedGenesisMetadata message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns IdentifiedGenesisMetadata
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.client.v1.IdentifiedGenesisMetadata;

                    /**
                     * Decodes an IdentifiedGenesisMetadata message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns IdentifiedGenesisMetadata
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.client.v1.IdentifiedGenesisMetadata;

                    /**
                     * Verifies an IdentifiedGenesisMetadata message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates an IdentifiedGenesisMetadata message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns IdentifiedGenesisMetadata
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.client.v1.IdentifiedGenesisMetadata;

                    /**
                     * Creates a plain object from an IdentifiedGenesisMetadata message. Also converts values to other types if specified.
                     * @param message IdentifiedGenesisMetadata
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.client.v1.IdentifiedGenesisMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this IdentifiedGenesisMetadata to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }
        }

        /** Namespace commitment. */
        namespace commitment {

            /** Namespace v1. */
            namespace v1 {

                /** Properties of a MerkleRoot. */
                interface IMerkleRoot {

                    /** MerkleRoot hash */
                    hash?: (Uint8Array|null);
                }

                /** Represents a MerkleRoot. */
                class MerkleRoot implements IMerkleRoot {

                    /**
                     * Constructs a new MerkleRoot.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.commitment.v1.IMerkleRoot);

                    /** MerkleRoot hash. */
                    public hash: Uint8Array;

                    /**
                     * Encodes the specified MerkleRoot message. Does not implicitly {@link ibc.core.commitment.v1.MerkleRoot.verify|verify} messages.
                     * @param message MerkleRoot message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.commitment.v1.IMerkleRoot, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MerkleRoot message, length delimited. Does not implicitly {@link ibc.core.commitment.v1.MerkleRoot.verify|verify} messages.
                     * @param message MerkleRoot message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.commitment.v1.IMerkleRoot, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MerkleRoot message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MerkleRoot
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.commitment.v1.MerkleRoot;

                    /**
                     * Decodes a MerkleRoot message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MerkleRoot
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.commitment.v1.MerkleRoot;

                    /**
                     * Verifies a MerkleRoot message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MerkleRoot message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MerkleRoot
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.commitment.v1.MerkleRoot;

                    /**
                     * Creates a plain object from a MerkleRoot message. Also converts values to other types if specified.
                     * @param message MerkleRoot
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.commitment.v1.MerkleRoot, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MerkleRoot to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MerklePrefix. */
                interface IMerklePrefix {

                    /** MerklePrefix key_prefix */
                    key_prefix?: (Uint8Array|null);
                }

                /** Represents a MerklePrefix. */
                class MerklePrefix implements IMerklePrefix {

                    /**
                     * Constructs a new MerklePrefix.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.commitment.v1.IMerklePrefix);

                    /** MerklePrefix key_prefix. */
                    public key_prefix: Uint8Array;

                    /**
                     * Encodes the specified MerklePrefix message. Does not implicitly {@link ibc.core.commitment.v1.MerklePrefix.verify|verify} messages.
                     * @param message MerklePrefix message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.commitment.v1.IMerklePrefix, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MerklePrefix message, length delimited. Does not implicitly {@link ibc.core.commitment.v1.MerklePrefix.verify|verify} messages.
                     * @param message MerklePrefix message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.commitment.v1.IMerklePrefix, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MerklePrefix message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MerklePrefix
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.commitment.v1.MerklePrefix;

                    /**
                     * Decodes a MerklePrefix message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MerklePrefix
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.commitment.v1.MerklePrefix;

                    /**
                     * Verifies a MerklePrefix message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MerklePrefix message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MerklePrefix
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.commitment.v1.MerklePrefix;

                    /**
                     * Creates a plain object from a MerklePrefix message. Also converts values to other types if specified.
                     * @param message MerklePrefix
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.commitment.v1.MerklePrefix, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MerklePrefix to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MerklePath. */
                interface IMerklePath {

                    /** MerklePath key_path */
                    key_path?: (string[]|null);
                }

                /** Represents a MerklePath. */
                class MerklePath implements IMerklePath {

                    /**
                     * Constructs a new MerklePath.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.commitment.v1.IMerklePath);

                    /** MerklePath key_path. */
                    public key_path: string[];

                    /**
                     * Encodes the specified MerklePath message. Does not implicitly {@link ibc.core.commitment.v1.MerklePath.verify|verify} messages.
                     * @param message MerklePath message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.commitment.v1.IMerklePath, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MerklePath message, length delimited. Does not implicitly {@link ibc.core.commitment.v1.MerklePath.verify|verify} messages.
                     * @param message MerklePath message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.commitment.v1.IMerklePath, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MerklePath message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MerklePath
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.commitment.v1.MerklePath;

                    /**
                     * Decodes a MerklePath message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MerklePath
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.commitment.v1.MerklePath;

                    /**
                     * Verifies a MerklePath message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MerklePath message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MerklePath
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.commitment.v1.MerklePath;

                    /**
                     * Creates a plain object from a MerklePath message. Also converts values to other types if specified.
                     * @param message MerklePath
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.commitment.v1.MerklePath, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MerklePath to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MerkleProof. */
                interface IMerkleProof {

                    /** MerkleProof proofs */
                    proofs?: (cosmos.ics23.v1.ICommitmentProof[]|null);
                }

                /** Represents a MerkleProof. */
                class MerkleProof implements IMerkleProof {

                    /**
                     * Constructs a new MerkleProof.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.commitment.v1.IMerkleProof);

                    /** MerkleProof proofs. */
                    public proofs: cosmos.ics23.v1.ICommitmentProof[];

                    /**
                     * Encodes the specified MerkleProof message. Does not implicitly {@link ibc.core.commitment.v1.MerkleProof.verify|verify} messages.
                     * @param message MerkleProof message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.commitment.v1.IMerkleProof, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MerkleProof message, length delimited. Does not implicitly {@link ibc.core.commitment.v1.MerkleProof.verify|verify} messages.
                     * @param message MerkleProof message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.commitment.v1.IMerkleProof, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MerkleProof message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MerkleProof
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.commitment.v1.MerkleProof;

                    /**
                     * Decodes a MerkleProof message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MerkleProof
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.commitment.v1.MerkleProof;

                    /**
                     * Verifies a MerkleProof message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MerkleProof message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MerkleProof
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.commitment.v1.MerkleProof;

                    /**
                     * Creates a plain object from a MerkleProof message. Also converts values to other types if specified.
                     * @param message MerkleProof
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.commitment.v1.MerkleProof, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MerkleProof to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }
        }

        /** Namespace connection. */
        namespace connection {

            /** Namespace v1. */
            namespace v1 {

                /** Represents a Msg */
                class Msg extends $protobuf.rpc.Service {

                    /**
                     * Constructs a new Msg service.
                     * @param rpcImpl RPC implementation
                     * @param [requestDelimited=false] Whether requests are length-delimited
                     * @param [responseDelimited=false] Whether responses are length-delimited
                     */
                    constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                    /**
                     * Calls ConnectionOpenInit.
                     * @param request MsgConnectionOpenInit message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgConnectionOpenInitResponse
                     */
                    public connectionOpenInit(request: ibc.core.connection.v1.IMsgConnectionOpenInit, callback: ibc.core.connection.v1.Msg.ConnectionOpenInitCallback): void;

                    /**
                     * Calls ConnectionOpenInit.
                     * @param request MsgConnectionOpenInit message or plain object
                     * @returns Promise
                     */
                    public connectionOpenInit(request: ibc.core.connection.v1.IMsgConnectionOpenInit): Promise<ibc.core.connection.v1.MsgConnectionOpenInitResponse>;

                    /**
                     * Calls ConnectionOpenTry.
                     * @param request MsgConnectionOpenTry message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgConnectionOpenTryResponse
                     */
                    public connectionOpenTry(request: ibc.core.connection.v1.IMsgConnectionOpenTry, callback: ibc.core.connection.v1.Msg.ConnectionOpenTryCallback): void;

                    /**
                     * Calls ConnectionOpenTry.
                     * @param request MsgConnectionOpenTry message or plain object
                     * @returns Promise
                     */
                    public connectionOpenTry(request: ibc.core.connection.v1.IMsgConnectionOpenTry): Promise<ibc.core.connection.v1.MsgConnectionOpenTryResponse>;

                    /**
                     * Calls ConnectionOpenAck.
                     * @param request MsgConnectionOpenAck message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgConnectionOpenAckResponse
                     */
                    public connectionOpenAck(request: ibc.core.connection.v1.IMsgConnectionOpenAck, callback: ibc.core.connection.v1.Msg.ConnectionOpenAckCallback): void;

                    /**
                     * Calls ConnectionOpenAck.
                     * @param request MsgConnectionOpenAck message or plain object
                     * @returns Promise
                     */
                    public connectionOpenAck(request: ibc.core.connection.v1.IMsgConnectionOpenAck): Promise<ibc.core.connection.v1.MsgConnectionOpenAckResponse>;

                    /**
                     * Calls ConnectionOpenConfirm.
                     * @param request MsgConnectionOpenConfirm message or plain object
                     * @param callback Node-style callback called with the error, if any, and MsgConnectionOpenConfirmResponse
                     */
                    public connectionOpenConfirm(request: ibc.core.connection.v1.IMsgConnectionOpenConfirm, callback: ibc.core.connection.v1.Msg.ConnectionOpenConfirmCallback): void;

                    /**
                     * Calls ConnectionOpenConfirm.
                     * @param request MsgConnectionOpenConfirm message or plain object
                     * @returns Promise
                     */
                    public connectionOpenConfirm(request: ibc.core.connection.v1.IMsgConnectionOpenConfirm): Promise<ibc.core.connection.v1.MsgConnectionOpenConfirmResponse>;
                }

                namespace Msg {

                    /**
                     * Callback as used by {@link ibc.core.connection.v1.Msg#connectionOpenInit}.
                     * @param error Error, if any
                     * @param [response] MsgConnectionOpenInitResponse
                     */
                    type ConnectionOpenInitCallback = (error: (Error|null), response?: ibc.core.connection.v1.MsgConnectionOpenInitResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.connection.v1.Msg#connectionOpenTry}.
                     * @param error Error, if any
                     * @param [response] MsgConnectionOpenTryResponse
                     */
                    type ConnectionOpenTryCallback = (error: (Error|null), response?: ibc.core.connection.v1.MsgConnectionOpenTryResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.connection.v1.Msg#connectionOpenAck}.
                     * @param error Error, if any
                     * @param [response] MsgConnectionOpenAckResponse
                     */
                    type ConnectionOpenAckCallback = (error: (Error|null), response?: ibc.core.connection.v1.MsgConnectionOpenAckResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.connection.v1.Msg#connectionOpenConfirm}.
                     * @param error Error, if any
                     * @param [response] MsgConnectionOpenConfirmResponse
                     */
                    type ConnectionOpenConfirmCallback = (error: (Error|null), response?: ibc.core.connection.v1.MsgConnectionOpenConfirmResponse) => void;
                }

                /** Properties of a MsgConnectionOpenInit. */
                interface IMsgConnectionOpenInit {

                    /** MsgConnectionOpenInit client_id */
                    client_id?: (string|null);

                    /** MsgConnectionOpenInit counterparty */
                    counterparty?: (ibc.core.connection.v1.ICounterparty|null);

                    /** MsgConnectionOpenInit version */
                    version?: (ibc.core.connection.v1.IVersion|null);

                    /** MsgConnectionOpenInit delay_period */
                    delay_period?: (Long|null);

                    /** MsgConnectionOpenInit signer */
                    signer?: (string|null);
                }

                /** Represents a MsgConnectionOpenInit. */
                class MsgConnectionOpenInit implements IMsgConnectionOpenInit {

                    /**
                     * Constructs a new MsgConnectionOpenInit.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IMsgConnectionOpenInit);

                    /** MsgConnectionOpenInit client_id. */
                    public client_id: string;

                    /** MsgConnectionOpenInit counterparty. */
                    public counterparty?: (ibc.core.connection.v1.ICounterparty|null);

                    /** MsgConnectionOpenInit version. */
                    public version?: (ibc.core.connection.v1.IVersion|null);

                    /** MsgConnectionOpenInit delay_period. */
                    public delay_period: Long;

                    /** MsgConnectionOpenInit signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgConnectionOpenInit message. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenInit.verify|verify} messages.
                     * @param message MsgConnectionOpenInit message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IMsgConnectionOpenInit, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgConnectionOpenInit message, length delimited. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenInit.verify|verify} messages.
                     * @param message MsgConnectionOpenInit message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IMsgConnectionOpenInit, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgConnectionOpenInit message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgConnectionOpenInit
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.MsgConnectionOpenInit;

                    /**
                     * Decodes a MsgConnectionOpenInit message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgConnectionOpenInit
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.MsgConnectionOpenInit;

                    /**
                     * Verifies a MsgConnectionOpenInit message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgConnectionOpenInit message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgConnectionOpenInit
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.MsgConnectionOpenInit;

                    /**
                     * Creates a plain object from a MsgConnectionOpenInit message. Also converts values to other types if specified.
                     * @param message MsgConnectionOpenInit
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.MsgConnectionOpenInit, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgConnectionOpenInit to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgConnectionOpenInitResponse. */
                interface IMsgConnectionOpenInitResponse {
                }

                /** Represents a MsgConnectionOpenInitResponse. */
                class MsgConnectionOpenInitResponse implements IMsgConnectionOpenInitResponse {

                    /**
                     * Constructs a new MsgConnectionOpenInitResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IMsgConnectionOpenInitResponse);

                    /**
                     * Encodes the specified MsgConnectionOpenInitResponse message. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenInitResponse.verify|verify} messages.
                     * @param message MsgConnectionOpenInitResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IMsgConnectionOpenInitResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgConnectionOpenInitResponse message, length delimited. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenInitResponse.verify|verify} messages.
                     * @param message MsgConnectionOpenInitResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IMsgConnectionOpenInitResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgConnectionOpenInitResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgConnectionOpenInitResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.MsgConnectionOpenInitResponse;

                    /**
                     * Decodes a MsgConnectionOpenInitResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgConnectionOpenInitResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.MsgConnectionOpenInitResponse;

                    /**
                     * Verifies a MsgConnectionOpenInitResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgConnectionOpenInitResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgConnectionOpenInitResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.MsgConnectionOpenInitResponse;

                    /**
                     * Creates a plain object from a MsgConnectionOpenInitResponse message. Also converts values to other types if specified.
                     * @param message MsgConnectionOpenInitResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.MsgConnectionOpenInitResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgConnectionOpenInitResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgConnectionOpenTry. */
                interface IMsgConnectionOpenTry {

                    /** MsgConnectionOpenTry client_id */
                    client_id?: (string|null);

                    /** MsgConnectionOpenTry previous_connection_id */
                    previous_connection_id?: (string|null);

                    /** MsgConnectionOpenTry client_state */
                    client_state?: (google.protobuf.IAny|null);

                    /** MsgConnectionOpenTry counterparty */
                    counterparty?: (ibc.core.connection.v1.ICounterparty|null);

                    /** MsgConnectionOpenTry delay_period */
                    delay_period?: (Long|null);

                    /** MsgConnectionOpenTry counterparty_versions */
                    counterparty_versions?: (ibc.core.connection.v1.IVersion[]|null);

                    /** MsgConnectionOpenTry proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgConnectionOpenTry proof_init */
                    proof_init?: (Uint8Array|null);

                    /** MsgConnectionOpenTry proof_client */
                    proof_client?: (Uint8Array|null);

                    /** MsgConnectionOpenTry proof_consensus */
                    proof_consensus?: (Uint8Array|null);

                    /** MsgConnectionOpenTry consensus_height */
                    consensus_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgConnectionOpenTry signer */
                    signer?: (string|null);

                    /** MsgConnectionOpenTry host_consensus_state_proof */
                    host_consensus_state_proof?: (Uint8Array|null);
                }

                /** Represents a MsgConnectionOpenTry. */
                class MsgConnectionOpenTry implements IMsgConnectionOpenTry {

                    /**
                     * Constructs a new MsgConnectionOpenTry.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IMsgConnectionOpenTry);

                    /** MsgConnectionOpenTry client_id. */
                    public client_id: string;

                    /** MsgConnectionOpenTry previous_connection_id. */
                    public previous_connection_id: string;

                    /** MsgConnectionOpenTry client_state. */
                    public client_state?: (google.protobuf.IAny|null);

                    /** MsgConnectionOpenTry counterparty. */
                    public counterparty?: (ibc.core.connection.v1.ICounterparty|null);

                    /** MsgConnectionOpenTry delay_period. */
                    public delay_period: Long;

                    /** MsgConnectionOpenTry counterparty_versions. */
                    public counterparty_versions: ibc.core.connection.v1.IVersion[];

                    /** MsgConnectionOpenTry proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgConnectionOpenTry proof_init. */
                    public proof_init: Uint8Array;

                    /** MsgConnectionOpenTry proof_client. */
                    public proof_client: Uint8Array;

                    /** MsgConnectionOpenTry proof_consensus. */
                    public proof_consensus: Uint8Array;

                    /** MsgConnectionOpenTry consensus_height. */
                    public consensus_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgConnectionOpenTry signer. */
                    public signer: string;

                    /** MsgConnectionOpenTry host_consensus_state_proof. */
                    public host_consensus_state_proof: Uint8Array;

                    /**
                     * Encodes the specified MsgConnectionOpenTry message. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenTry.verify|verify} messages.
                     * @param message MsgConnectionOpenTry message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IMsgConnectionOpenTry, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgConnectionOpenTry message, length delimited. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenTry.verify|verify} messages.
                     * @param message MsgConnectionOpenTry message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IMsgConnectionOpenTry, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgConnectionOpenTry message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgConnectionOpenTry
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.MsgConnectionOpenTry;

                    /**
                     * Decodes a MsgConnectionOpenTry message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgConnectionOpenTry
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.MsgConnectionOpenTry;

                    /**
                     * Verifies a MsgConnectionOpenTry message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgConnectionOpenTry message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgConnectionOpenTry
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.MsgConnectionOpenTry;

                    /**
                     * Creates a plain object from a MsgConnectionOpenTry message. Also converts values to other types if specified.
                     * @param message MsgConnectionOpenTry
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.MsgConnectionOpenTry, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgConnectionOpenTry to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgConnectionOpenTryResponse. */
                interface IMsgConnectionOpenTryResponse {
                }

                /** Represents a MsgConnectionOpenTryResponse. */
                class MsgConnectionOpenTryResponse implements IMsgConnectionOpenTryResponse {

                    /**
                     * Constructs a new MsgConnectionOpenTryResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IMsgConnectionOpenTryResponse);

                    /**
                     * Encodes the specified MsgConnectionOpenTryResponse message. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenTryResponse.verify|verify} messages.
                     * @param message MsgConnectionOpenTryResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IMsgConnectionOpenTryResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgConnectionOpenTryResponse message, length delimited. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenTryResponse.verify|verify} messages.
                     * @param message MsgConnectionOpenTryResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IMsgConnectionOpenTryResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgConnectionOpenTryResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgConnectionOpenTryResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.MsgConnectionOpenTryResponse;

                    /**
                     * Decodes a MsgConnectionOpenTryResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgConnectionOpenTryResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.MsgConnectionOpenTryResponse;

                    /**
                     * Verifies a MsgConnectionOpenTryResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgConnectionOpenTryResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgConnectionOpenTryResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.MsgConnectionOpenTryResponse;

                    /**
                     * Creates a plain object from a MsgConnectionOpenTryResponse message. Also converts values to other types if specified.
                     * @param message MsgConnectionOpenTryResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.MsgConnectionOpenTryResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgConnectionOpenTryResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgConnectionOpenAck. */
                interface IMsgConnectionOpenAck {

                    /** MsgConnectionOpenAck connection_id */
                    connection_id?: (string|null);

                    /** MsgConnectionOpenAck counterparty_connection_id */
                    counterparty_connection_id?: (string|null);

                    /** MsgConnectionOpenAck version */
                    version?: (ibc.core.connection.v1.IVersion|null);

                    /** MsgConnectionOpenAck client_state */
                    client_state?: (google.protobuf.IAny|null);

                    /** MsgConnectionOpenAck proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgConnectionOpenAck proof_try */
                    proof_try?: (Uint8Array|null);

                    /** MsgConnectionOpenAck proof_client */
                    proof_client?: (Uint8Array|null);

                    /** MsgConnectionOpenAck proof_consensus */
                    proof_consensus?: (Uint8Array|null);

                    /** MsgConnectionOpenAck consensus_height */
                    consensus_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgConnectionOpenAck signer */
                    signer?: (string|null);

                    /** MsgConnectionOpenAck host_consensus_state_proof */
                    host_consensus_state_proof?: (Uint8Array|null);
                }

                /** Represents a MsgConnectionOpenAck. */
                class MsgConnectionOpenAck implements IMsgConnectionOpenAck {

                    /**
                     * Constructs a new MsgConnectionOpenAck.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IMsgConnectionOpenAck);

                    /** MsgConnectionOpenAck connection_id. */
                    public connection_id: string;

                    /** MsgConnectionOpenAck counterparty_connection_id. */
                    public counterparty_connection_id: string;

                    /** MsgConnectionOpenAck version. */
                    public version?: (ibc.core.connection.v1.IVersion|null);

                    /** MsgConnectionOpenAck client_state. */
                    public client_state?: (google.protobuf.IAny|null);

                    /** MsgConnectionOpenAck proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgConnectionOpenAck proof_try. */
                    public proof_try: Uint8Array;

                    /** MsgConnectionOpenAck proof_client. */
                    public proof_client: Uint8Array;

                    /** MsgConnectionOpenAck proof_consensus. */
                    public proof_consensus: Uint8Array;

                    /** MsgConnectionOpenAck consensus_height. */
                    public consensus_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgConnectionOpenAck signer. */
                    public signer: string;

                    /** MsgConnectionOpenAck host_consensus_state_proof. */
                    public host_consensus_state_proof: Uint8Array;

                    /**
                     * Encodes the specified MsgConnectionOpenAck message. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenAck.verify|verify} messages.
                     * @param message MsgConnectionOpenAck message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IMsgConnectionOpenAck, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgConnectionOpenAck message, length delimited. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenAck.verify|verify} messages.
                     * @param message MsgConnectionOpenAck message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IMsgConnectionOpenAck, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgConnectionOpenAck message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgConnectionOpenAck
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.MsgConnectionOpenAck;

                    /**
                     * Decodes a MsgConnectionOpenAck message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgConnectionOpenAck
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.MsgConnectionOpenAck;

                    /**
                     * Verifies a MsgConnectionOpenAck message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgConnectionOpenAck message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgConnectionOpenAck
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.MsgConnectionOpenAck;

                    /**
                     * Creates a plain object from a MsgConnectionOpenAck message. Also converts values to other types if specified.
                     * @param message MsgConnectionOpenAck
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.MsgConnectionOpenAck, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgConnectionOpenAck to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgConnectionOpenAckResponse. */
                interface IMsgConnectionOpenAckResponse {
                }

                /** Represents a MsgConnectionOpenAckResponse. */
                class MsgConnectionOpenAckResponse implements IMsgConnectionOpenAckResponse {

                    /**
                     * Constructs a new MsgConnectionOpenAckResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IMsgConnectionOpenAckResponse);

                    /**
                     * Encodes the specified MsgConnectionOpenAckResponse message. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenAckResponse.verify|verify} messages.
                     * @param message MsgConnectionOpenAckResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IMsgConnectionOpenAckResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgConnectionOpenAckResponse message, length delimited. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenAckResponse.verify|verify} messages.
                     * @param message MsgConnectionOpenAckResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IMsgConnectionOpenAckResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgConnectionOpenAckResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgConnectionOpenAckResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.MsgConnectionOpenAckResponse;

                    /**
                     * Decodes a MsgConnectionOpenAckResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgConnectionOpenAckResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.MsgConnectionOpenAckResponse;

                    /**
                     * Verifies a MsgConnectionOpenAckResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgConnectionOpenAckResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgConnectionOpenAckResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.MsgConnectionOpenAckResponse;

                    /**
                     * Creates a plain object from a MsgConnectionOpenAckResponse message. Also converts values to other types if specified.
                     * @param message MsgConnectionOpenAckResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.MsgConnectionOpenAckResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgConnectionOpenAckResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgConnectionOpenConfirm. */
                interface IMsgConnectionOpenConfirm {

                    /** MsgConnectionOpenConfirm connection_id */
                    connection_id?: (string|null);

                    /** MsgConnectionOpenConfirm proof_ack */
                    proof_ack?: (Uint8Array|null);

                    /** MsgConnectionOpenConfirm proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgConnectionOpenConfirm signer */
                    signer?: (string|null);
                }

                /** Represents a MsgConnectionOpenConfirm. */
                class MsgConnectionOpenConfirm implements IMsgConnectionOpenConfirm {

                    /**
                     * Constructs a new MsgConnectionOpenConfirm.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IMsgConnectionOpenConfirm);

                    /** MsgConnectionOpenConfirm connection_id. */
                    public connection_id: string;

                    /** MsgConnectionOpenConfirm proof_ack. */
                    public proof_ack: Uint8Array;

                    /** MsgConnectionOpenConfirm proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /** MsgConnectionOpenConfirm signer. */
                    public signer: string;

                    /**
                     * Encodes the specified MsgConnectionOpenConfirm message. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenConfirm.verify|verify} messages.
                     * @param message MsgConnectionOpenConfirm message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IMsgConnectionOpenConfirm, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgConnectionOpenConfirm message, length delimited. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenConfirm.verify|verify} messages.
                     * @param message MsgConnectionOpenConfirm message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IMsgConnectionOpenConfirm, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgConnectionOpenConfirm message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgConnectionOpenConfirm
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.MsgConnectionOpenConfirm;

                    /**
                     * Decodes a MsgConnectionOpenConfirm message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgConnectionOpenConfirm
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.MsgConnectionOpenConfirm;

                    /**
                     * Verifies a MsgConnectionOpenConfirm message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgConnectionOpenConfirm message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgConnectionOpenConfirm
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.MsgConnectionOpenConfirm;

                    /**
                     * Creates a plain object from a MsgConnectionOpenConfirm message. Also converts values to other types if specified.
                     * @param message MsgConnectionOpenConfirm
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.MsgConnectionOpenConfirm, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgConnectionOpenConfirm to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a MsgConnectionOpenConfirmResponse. */
                interface IMsgConnectionOpenConfirmResponse {
                }

                /** Represents a MsgConnectionOpenConfirmResponse. */
                class MsgConnectionOpenConfirmResponse implements IMsgConnectionOpenConfirmResponse {

                    /**
                     * Constructs a new MsgConnectionOpenConfirmResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IMsgConnectionOpenConfirmResponse);

                    /**
                     * Encodes the specified MsgConnectionOpenConfirmResponse message. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenConfirmResponse.verify|verify} messages.
                     * @param message MsgConnectionOpenConfirmResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IMsgConnectionOpenConfirmResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified MsgConnectionOpenConfirmResponse message, length delimited. Does not implicitly {@link ibc.core.connection.v1.MsgConnectionOpenConfirmResponse.verify|verify} messages.
                     * @param message MsgConnectionOpenConfirmResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IMsgConnectionOpenConfirmResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a MsgConnectionOpenConfirmResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns MsgConnectionOpenConfirmResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.MsgConnectionOpenConfirmResponse;

                    /**
                     * Decodes a MsgConnectionOpenConfirmResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns MsgConnectionOpenConfirmResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.MsgConnectionOpenConfirmResponse;

                    /**
                     * Verifies a MsgConnectionOpenConfirmResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a MsgConnectionOpenConfirmResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns MsgConnectionOpenConfirmResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.MsgConnectionOpenConfirmResponse;

                    /**
                     * Creates a plain object from a MsgConnectionOpenConfirmResponse message. Also converts values to other types if specified.
                     * @param message MsgConnectionOpenConfirmResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.MsgConnectionOpenConfirmResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this MsgConnectionOpenConfirmResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a ConnectionEnd. */
                interface IConnectionEnd {

                    /** ConnectionEnd client_id */
                    client_id?: (string|null);

                    /** ConnectionEnd versions */
                    versions?: (ibc.core.connection.v1.IVersion[]|null);

                    /** ConnectionEnd state */
                    state?: (ibc.core.connection.v1.State|null);

                    /** ConnectionEnd counterparty */
                    counterparty?: (ibc.core.connection.v1.ICounterparty|null);

                    /** ConnectionEnd delay_period */
                    delay_period?: (Long|null);
                }

                /** Represents a ConnectionEnd. */
                class ConnectionEnd implements IConnectionEnd {

                    /**
                     * Constructs a new ConnectionEnd.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IConnectionEnd);

                    /** ConnectionEnd client_id. */
                    public client_id: string;

                    /** ConnectionEnd versions. */
                    public versions: ibc.core.connection.v1.IVersion[];

                    /** ConnectionEnd state. */
                    public state: ibc.core.connection.v1.State;

                    /** ConnectionEnd counterparty. */
                    public counterparty?: (ibc.core.connection.v1.ICounterparty|null);

                    /** ConnectionEnd delay_period. */
                    public delay_period: Long;

                    /**
                     * Encodes the specified ConnectionEnd message. Does not implicitly {@link ibc.core.connection.v1.ConnectionEnd.verify|verify} messages.
                     * @param message ConnectionEnd message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IConnectionEnd, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ConnectionEnd message, length delimited. Does not implicitly {@link ibc.core.connection.v1.ConnectionEnd.verify|verify} messages.
                     * @param message ConnectionEnd message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IConnectionEnd, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ConnectionEnd message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ConnectionEnd
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.ConnectionEnd;

                    /**
                     * Decodes a ConnectionEnd message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ConnectionEnd
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.ConnectionEnd;

                    /**
                     * Verifies a ConnectionEnd message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ConnectionEnd message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ConnectionEnd
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.ConnectionEnd;

                    /**
                     * Creates a plain object from a ConnectionEnd message. Also converts values to other types if specified.
                     * @param message ConnectionEnd
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.ConnectionEnd, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ConnectionEnd to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of an IdentifiedConnection. */
                interface IIdentifiedConnection {

                    /** IdentifiedConnection id */
                    id?: (string|null);

                    /** IdentifiedConnection client_id */
                    client_id?: (string|null);

                    /** IdentifiedConnection versions */
                    versions?: (ibc.core.connection.v1.IVersion[]|null);

                    /** IdentifiedConnection state */
                    state?: (ibc.core.connection.v1.State|null);

                    /** IdentifiedConnection counterparty */
                    counterparty?: (ibc.core.connection.v1.ICounterparty|null);

                    /** IdentifiedConnection delay_period */
                    delay_period?: (Long|null);
                }

                /** Represents an IdentifiedConnection. */
                class IdentifiedConnection implements IIdentifiedConnection {

                    /**
                     * Constructs a new IdentifiedConnection.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IIdentifiedConnection);

                    /** IdentifiedConnection id. */
                    public id: string;

                    /** IdentifiedConnection client_id. */
                    public client_id: string;

                    /** IdentifiedConnection versions. */
                    public versions: ibc.core.connection.v1.IVersion[];

                    /** IdentifiedConnection state. */
                    public state: ibc.core.connection.v1.State;

                    /** IdentifiedConnection counterparty. */
                    public counterparty?: (ibc.core.connection.v1.ICounterparty|null);

                    /** IdentifiedConnection delay_period. */
                    public delay_period: Long;

                    /**
                     * Encodes the specified IdentifiedConnection message. Does not implicitly {@link ibc.core.connection.v1.IdentifiedConnection.verify|verify} messages.
                     * @param message IdentifiedConnection message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IIdentifiedConnection, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified IdentifiedConnection message, length delimited. Does not implicitly {@link ibc.core.connection.v1.IdentifiedConnection.verify|verify} messages.
                     * @param message IdentifiedConnection message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IIdentifiedConnection, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes an IdentifiedConnection message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns IdentifiedConnection
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.IdentifiedConnection;

                    /**
                     * Decodes an IdentifiedConnection message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns IdentifiedConnection
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.IdentifiedConnection;

                    /**
                     * Verifies an IdentifiedConnection message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates an IdentifiedConnection message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns IdentifiedConnection
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.IdentifiedConnection;

                    /**
                     * Creates a plain object from an IdentifiedConnection message. Also converts values to other types if specified.
                     * @param message IdentifiedConnection
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.IdentifiedConnection, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this IdentifiedConnection to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** State enum. */
                enum State {
                    STATE_UNINITIALIZED_UNSPECIFIED = 0,
                    STATE_INIT = 1,
                    STATE_TRYOPEN = 2,
                    STATE_OPEN = 3
                }

                /** Properties of a Counterparty. */
                interface ICounterparty {

                    /** Counterparty client_id */
                    client_id?: (string|null);

                    /** Counterparty connection_id */
                    connection_id?: (string|null);

                    /** Counterparty prefix */
                    prefix?: (ibc.core.commitment.v1.IMerklePrefix|null);
                }

                /** Represents a Counterparty. */
                class Counterparty implements ICounterparty {

                    /**
                     * Constructs a new Counterparty.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.ICounterparty);

                    /** Counterparty client_id. */
                    public client_id: string;

                    /** Counterparty connection_id. */
                    public connection_id: string;

                    /** Counterparty prefix. */
                    public prefix?: (ibc.core.commitment.v1.IMerklePrefix|null);

                    /**
                     * Encodes the specified Counterparty message. Does not implicitly {@link ibc.core.connection.v1.Counterparty.verify|verify} messages.
                     * @param message Counterparty message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.ICounterparty, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Counterparty message, length delimited. Does not implicitly {@link ibc.core.connection.v1.Counterparty.verify|verify} messages.
                     * @param message Counterparty message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.ICounterparty, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Counterparty message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Counterparty
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.Counterparty;

                    /**
                     * Decodes a Counterparty message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Counterparty
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.Counterparty;

                    /**
                     * Verifies a Counterparty message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Counterparty message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Counterparty
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.Counterparty;

                    /**
                     * Creates a plain object from a Counterparty message. Also converts values to other types if specified.
                     * @param message Counterparty
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.Counterparty, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Counterparty to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a ClientPaths. */
                interface IClientPaths {

                    /** ClientPaths paths */
                    paths?: (string[]|null);
                }

                /** Represents a ClientPaths. */
                class ClientPaths implements IClientPaths {

                    /**
                     * Constructs a new ClientPaths.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IClientPaths);

                    /** ClientPaths paths. */
                    public paths: string[];

                    /**
                     * Encodes the specified ClientPaths message. Does not implicitly {@link ibc.core.connection.v1.ClientPaths.verify|verify} messages.
                     * @param message ClientPaths message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IClientPaths, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ClientPaths message, length delimited. Does not implicitly {@link ibc.core.connection.v1.ClientPaths.verify|verify} messages.
                     * @param message ClientPaths message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IClientPaths, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ClientPaths message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ClientPaths
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.ClientPaths;

                    /**
                     * Decodes a ClientPaths message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ClientPaths
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.ClientPaths;

                    /**
                     * Verifies a ClientPaths message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ClientPaths message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ClientPaths
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.ClientPaths;

                    /**
                     * Creates a plain object from a ClientPaths message. Also converts values to other types if specified.
                     * @param message ClientPaths
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.ClientPaths, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ClientPaths to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a ConnectionPaths. */
                interface IConnectionPaths {

                    /** ConnectionPaths client_id */
                    client_id?: (string|null);

                    /** ConnectionPaths paths */
                    paths?: (string[]|null);
                }

                /** Represents a ConnectionPaths. */
                class ConnectionPaths implements IConnectionPaths {

                    /**
                     * Constructs a new ConnectionPaths.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IConnectionPaths);

                    /** ConnectionPaths client_id. */
                    public client_id: string;

                    /** ConnectionPaths paths. */
                    public paths: string[];

                    /**
                     * Encodes the specified ConnectionPaths message. Does not implicitly {@link ibc.core.connection.v1.ConnectionPaths.verify|verify} messages.
                     * @param message ConnectionPaths message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IConnectionPaths, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ConnectionPaths message, length delimited. Does not implicitly {@link ibc.core.connection.v1.ConnectionPaths.verify|verify} messages.
                     * @param message ConnectionPaths message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IConnectionPaths, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ConnectionPaths message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ConnectionPaths
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.ConnectionPaths;

                    /**
                     * Decodes a ConnectionPaths message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ConnectionPaths
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.ConnectionPaths;

                    /**
                     * Verifies a ConnectionPaths message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ConnectionPaths message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ConnectionPaths
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.ConnectionPaths;

                    /**
                     * Creates a plain object from a ConnectionPaths message. Also converts values to other types if specified.
                     * @param message ConnectionPaths
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.ConnectionPaths, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ConnectionPaths to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Version. */
                interface IVersion {

                    /** Version identifier */
                    identifier?: (string|null);

                    /** Version features */
                    features?: (string[]|null);
                }

                /** Represents a Version. */
                class Version implements IVersion {

                    /**
                     * Constructs a new Version.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IVersion);

                    /** Version identifier. */
                    public identifier: string;

                    /** Version features. */
                    public features: string[];

                    /**
                     * Encodes the specified Version message. Does not implicitly {@link ibc.core.connection.v1.Version.verify|verify} messages.
                     * @param message Version message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IVersion, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Version message, length delimited. Does not implicitly {@link ibc.core.connection.v1.Version.verify|verify} messages.
                     * @param message Version message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IVersion, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Version message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Version
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.Version;

                    /**
                     * Decodes a Version message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Version
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.Version;

                    /**
                     * Verifies a Version message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Version message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Version
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.Version;

                    /**
                     * Creates a plain object from a Version message. Also converts values to other types if specified.
                     * @param message Version
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.Version, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Version to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Params. */
                interface IParams {

                    /** Params max_expected_time_per_block */
                    max_expected_time_per_block?: (Long|null);
                }

                /** Represents a Params. */
                class Params implements IParams {

                    /**
                     * Constructs a new Params.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IParams);

                    /** Params max_expected_time_per_block. */
                    public max_expected_time_per_block: Long;

                    /**
                     * Encodes the specified Params message. Does not implicitly {@link ibc.core.connection.v1.Params.verify|verify} messages.
                     * @param message Params message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Params message, length delimited. Does not implicitly {@link ibc.core.connection.v1.Params.verify|verify} messages.
                     * @param message Params message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IParams, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Params message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Params
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.Params;

                    /**
                     * Decodes a Params message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Params
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.Params;

                    /**
                     * Verifies a Params message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Params message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Params
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.Params;

                    /**
                     * Creates a plain object from a Params message. Also converts values to other types if specified.
                     * @param message Params
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.Params, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Params to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Represents a Query */
                class Query extends $protobuf.rpc.Service {

                    /**
                     * Constructs a new Query service.
                     * @param rpcImpl RPC implementation
                     * @param [requestDelimited=false] Whether requests are length-delimited
                     * @param [responseDelimited=false] Whether responses are length-delimited
                     */
                    constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                    /**
                     * Calls Connection.
                     * @param request QueryConnectionRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryConnectionResponse
                     */
                    public connection(request: ibc.core.connection.v1.IQueryConnectionRequest, callback: ibc.core.connection.v1.Query.ConnectionCallback): void;

                    /**
                     * Calls Connection.
                     * @param request QueryConnectionRequest message or plain object
                     * @returns Promise
                     */
                    public connection(request: ibc.core.connection.v1.IQueryConnectionRequest): Promise<ibc.core.connection.v1.QueryConnectionResponse>;

                    /**
                     * Calls Connections.
                     * @param request QueryConnectionsRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryConnectionsResponse
                     */
                    public connections(request: ibc.core.connection.v1.IQueryConnectionsRequest, callback: ibc.core.connection.v1.Query.ConnectionsCallback): void;

                    /**
                     * Calls Connections.
                     * @param request QueryConnectionsRequest message or plain object
                     * @returns Promise
                     */
                    public connections(request: ibc.core.connection.v1.IQueryConnectionsRequest): Promise<ibc.core.connection.v1.QueryConnectionsResponse>;

                    /**
                     * Calls ClientConnections.
                     * @param request QueryClientConnectionsRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryClientConnectionsResponse
                     */
                    public clientConnections(request: ibc.core.connection.v1.IQueryClientConnectionsRequest, callback: ibc.core.connection.v1.Query.ClientConnectionsCallback): void;

                    /**
                     * Calls ClientConnections.
                     * @param request QueryClientConnectionsRequest message or plain object
                     * @returns Promise
                     */
                    public clientConnections(request: ibc.core.connection.v1.IQueryClientConnectionsRequest): Promise<ibc.core.connection.v1.QueryClientConnectionsResponse>;

                    /**
                     * Calls ConnectionClientState.
                     * @param request QueryConnectionClientStateRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryConnectionClientStateResponse
                     */
                    public connectionClientState(request: ibc.core.connection.v1.IQueryConnectionClientStateRequest, callback: ibc.core.connection.v1.Query.ConnectionClientStateCallback): void;

                    /**
                     * Calls ConnectionClientState.
                     * @param request QueryConnectionClientStateRequest message or plain object
                     * @returns Promise
                     */
                    public connectionClientState(request: ibc.core.connection.v1.IQueryConnectionClientStateRequest): Promise<ibc.core.connection.v1.QueryConnectionClientStateResponse>;

                    /**
                     * Calls ConnectionConsensusState.
                     * @param request QueryConnectionConsensusStateRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryConnectionConsensusStateResponse
                     */
                    public connectionConsensusState(request: ibc.core.connection.v1.IQueryConnectionConsensusStateRequest, callback: ibc.core.connection.v1.Query.ConnectionConsensusStateCallback): void;

                    /**
                     * Calls ConnectionConsensusState.
                     * @param request QueryConnectionConsensusStateRequest message or plain object
                     * @returns Promise
                     */
                    public connectionConsensusState(request: ibc.core.connection.v1.IQueryConnectionConsensusStateRequest): Promise<ibc.core.connection.v1.QueryConnectionConsensusStateResponse>;

                    /**
                     * Calls ConnectionParams.
                     * @param request QueryConnectionParamsRequest message or plain object
                     * @param callback Node-style callback called with the error, if any, and QueryConnectionParamsResponse
                     */
                    public connectionParams(request: ibc.core.connection.v1.IQueryConnectionParamsRequest, callback: ibc.core.connection.v1.Query.ConnectionParamsCallback): void;

                    /**
                     * Calls ConnectionParams.
                     * @param request QueryConnectionParamsRequest message or plain object
                     * @returns Promise
                     */
                    public connectionParams(request: ibc.core.connection.v1.IQueryConnectionParamsRequest): Promise<ibc.core.connection.v1.QueryConnectionParamsResponse>;
                }

                namespace Query {

                    /**
                     * Callback as used by {@link ibc.core.connection.v1.Query#connection}.
                     * @param error Error, if any
                     * @param [response] QueryConnectionResponse
                     */
                    type ConnectionCallback = (error: (Error|null), response?: ibc.core.connection.v1.QueryConnectionResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.connection.v1.Query#connections}.
                     * @param error Error, if any
                     * @param [response] QueryConnectionsResponse
                     */
                    type ConnectionsCallback = (error: (Error|null), response?: ibc.core.connection.v1.QueryConnectionsResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.connection.v1.Query#clientConnections}.
                     * @param error Error, if any
                     * @param [response] QueryClientConnectionsResponse
                     */
                    type ClientConnectionsCallback = (error: (Error|null), response?: ibc.core.connection.v1.QueryClientConnectionsResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.connection.v1.Query#connectionClientState}.
                     * @param error Error, if any
                     * @param [response] QueryConnectionClientStateResponse
                     */
                    type ConnectionClientStateCallback = (error: (Error|null), response?: ibc.core.connection.v1.QueryConnectionClientStateResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.connection.v1.Query#connectionConsensusState}.
                     * @param error Error, if any
                     * @param [response] QueryConnectionConsensusStateResponse
                     */
                    type ConnectionConsensusStateCallback = (error: (Error|null), response?: ibc.core.connection.v1.QueryConnectionConsensusStateResponse) => void;

                    /**
                     * Callback as used by {@link ibc.core.connection.v1.Query#connectionParams}.
                     * @param error Error, if any
                     * @param [response] QueryConnectionParamsResponse
                     */
                    type ConnectionParamsCallback = (error: (Error|null), response?: ibc.core.connection.v1.QueryConnectionParamsResponse) => void;
                }

                /** Properties of a QueryConnectionRequest. */
                interface IQueryConnectionRequest {

                    /** QueryConnectionRequest connection_id */
                    connection_id?: (string|null);
                }

                /** Represents a QueryConnectionRequest. */
                class QueryConnectionRequest implements IQueryConnectionRequest {

                    /**
                     * Constructs a new QueryConnectionRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IQueryConnectionRequest);

                    /** QueryConnectionRequest connection_id. */
                    public connection_id: string;

                    /**
                     * Encodes the specified QueryConnectionRequest message. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionRequest.verify|verify} messages.
                     * @param message QueryConnectionRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IQueryConnectionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryConnectionRequest message, length delimited. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionRequest.verify|verify} messages.
                     * @param message QueryConnectionRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IQueryConnectionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConnectionRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryConnectionRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.QueryConnectionRequest;

                    /**
                     * Decodes a QueryConnectionRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryConnectionRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.QueryConnectionRequest;

                    /**
                     * Verifies a QueryConnectionRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryConnectionRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryConnectionRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.QueryConnectionRequest;

                    /**
                     * Creates a plain object from a QueryConnectionRequest message. Also converts values to other types if specified.
                     * @param message QueryConnectionRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.QueryConnectionRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryConnectionRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryConnectionResponse. */
                interface IQueryConnectionResponse {

                    /** QueryConnectionResponse connection */
                    connection?: (ibc.core.connection.v1.IConnectionEnd|null);

                    /** QueryConnectionResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryConnectionResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryConnectionResponse. */
                class QueryConnectionResponse implements IQueryConnectionResponse {

                    /**
                     * Constructs a new QueryConnectionResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IQueryConnectionResponse);

                    /** QueryConnectionResponse connection. */
                    public connection?: (ibc.core.connection.v1.IConnectionEnd|null);

                    /** QueryConnectionResponse proof. */
                    public proof: Uint8Array;

                    /** QueryConnectionResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryConnectionResponse message. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionResponse.verify|verify} messages.
                     * @param message QueryConnectionResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IQueryConnectionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryConnectionResponse message, length delimited. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionResponse.verify|verify} messages.
                     * @param message QueryConnectionResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IQueryConnectionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConnectionResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryConnectionResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.QueryConnectionResponse;

                    /**
                     * Decodes a QueryConnectionResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryConnectionResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.QueryConnectionResponse;

                    /**
                     * Verifies a QueryConnectionResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryConnectionResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryConnectionResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.QueryConnectionResponse;

                    /**
                     * Creates a plain object from a QueryConnectionResponse message. Also converts values to other types if specified.
                     * @param message QueryConnectionResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.QueryConnectionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryConnectionResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryConnectionsRequest. */
                interface IQueryConnectionsRequest {

                    /** QueryConnectionsRequest pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);
                }

                /** Represents a QueryConnectionsRequest. */
                class QueryConnectionsRequest implements IQueryConnectionsRequest {

                    /**
                     * Constructs a new QueryConnectionsRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IQueryConnectionsRequest);

                    /** QueryConnectionsRequest pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageRequest|null);

                    /**
                     * Encodes the specified QueryConnectionsRequest message. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionsRequest.verify|verify} messages.
                     * @param message QueryConnectionsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IQueryConnectionsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryConnectionsRequest message, length delimited. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionsRequest.verify|verify} messages.
                     * @param message QueryConnectionsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IQueryConnectionsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConnectionsRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryConnectionsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.QueryConnectionsRequest;

                    /**
                     * Decodes a QueryConnectionsRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryConnectionsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.QueryConnectionsRequest;

                    /**
                     * Verifies a QueryConnectionsRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryConnectionsRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryConnectionsRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.QueryConnectionsRequest;

                    /**
                     * Creates a plain object from a QueryConnectionsRequest message. Also converts values to other types if specified.
                     * @param message QueryConnectionsRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.QueryConnectionsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryConnectionsRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryConnectionsResponse. */
                interface IQueryConnectionsResponse {

                    /** QueryConnectionsResponse connections */
                    connections?: (ibc.core.connection.v1.IIdentifiedConnection[]|null);

                    /** QueryConnectionsResponse pagination */
                    pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /** QueryConnectionsResponse height */
                    height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryConnectionsResponse. */
                class QueryConnectionsResponse implements IQueryConnectionsResponse {

                    /**
                     * Constructs a new QueryConnectionsResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IQueryConnectionsResponse);

                    /** QueryConnectionsResponse connections. */
                    public connections: ibc.core.connection.v1.IIdentifiedConnection[];

                    /** QueryConnectionsResponse pagination. */
                    public pagination?: (cosmos.base.query.v1beta1.IPageResponse|null);

                    /** QueryConnectionsResponse height. */
                    public height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryConnectionsResponse message. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionsResponse.verify|verify} messages.
                     * @param message QueryConnectionsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IQueryConnectionsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryConnectionsResponse message, length delimited. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionsResponse.verify|verify} messages.
                     * @param message QueryConnectionsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IQueryConnectionsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConnectionsResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryConnectionsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.QueryConnectionsResponse;

                    /**
                     * Decodes a QueryConnectionsResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryConnectionsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.QueryConnectionsResponse;

                    /**
                     * Verifies a QueryConnectionsResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryConnectionsResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryConnectionsResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.QueryConnectionsResponse;

                    /**
                     * Creates a plain object from a QueryConnectionsResponse message. Also converts values to other types if specified.
                     * @param message QueryConnectionsResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.QueryConnectionsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryConnectionsResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryClientConnectionsRequest. */
                interface IQueryClientConnectionsRequest {

                    /** QueryClientConnectionsRequest client_id */
                    client_id?: (string|null);
                }

                /** Represents a QueryClientConnectionsRequest. */
                class QueryClientConnectionsRequest implements IQueryClientConnectionsRequest {

                    /**
                     * Constructs a new QueryClientConnectionsRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IQueryClientConnectionsRequest);

                    /** QueryClientConnectionsRequest client_id. */
                    public client_id: string;

                    /**
                     * Encodes the specified QueryClientConnectionsRequest message. Does not implicitly {@link ibc.core.connection.v1.QueryClientConnectionsRequest.verify|verify} messages.
                     * @param message QueryClientConnectionsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IQueryClientConnectionsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryClientConnectionsRequest message, length delimited. Does not implicitly {@link ibc.core.connection.v1.QueryClientConnectionsRequest.verify|verify} messages.
                     * @param message QueryClientConnectionsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IQueryClientConnectionsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryClientConnectionsRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryClientConnectionsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.QueryClientConnectionsRequest;

                    /**
                     * Decodes a QueryClientConnectionsRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryClientConnectionsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.QueryClientConnectionsRequest;

                    /**
                     * Verifies a QueryClientConnectionsRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryClientConnectionsRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryClientConnectionsRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.QueryClientConnectionsRequest;

                    /**
                     * Creates a plain object from a QueryClientConnectionsRequest message. Also converts values to other types if specified.
                     * @param message QueryClientConnectionsRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.QueryClientConnectionsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryClientConnectionsRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryClientConnectionsResponse. */
                interface IQueryClientConnectionsResponse {

                    /** QueryClientConnectionsResponse connection_paths */
                    connection_paths?: (string[]|null);

                    /** QueryClientConnectionsResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryClientConnectionsResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryClientConnectionsResponse. */
                class QueryClientConnectionsResponse implements IQueryClientConnectionsResponse {

                    /**
                     * Constructs a new QueryClientConnectionsResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IQueryClientConnectionsResponse);

                    /** QueryClientConnectionsResponse connection_paths. */
                    public connection_paths: string[];

                    /** QueryClientConnectionsResponse proof. */
                    public proof: Uint8Array;

                    /** QueryClientConnectionsResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryClientConnectionsResponse message. Does not implicitly {@link ibc.core.connection.v1.QueryClientConnectionsResponse.verify|verify} messages.
                     * @param message QueryClientConnectionsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IQueryClientConnectionsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryClientConnectionsResponse message, length delimited. Does not implicitly {@link ibc.core.connection.v1.QueryClientConnectionsResponse.verify|verify} messages.
                     * @param message QueryClientConnectionsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IQueryClientConnectionsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryClientConnectionsResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryClientConnectionsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.QueryClientConnectionsResponse;

                    /**
                     * Decodes a QueryClientConnectionsResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryClientConnectionsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.QueryClientConnectionsResponse;

                    /**
                     * Verifies a QueryClientConnectionsResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryClientConnectionsResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryClientConnectionsResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.QueryClientConnectionsResponse;

                    /**
                     * Creates a plain object from a QueryClientConnectionsResponse message. Also converts values to other types if specified.
                     * @param message QueryClientConnectionsResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.QueryClientConnectionsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryClientConnectionsResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryConnectionClientStateRequest. */
                interface IQueryConnectionClientStateRequest {

                    /** QueryConnectionClientStateRequest connection_id */
                    connection_id?: (string|null);
                }

                /** Represents a QueryConnectionClientStateRequest. */
                class QueryConnectionClientStateRequest implements IQueryConnectionClientStateRequest {

                    /**
                     * Constructs a new QueryConnectionClientStateRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IQueryConnectionClientStateRequest);

                    /** QueryConnectionClientStateRequest connection_id. */
                    public connection_id: string;

                    /**
                     * Encodes the specified QueryConnectionClientStateRequest message. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionClientStateRequest.verify|verify} messages.
                     * @param message QueryConnectionClientStateRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IQueryConnectionClientStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryConnectionClientStateRequest message, length delimited. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionClientStateRequest.verify|verify} messages.
                     * @param message QueryConnectionClientStateRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IQueryConnectionClientStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConnectionClientStateRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryConnectionClientStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.QueryConnectionClientStateRequest;

                    /**
                     * Decodes a QueryConnectionClientStateRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryConnectionClientStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.QueryConnectionClientStateRequest;

                    /**
                     * Verifies a QueryConnectionClientStateRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryConnectionClientStateRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryConnectionClientStateRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.QueryConnectionClientStateRequest;

                    /**
                     * Creates a plain object from a QueryConnectionClientStateRequest message. Also converts values to other types if specified.
                     * @param message QueryConnectionClientStateRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.QueryConnectionClientStateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryConnectionClientStateRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryConnectionClientStateResponse. */
                interface IQueryConnectionClientStateResponse {

                    /** QueryConnectionClientStateResponse identified_client_state */
                    identified_client_state?: (ibc.core.client.v1.IIdentifiedClientState|null);

                    /** QueryConnectionClientStateResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryConnectionClientStateResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryConnectionClientStateResponse. */
                class QueryConnectionClientStateResponse implements IQueryConnectionClientStateResponse {

                    /**
                     * Constructs a new QueryConnectionClientStateResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IQueryConnectionClientStateResponse);

                    /** QueryConnectionClientStateResponse identified_client_state. */
                    public identified_client_state?: (ibc.core.client.v1.IIdentifiedClientState|null);

                    /** QueryConnectionClientStateResponse proof. */
                    public proof: Uint8Array;

                    /** QueryConnectionClientStateResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryConnectionClientStateResponse message. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionClientStateResponse.verify|verify} messages.
                     * @param message QueryConnectionClientStateResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IQueryConnectionClientStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryConnectionClientStateResponse message, length delimited. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionClientStateResponse.verify|verify} messages.
                     * @param message QueryConnectionClientStateResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IQueryConnectionClientStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConnectionClientStateResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryConnectionClientStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.QueryConnectionClientStateResponse;

                    /**
                     * Decodes a QueryConnectionClientStateResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryConnectionClientStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.QueryConnectionClientStateResponse;

                    /**
                     * Verifies a QueryConnectionClientStateResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryConnectionClientStateResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryConnectionClientStateResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.QueryConnectionClientStateResponse;

                    /**
                     * Creates a plain object from a QueryConnectionClientStateResponse message. Also converts values to other types if specified.
                     * @param message QueryConnectionClientStateResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.QueryConnectionClientStateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryConnectionClientStateResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryConnectionConsensusStateRequest. */
                interface IQueryConnectionConsensusStateRequest {

                    /** QueryConnectionConsensusStateRequest connection_id */
                    connection_id?: (string|null);

                    /** QueryConnectionConsensusStateRequest revision_number */
                    revision_number?: (Long|null);

                    /** QueryConnectionConsensusStateRequest revision_height */
                    revision_height?: (Long|null);
                }

                /** Represents a QueryConnectionConsensusStateRequest. */
                class QueryConnectionConsensusStateRequest implements IQueryConnectionConsensusStateRequest {

                    /**
                     * Constructs a new QueryConnectionConsensusStateRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IQueryConnectionConsensusStateRequest);

                    /** QueryConnectionConsensusStateRequest connection_id. */
                    public connection_id: string;

                    /** QueryConnectionConsensusStateRequest revision_number. */
                    public revision_number: Long;

                    /** QueryConnectionConsensusStateRequest revision_height. */
                    public revision_height: Long;

                    /**
                     * Encodes the specified QueryConnectionConsensusStateRequest message. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionConsensusStateRequest.verify|verify} messages.
                     * @param message QueryConnectionConsensusStateRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IQueryConnectionConsensusStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryConnectionConsensusStateRequest message, length delimited. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionConsensusStateRequest.verify|verify} messages.
                     * @param message QueryConnectionConsensusStateRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IQueryConnectionConsensusStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConnectionConsensusStateRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryConnectionConsensusStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.QueryConnectionConsensusStateRequest;

                    /**
                     * Decodes a QueryConnectionConsensusStateRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryConnectionConsensusStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.QueryConnectionConsensusStateRequest;

                    /**
                     * Verifies a QueryConnectionConsensusStateRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryConnectionConsensusStateRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryConnectionConsensusStateRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.QueryConnectionConsensusStateRequest;

                    /**
                     * Creates a plain object from a QueryConnectionConsensusStateRequest message. Also converts values to other types if specified.
                     * @param message QueryConnectionConsensusStateRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.QueryConnectionConsensusStateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryConnectionConsensusStateRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryConnectionConsensusStateResponse. */
                interface IQueryConnectionConsensusStateResponse {

                    /** QueryConnectionConsensusStateResponse consensus_state */
                    consensus_state?: (google.protobuf.IAny|null);

                    /** QueryConnectionConsensusStateResponse client_id */
                    client_id?: (string|null);

                    /** QueryConnectionConsensusStateResponse proof */
                    proof?: (Uint8Array|null);

                    /** QueryConnectionConsensusStateResponse proof_height */
                    proof_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a QueryConnectionConsensusStateResponse. */
                class QueryConnectionConsensusStateResponse implements IQueryConnectionConsensusStateResponse {

                    /**
                     * Constructs a new QueryConnectionConsensusStateResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IQueryConnectionConsensusStateResponse);

                    /** QueryConnectionConsensusStateResponse consensus_state. */
                    public consensus_state?: (google.protobuf.IAny|null);

                    /** QueryConnectionConsensusStateResponse client_id. */
                    public client_id: string;

                    /** QueryConnectionConsensusStateResponse proof. */
                    public proof: Uint8Array;

                    /** QueryConnectionConsensusStateResponse proof_height. */
                    public proof_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified QueryConnectionConsensusStateResponse message. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionConsensusStateResponse.verify|verify} messages.
                     * @param message QueryConnectionConsensusStateResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IQueryConnectionConsensusStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryConnectionConsensusStateResponse message, length delimited. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionConsensusStateResponse.verify|verify} messages.
                     * @param message QueryConnectionConsensusStateResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IQueryConnectionConsensusStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConnectionConsensusStateResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryConnectionConsensusStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.QueryConnectionConsensusStateResponse;

                    /**
                     * Decodes a QueryConnectionConsensusStateResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryConnectionConsensusStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.QueryConnectionConsensusStateResponse;

                    /**
                     * Verifies a QueryConnectionConsensusStateResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryConnectionConsensusStateResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryConnectionConsensusStateResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.QueryConnectionConsensusStateResponse;

                    /**
                     * Creates a plain object from a QueryConnectionConsensusStateResponse message. Also converts values to other types if specified.
                     * @param message QueryConnectionConsensusStateResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.QueryConnectionConsensusStateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryConnectionConsensusStateResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryConnectionParamsRequest. */
                interface IQueryConnectionParamsRequest {
                }

                /** Represents a QueryConnectionParamsRequest. */
                class QueryConnectionParamsRequest implements IQueryConnectionParamsRequest {

                    /**
                     * Constructs a new QueryConnectionParamsRequest.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IQueryConnectionParamsRequest);

                    /**
                     * Encodes the specified QueryConnectionParamsRequest message. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionParamsRequest.verify|verify} messages.
                     * @param message QueryConnectionParamsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IQueryConnectionParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryConnectionParamsRequest message, length delimited. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionParamsRequest.verify|verify} messages.
                     * @param message QueryConnectionParamsRequest message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IQueryConnectionParamsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConnectionParamsRequest message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryConnectionParamsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.QueryConnectionParamsRequest;

                    /**
                     * Decodes a QueryConnectionParamsRequest message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryConnectionParamsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.QueryConnectionParamsRequest;

                    /**
                     * Verifies a QueryConnectionParamsRequest message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryConnectionParamsRequest message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryConnectionParamsRequest
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.QueryConnectionParamsRequest;

                    /**
                     * Creates a plain object from a QueryConnectionParamsRequest message. Also converts values to other types if specified.
                     * @param message QueryConnectionParamsRequest
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.QueryConnectionParamsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryConnectionParamsRequest to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a QueryConnectionParamsResponse. */
                interface IQueryConnectionParamsResponse {

                    /** QueryConnectionParamsResponse params */
                    params?: (ibc.core.connection.v1.IParams|null);
                }

                /** Represents a QueryConnectionParamsResponse. */
                class QueryConnectionParamsResponse implements IQueryConnectionParamsResponse {

                    /**
                     * Constructs a new QueryConnectionParamsResponse.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IQueryConnectionParamsResponse);

                    /** QueryConnectionParamsResponse params. */
                    public params?: (ibc.core.connection.v1.IParams|null);

                    /**
                     * Encodes the specified QueryConnectionParamsResponse message. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionParamsResponse.verify|verify} messages.
                     * @param message QueryConnectionParamsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IQueryConnectionParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified QueryConnectionParamsResponse message, length delimited. Does not implicitly {@link ibc.core.connection.v1.QueryConnectionParamsResponse.verify|verify} messages.
                     * @param message QueryConnectionParamsResponse message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IQueryConnectionParamsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a QueryConnectionParamsResponse message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns QueryConnectionParamsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.QueryConnectionParamsResponse;

                    /**
                     * Decodes a QueryConnectionParamsResponse message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns QueryConnectionParamsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.QueryConnectionParamsResponse;

                    /**
                     * Verifies a QueryConnectionParamsResponse message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a QueryConnectionParamsResponse message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns QueryConnectionParamsResponse
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.QueryConnectionParamsResponse;

                    /**
                     * Creates a plain object from a QueryConnectionParamsResponse message. Also converts values to other types if specified.
                     * @param message QueryConnectionParamsResponse
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.QueryConnectionParamsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this QueryConnectionParamsResponse to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a GenesisState. */
                interface IGenesisState {

                    /** GenesisState connections */
                    connections?: (ibc.core.connection.v1.IIdentifiedConnection[]|null);

                    /** GenesisState client_connection_paths */
                    client_connection_paths?: (ibc.core.connection.v1.IConnectionPaths[]|null);

                    /** GenesisState next_connection_sequence */
                    next_connection_sequence?: (Long|null);

                    /** GenesisState params */
                    params?: (ibc.core.connection.v1.IParams|null);
                }

                /** Represents a GenesisState. */
                class GenesisState implements IGenesisState {

                    /**
                     * Constructs a new GenesisState.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.connection.v1.IGenesisState);

                    /** GenesisState connections. */
                    public connections: ibc.core.connection.v1.IIdentifiedConnection[];

                    /** GenesisState client_connection_paths. */
                    public client_connection_paths: ibc.core.connection.v1.IConnectionPaths[];

                    /** GenesisState next_connection_sequence. */
                    public next_connection_sequence: Long;

                    /** GenesisState params. */
                    public params?: (ibc.core.connection.v1.IParams|null);

                    /**
                     * Encodes the specified GenesisState message. Does not implicitly {@link ibc.core.connection.v1.GenesisState.verify|verify} messages.
                     * @param message GenesisState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.connection.v1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link ibc.core.connection.v1.GenesisState.verify|verify} messages.
                     * @param message GenesisState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.connection.v1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GenesisState message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns GenesisState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.connection.v1.GenesisState;

                    /**
                     * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns GenesisState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.connection.v1.GenesisState;

                    /**
                     * Verifies a GenesisState message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns GenesisState
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.connection.v1.GenesisState;

                    /**
                     * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                     * @param message GenesisState
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.connection.v1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this GenesisState to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }
        }

        /** Namespace types. */
        namespace types {

            /** Namespace v1. */
            namespace v1 {

                /** Properties of a GenesisState. */
                interface IGenesisState {

                    /** GenesisState client_genesis */
                    client_genesis?: (ibc.core.client.v1.IGenesisState|null);

                    /** GenesisState connection_genesis */
                    connection_genesis?: (ibc.core.connection.v1.IGenesisState|null);

                    /** GenesisState channel_genesis */
                    channel_genesis?: (ibc.core.channel.v1.IGenesisState|null);
                }

                /** Represents a GenesisState. */
                class GenesisState implements IGenesisState {

                    /**
                     * Constructs a new GenesisState.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.core.types.v1.IGenesisState);

                    /** GenesisState client_genesis. */
                    public client_genesis?: (ibc.core.client.v1.IGenesisState|null);

                    /** GenesisState connection_genesis. */
                    public connection_genesis?: (ibc.core.connection.v1.IGenesisState|null);

                    /** GenesisState channel_genesis. */
                    public channel_genesis?: (ibc.core.channel.v1.IGenesisState|null);

                    /**
                     * Encodes the specified GenesisState message. Does not implicitly {@link ibc.core.types.v1.GenesisState.verify|verify} messages.
                     * @param message GenesisState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.core.types.v1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link ibc.core.types.v1.GenesisState.verify|verify} messages.
                     * @param message GenesisState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.core.types.v1.IGenesisState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a GenesisState message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns GenesisState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.core.types.v1.GenesisState;

                    /**
                     * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns GenesisState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.core.types.v1.GenesisState;

                    /**
                     * Verifies a GenesisState message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns GenesisState
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.core.types.v1.GenesisState;

                    /**
                     * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                     * @param message GenesisState
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.core.types.v1.GenesisState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this GenesisState to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }
        }
    }

    /** Namespace lightclients. */
    namespace lightclients {

        /** Namespace localhost. */
        namespace localhost {

            /** Namespace v2. */
            namespace v2 {

                /** Properties of a ClientState. */
                interface IClientState {

                    /** ClientState latest_height */
                    latest_height?: (ibc.core.client.v1.IHeight|null);
                }

                /** Represents a ClientState. */
                class ClientState implements IClientState {

                    /**
                     * Constructs a new ClientState.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.localhost.v2.IClientState);

                    /** ClientState latest_height. */
                    public latest_height?: (ibc.core.client.v1.IHeight|null);

                    /**
                     * Encodes the specified ClientState message. Does not implicitly {@link ibc.lightclients.localhost.v2.ClientState.verify|verify} messages.
                     * @param message ClientState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.localhost.v2.IClientState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ClientState message, length delimited. Does not implicitly {@link ibc.lightclients.localhost.v2.ClientState.verify|verify} messages.
                     * @param message ClientState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.localhost.v2.IClientState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ClientState message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ClientState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.localhost.v2.ClientState;

                    /**
                     * Decodes a ClientState message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ClientState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.localhost.v2.ClientState;

                    /**
                     * Verifies a ClientState message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ClientState message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ClientState
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.localhost.v2.ClientState;

                    /**
                     * Creates a plain object from a ClientState message. Also converts values to other types if specified.
                     * @param message ClientState
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.localhost.v2.ClientState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ClientState to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }
        }

        /** Namespace solomachine. */
        namespace solomachine {

            /** Namespace v2. */
            namespace v2 {

                /** Properties of a ClientState. */
                interface IClientState {

                    /** ClientState sequence */
                    sequence?: (Long|null);

                    /** ClientState is_frozen */
                    is_frozen?: (boolean|null);

                    /** ClientState consensus_state */
                    consensus_state?: (ibc.lightclients.solomachine.v2.IConsensusState|null);

                    /** ClientState allow_update_after_proposal */
                    allow_update_after_proposal?: (boolean|null);
                }

                /** Represents a ClientState. */
                class ClientState implements IClientState {

                    /**
                     * Constructs a new ClientState.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v2.IClientState);

                    /** ClientState sequence. */
                    public sequence: Long;

                    /** ClientState is_frozen. */
                    public is_frozen: boolean;

                    /** ClientState consensus_state. */
                    public consensus_state?: (ibc.lightclients.solomachine.v2.IConsensusState|null);

                    /** ClientState allow_update_after_proposal. */
                    public allow_update_after_proposal: boolean;

                    /**
                     * Encodes the specified ClientState message. Does not implicitly {@link ibc.lightclients.solomachine.v2.ClientState.verify|verify} messages.
                     * @param message ClientState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v2.IClientState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ClientState message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v2.ClientState.verify|verify} messages.
                     * @param message ClientState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v2.IClientState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ClientState message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ClientState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v2.ClientState;

                    /**
                     * Decodes a ClientState message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ClientState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v2.ClientState;

                    /**
                     * Verifies a ClientState message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ClientState message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ClientState
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v2.ClientState;

                    /**
                     * Creates a plain object from a ClientState message. Also converts values to other types if specified.
                     * @param message ClientState
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v2.ClientState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ClientState to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a ConsensusState. */
                interface IConsensusState {

                    /** ConsensusState public_key */
                    public_key?: (google.protobuf.IAny|null);

                    /** ConsensusState diversifier */
                    diversifier?: (string|null);

                    /** ConsensusState timestamp */
                    timestamp?: (Long|null);
                }

                /** Represents a ConsensusState. */
                class ConsensusState implements IConsensusState {

                    /**
                     * Constructs a new ConsensusState.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v2.IConsensusState);

                    /** ConsensusState public_key. */
                    public public_key?: (google.protobuf.IAny|null);

                    /** ConsensusState diversifier. */
                    public diversifier: string;

                    /** ConsensusState timestamp. */
                    public timestamp: Long;

                    /**
                     * Encodes the specified ConsensusState message. Does not implicitly {@link ibc.lightclients.solomachine.v2.ConsensusState.verify|verify} messages.
                     * @param message ConsensusState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v2.IConsensusState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ConsensusState message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v2.ConsensusState.verify|verify} messages.
                     * @param message ConsensusState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v2.IConsensusState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ConsensusState message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ConsensusState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v2.ConsensusState;

                    /**
                     * Decodes a ConsensusState message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ConsensusState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v2.ConsensusState;

                    /**
                     * Verifies a ConsensusState message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ConsensusState message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ConsensusState
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v2.ConsensusState;

                    /**
                     * Creates a plain object from a ConsensusState message. Also converts values to other types if specified.
                     * @param message ConsensusState
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v2.ConsensusState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ConsensusState to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Header. */
                interface IHeader {

                    /** Header sequence */
                    sequence?: (Long|null);

                    /** Header timestamp */
                    timestamp?: (Long|null);

                    /** Header signature */
                    signature?: (Uint8Array|null);

                    /** Header new_public_key */
                    new_public_key?: (google.protobuf.IAny|null);

                    /** Header new_diversifier */
                    new_diversifier?: (string|null);
                }

                /** Represents a Header. */
                class Header implements IHeader {

                    /**
                     * Constructs a new Header.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v2.IHeader);

                    /** Header sequence. */
                    public sequence: Long;

                    /** Header timestamp. */
                    public timestamp: Long;

                    /** Header signature. */
                    public signature: Uint8Array;

                    /** Header new_public_key. */
                    public new_public_key?: (google.protobuf.IAny|null);

                    /** Header new_diversifier. */
                    public new_diversifier: string;

                    /**
                     * Encodes the specified Header message. Does not implicitly {@link ibc.lightclients.solomachine.v2.Header.verify|verify} messages.
                     * @param message Header message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v2.IHeader, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Header message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v2.Header.verify|verify} messages.
                     * @param message Header message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v2.IHeader, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Header message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Header
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v2.Header;

                    /**
                     * Decodes a Header message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Header
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v2.Header;

                    /**
                     * Verifies a Header message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Header message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Header
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v2.Header;

                    /**
                     * Creates a plain object from a Header message. Also converts values to other types if specified.
                     * @param message Header
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v2.Header, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Header to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Misbehaviour. */
                interface IMisbehaviour {

                    /** Misbehaviour client_id */
                    client_id?: (string|null);

                    /** Misbehaviour sequence */
                    sequence?: (Long|null);

                    /** Misbehaviour signature_one */
                    signature_one?: (ibc.lightclients.solomachine.v2.ISignatureAndData|null);

                    /** Misbehaviour signature_two */
                    signature_two?: (ibc.lightclients.solomachine.v2.ISignatureAndData|null);
                }

                /** Represents a Misbehaviour. */
                class Misbehaviour implements IMisbehaviour {

                    /**
                     * Constructs a new Misbehaviour.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v2.IMisbehaviour);

                    /** Misbehaviour client_id. */
                    public client_id: string;

                    /** Misbehaviour sequence. */
                    public sequence: Long;

                    /** Misbehaviour signature_one. */
                    public signature_one?: (ibc.lightclients.solomachine.v2.ISignatureAndData|null);

                    /** Misbehaviour signature_two. */
                    public signature_two?: (ibc.lightclients.solomachine.v2.ISignatureAndData|null);

                    /**
                     * Encodes the specified Misbehaviour message. Does not implicitly {@link ibc.lightclients.solomachine.v2.Misbehaviour.verify|verify} messages.
                     * @param message Misbehaviour message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v2.IMisbehaviour, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Misbehaviour message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v2.Misbehaviour.verify|verify} messages.
                     * @param message Misbehaviour message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v2.IMisbehaviour, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Misbehaviour message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Misbehaviour
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v2.Misbehaviour;

                    /**
                     * Decodes a Misbehaviour message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Misbehaviour
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v2.Misbehaviour;

                    /**
                     * Verifies a Misbehaviour message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Misbehaviour message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Misbehaviour
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v2.Misbehaviour;

                    /**
                     * Creates a plain object from a Misbehaviour message. Also converts values to other types if specified.
                     * @param message Misbehaviour
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v2.Misbehaviour, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Misbehaviour to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a SignatureAndData. */
                interface ISignatureAndData {

                    /** SignatureAndData signature */
                    signature?: (Uint8Array|null);

                    /** SignatureAndData data_type */
                    data_type?: (ibc.lightclients.solomachine.v2.DataType|null);

                    /** SignatureAndData data */
                    data?: (Uint8Array|null);

                    /** SignatureAndData timestamp */
                    timestamp?: (Long|null);
                }

                /** Represents a SignatureAndData. */
                class SignatureAndData implements ISignatureAndData {

                    /**
                     * Constructs a new SignatureAndData.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v2.ISignatureAndData);

                    /** SignatureAndData signature. */
                    public signature: Uint8Array;

                    /** SignatureAndData data_type. */
                    public data_type: ibc.lightclients.solomachine.v2.DataType;

                    /** SignatureAndData data. */
                    public data: Uint8Array;

                    /** SignatureAndData timestamp. */
                    public timestamp: Long;

                    /**
                     * Encodes the specified SignatureAndData message. Does not implicitly {@link ibc.lightclients.solomachine.v2.SignatureAndData.verify|verify} messages.
                     * @param message SignatureAndData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v2.ISignatureAndData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified SignatureAndData message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v2.SignatureAndData.verify|verify} messages.
                     * @param message SignatureAndData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v2.ISignatureAndData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a SignatureAndData message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns SignatureAndData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v2.SignatureAndData;

                    /**
                     * Decodes a SignatureAndData message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns SignatureAndData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v2.SignatureAndData;

                    /**
                     * Verifies a SignatureAndData message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a SignatureAndData message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns SignatureAndData
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v2.SignatureAndData;

                    /**
                     * Creates a plain object from a SignatureAndData message. Also converts values to other types if specified.
                     * @param message SignatureAndData
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v2.SignatureAndData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this SignatureAndData to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a TimestampedSignatureData. */
                interface ITimestampedSignatureData {

                    /** TimestampedSignatureData signature_data */
                    signature_data?: (Uint8Array|null);

                    /** TimestampedSignatureData timestamp */
                    timestamp?: (Long|null);
                }

                /** Represents a TimestampedSignatureData. */
                class TimestampedSignatureData implements ITimestampedSignatureData {

                    /**
                     * Constructs a new TimestampedSignatureData.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v2.ITimestampedSignatureData);

                    /** TimestampedSignatureData signature_data. */
                    public signature_data: Uint8Array;

                    /** TimestampedSignatureData timestamp. */
                    public timestamp: Long;

                    /**
                     * Encodes the specified TimestampedSignatureData message. Does not implicitly {@link ibc.lightclients.solomachine.v2.TimestampedSignatureData.verify|verify} messages.
                     * @param message TimestampedSignatureData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v2.ITimestampedSignatureData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified TimestampedSignatureData message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v2.TimestampedSignatureData.verify|verify} messages.
                     * @param message TimestampedSignatureData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v2.ITimestampedSignatureData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a TimestampedSignatureData message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns TimestampedSignatureData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v2.TimestampedSignatureData;

                    /**
                     * Decodes a TimestampedSignatureData message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns TimestampedSignatureData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v2.TimestampedSignatureData;

                    /**
                     * Verifies a TimestampedSignatureData message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a TimestampedSignatureData message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns TimestampedSignatureData
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v2.TimestampedSignatureData;

                    /**
                     * Creates a plain object from a TimestampedSignatureData message. Also converts values to other types if specified.
                     * @param message TimestampedSignatureData
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v2.TimestampedSignatureData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this TimestampedSignatureData to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a SignBytes. */
                interface ISignBytes {

                    /** SignBytes sequence */
                    sequence?: (Long|null);

                    /** SignBytes timestamp */
                    timestamp?: (Long|null);

                    /** SignBytes diversifier */
                    diversifier?: (string|null);

                    /** SignBytes data_type */
                    data_type?: (ibc.lightclients.solomachine.v2.DataType|null);

                    /** SignBytes data */
                    data?: (Uint8Array|null);
                }

                /** Represents a SignBytes. */
                class SignBytes implements ISignBytes {

                    /**
                     * Constructs a new SignBytes.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v2.ISignBytes);

                    /** SignBytes sequence. */
                    public sequence: Long;

                    /** SignBytes timestamp. */
                    public timestamp: Long;

                    /** SignBytes diversifier. */
                    public diversifier: string;

                    /** SignBytes data_type. */
                    public data_type: ibc.lightclients.solomachine.v2.DataType;

                    /** SignBytes data. */
                    public data: Uint8Array;

                    /**
                     * Encodes the specified SignBytes message. Does not implicitly {@link ibc.lightclients.solomachine.v2.SignBytes.verify|verify} messages.
                     * @param message SignBytes message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v2.ISignBytes, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified SignBytes message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v2.SignBytes.verify|verify} messages.
                     * @param message SignBytes message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v2.ISignBytes, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a SignBytes message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns SignBytes
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v2.SignBytes;

                    /**
                     * Decodes a SignBytes message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns SignBytes
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v2.SignBytes;

                    /**
                     * Verifies a SignBytes message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a SignBytes message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns SignBytes
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v2.SignBytes;

                    /**
                     * Creates a plain object from a SignBytes message. Also converts values to other types if specified.
                     * @param message SignBytes
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v2.SignBytes, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this SignBytes to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** DataType enum. */
                enum DataType {
                    DATA_TYPE_UNINITIALIZED_UNSPECIFIED = 0,
                    DATA_TYPE_CLIENT_STATE = 1,
                    DATA_TYPE_CONSENSUS_STATE = 2,
                    DATA_TYPE_CONNECTION_STATE = 3,
                    DATA_TYPE_CHANNEL_STATE = 4,
                    DATA_TYPE_PACKET_COMMITMENT = 5,
                    DATA_TYPE_PACKET_ACKNOWLEDGEMENT = 6,
                    DATA_TYPE_PACKET_RECEIPT_ABSENCE = 7,
                    DATA_TYPE_NEXT_SEQUENCE_RECV = 8,
                    DATA_TYPE_HEADER = 9
                }

                /** Properties of a HeaderData. */
                interface IHeaderData {

                    /** HeaderData new_pub_key */
                    new_pub_key?: (google.protobuf.IAny|null);

                    /** HeaderData new_diversifier */
                    new_diversifier?: (string|null);
                }

                /** Represents a HeaderData. */
                class HeaderData implements IHeaderData {

                    /**
                     * Constructs a new HeaderData.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v2.IHeaderData);

                    /** HeaderData new_pub_key. */
                    public new_pub_key?: (google.protobuf.IAny|null);

                    /** HeaderData new_diversifier. */
                    public new_diversifier: string;

                    /**
                     * Encodes the specified HeaderData message. Does not implicitly {@link ibc.lightclients.solomachine.v2.HeaderData.verify|verify} messages.
                     * @param message HeaderData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v2.IHeaderData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified HeaderData message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v2.HeaderData.verify|verify} messages.
                     * @param message HeaderData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v2.IHeaderData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a HeaderData message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns HeaderData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v2.HeaderData;

                    /**
                     * Decodes a HeaderData message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns HeaderData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v2.HeaderData;

                    /**
                     * Verifies a HeaderData message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a HeaderData message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns HeaderData
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v2.HeaderData;

                    /**
                     * Creates a plain object from a HeaderData message. Also converts values to other types if specified.
                     * @param message HeaderData
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v2.HeaderData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this HeaderData to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a ClientStateData. */
                interface IClientStateData {

                    /** ClientStateData path */
                    path?: (Uint8Array|null);

                    /** ClientStateData client_state */
                    client_state?: (google.protobuf.IAny|null);
                }

                /** Represents a ClientStateData. */
                class ClientStateData implements IClientStateData {

                    /**
                     * Constructs a new ClientStateData.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v2.IClientStateData);

                    /** ClientStateData path. */
                    public path: Uint8Array;

                    /** ClientStateData client_state. */
                    public client_state?: (google.protobuf.IAny|null);

                    /**
                     * Encodes the specified ClientStateData message. Does not implicitly {@link ibc.lightclients.solomachine.v2.ClientStateData.verify|verify} messages.
                     * @param message ClientStateData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v2.IClientStateData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ClientStateData message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v2.ClientStateData.verify|verify} messages.
                     * @param message ClientStateData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v2.IClientStateData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ClientStateData message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ClientStateData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v2.ClientStateData;

                    /**
                     * Decodes a ClientStateData message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ClientStateData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v2.ClientStateData;

                    /**
                     * Verifies a ClientStateData message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ClientStateData message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ClientStateData
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v2.ClientStateData;

                    /**
                     * Creates a plain object from a ClientStateData message. Also converts values to other types if specified.
                     * @param message ClientStateData
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v2.ClientStateData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ClientStateData to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a ConsensusStateData. */
                interface IConsensusStateData {

                    /** ConsensusStateData path */
                    path?: (Uint8Array|null);

                    /** ConsensusStateData consensus_state */
                    consensus_state?: (google.protobuf.IAny|null);
                }

                /** Represents a ConsensusStateData. */
                class ConsensusStateData implements IConsensusStateData {

                    /**
                     * Constructs a new ConsensusStateData.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v2.IConsensusStateData);

                    /** ConsensusStateData path. */
                    public path: Uint8Array;

                    /** ConsensusStateData consensus_state. */
                    public consensus_state?: (google.protobuf.IAny|null);

                    /**
                     * Encodes the specified ConsensusStateData message. Does not implicitly {@link ibc.lightclients.solomachine.v2.ConsensusStateData.verify|verify} messages.
                     * @param message ConsensusStateData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v2.IConsensusStateData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ConsensusStateData message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v2.ConsensusStateData.verify|verify} messages.
                     * @param message ConsensusStateData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v2.IConsensusStateData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ConsensusStateData message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ConsensusStateData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v2.ConsensusStateData;

                    /**
                     * Decodes a ConsensusStateData message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ConsensusStateData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v2.ConsensusStateData;

                    /**
                     * Verifies a ConsensusStateData message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ConsensusStateData message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ConsensusStateData
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v2.ConsensusStateData;

                    /**
                     * Creates a plain object from a ConsensusStateData message. Also converts values to other types if specified.
                     * @param message ConsensusStateData
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v2.ConsensusStateData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ConsensusStateData to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a ConnectionStateData. */
                interface IConnectionStateData {

                    /** ConnectionStateData path */
                    path?: (Uint8Array|null);

                    /** ConnectionStateData connection */
                    connection?: (ibc.core.connection.v1.IConnectionEnd|null);
                }

                /** Represents a ConnectionStateData. */
                class ConnectionStateData implements IConnectionStateData {

                    /**
                     * Constructs a new ConnectionStateData.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v2.IConnectionStateData);

                    /** ConnectionStateData path. */
                    public path: Uint8Array;

                    /** ConnectionStateData connection. */
                    public connection?: (ibc.core.connection.v1.IConnectionEnd|null);

                    /**
                     * Encodes the specified ConnectionStateData message. Does not implicitly {@link ibc.lightclients.solomachine.v2.ConnectionStateData.verify|verify} messages.
                     * @param message ConnectionStateData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v2.IConnectionStateData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ConnectionStateData message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v2.ConnectionStateData.verify|verify} messages.
                     * @param message ConnectionStateData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v2.IConnectionStateData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ConnectionStateData message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ConnectionStateData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v2.ConnectionStateData;

                    /**
                     * Decodes a ConnectionStateData message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ConnectionStateData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v2.ConnectionStateData;

                    /**
                     * Verifies a ConnectionStateData message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ConnectionStateData message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ConnectionStateData
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v2.ConnectionStateData;

                    /**
                     * Creates a plain object from a ConnectionStateData message. Also converts values to other types if specified.
                     * @param message ConnectionStateData
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v2.ConnectionStateData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ConnectionStateData to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a ChannelStateData. */
                interface IChannelStateData {

                    /** ChannelStateData path */
                    path?: (Uint8Array|null);

                    /** ChannelStateData channel */
                    channel?: (ibc.core.channel.v1.IChannel|null);
                }

                /** Represents a ChannelStateData. */
                class ChannelStateData implements IChannelStateData {

                    /**
                     * Constructs a new ChannelStateData.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v2.IChannelStateData);

                    /** ChannelStateData path. */
                    public path: Uint8Array;

                    /** ChannelStateData channel. */
                    public channel?: (ibc.core.channel.v1.IChannel|null);

                    /**
                     * Encodes the specified ChannelStateData message. Does not implicitly {@link ibc.lightclients.solomachine.v2.ChannelStateData.verify|verify} messages.
                     * @param message ChannelStateData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v2.IChannelStateData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ChannelStateData message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v2.ChannelStateData.verify|verify} messages.
                     * @param message ChannelStateData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v2.IChannelStateData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ChannelStateData message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ChannelStateData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v2.ChannelStateData;

                    /**
                     * Decodes a ChannelStateData message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ChannelStateData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v2.ChannelStateData;

                    /**
                     * Verifies a ChannelStateData message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ChannelStateData message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ChannelStateData
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v2.ChannelStateData;

                    /**
                     * Creates a plain object from a ChannelStateData message. Also converts values to other types if specified.
                     * @param message ChannelStateData
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v2.ChannelStateData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ChannelStateData to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a PacketCommitmentData. */
                interface IPacketCommitmentData {

                    /** PacketCommitmentData path */
                    path?: (Uint8Array|null);

                    /** PacketCommitmentData commitment */
                    commitment?: (Uint8Array|null);
                }

                /** Represents a PacketCommitmentData. */
                class PacketCommitmentData implements IPacketCommitmentData {

                    /**
                     * Constructs a new PacketCommitmentData.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v2.IPacketCommitmentData);

                    /** PacketCommitmentData path. */
                    public path: Uint8Array;

                    /** PacketCommitmentData commitment. */
                    public commitment: Uint8Array;

                    /**
                     * Encodes the specified PacketCommitmentData message. Does not implicitly {@link ibc.lightclients.solomachine.v2.PacketCommitmentData.verify|verify} messages.
                     * @param message PacketCommitmentData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v2.IPacketCommitmentData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified PacketCommitmentData message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v2.PacketCommitmentData.verify|verify} messages.
                     * @param message PacketCommitmentData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v2.IPacketCommitmentData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a PacketCommitmentData message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns PacketCommitmentData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v2.PacketCommitmentData;

                    /**
                     * Decodes a PacketCommitmentData message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns PacketCommitmentData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v2.PacketCommitmentData;

                    /**
                     * Verifies a PacketCommitmentData message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a PacketCommitmentData message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns PacketCommitmentData
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v2.PacketCommitmentData;

                    /**
                     * Creates a plain object from a PacketCommitmentData message. Also converts values to other types if specified.
                     * @param message PacketCommitmentData
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v2.PacketCommitmentData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this PacketCommitmentData to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a PacketAcknowledgementData. */
                interface IPacketAcknowledgementData {

                    /** PacketAcknowledgementData path */
                    path?: (Uint8Array|null);

                    /** PacketAcknowledgementData acknowledgement */
                    acknowledgement?: (Uint8Array|null);
                }

                /** Represents a PacketAcknowledgementData. */
                class PacketAcknowledgementData implements IPacketAcknowledgementData {

                    /**
                     * Constructs a new PacketAcknowledgementData.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v2.IPacketAcknowledgementData);

                    /** PacketAcknowledgementData path. */
                    public path: Uint8Array;

                    /** PacketAcknowledgementData acknowledgement. */
                    public acknowledgement: Uint8Array;

                    /**
                     * Encodes the specified PacketAcknowledgementData message. Does not implicitly {@link ibc.lightclients.solomachine.v2.PacketAcknowledgementData.verify|verify} messages.
                     * @param message PacketAcknowledgementData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v2.IPacketAcknowledgementData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified PacketAcknowledgementData message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v2.PacketAcknowledgementData.verify|verify} messages.
                     * @param message PacketAcknowledgementData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v2.IPacketAcknowledgementData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a PacketAcknowledgementData message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns PacketAcknowledgementData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v2.PacketAcknowledgementData;

                    /**
                     * Decodes a PacketAcknowledgementData message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns PacketAcknowledgementData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v2.PacketAcknowledgementData;

                    /**
                     * Verifies a PacketAcknowledgementData message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a PacketAcknowledgementData message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns PacketAcknowledgementData
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v2.PacketAcknowledgementData;

                    /**
                     * Creates a plain object from a PacketAcknowledgementData message. Also converts values to other types if specified.
                     * @param message PacketAcknowledgementData
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v2.PacketAcknowledgementData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this PacketAcknowledgementData to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a PacketReceiptAbsenceData. */
                interface IPacketReceiptAbsenceData {

                    /** PacketReceiptAbsenceData path */
                    path?: (Uint8Array|null);
                }

                /** Represents a PacketReceiptAbsenceData. */
                class PacketReceiptAbsenceData implements IPacketReceiptAbsenceData {

                    /**
                     * Constructs a new PacketReceiptAbsenceData.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v2.IPacketReceiptAbsenceData);

                    /** PacketReceiptAbsenceData path. */
                    public path: Uint8Array;

                    /**
                     * Encodes the specified PacketReceiptAbsenceData message. Does not implicitly {@link ibc.lightclients.solomachine.v2.PacketReceiptAbsenceData.verify|verify} messages.
                     * @param message PacketReceiptAbsenceData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v2.IPacketReceiptAbsenceData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified PacketReceiptAbsenceData message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v2.PacketReceiptAbsenceData.verify|verify} messages.
                     * @param message PacketReceiptAbsenceData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v2.IPacketReceiptAbsenceData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a PacketReceiptAbsenceData message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns PacketReceiptAbsenceData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v2.PacketReceiptAbsenceData;

                    /**
                     * Decodes a PacketReceiptAbsenceData message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns PacketReceiptAbsenceData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v2.PacketReceiptAbsenceData;

                    /**
                     * Verifies a PacketReceiptAbsenceData message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a PacketReceiptAbsenceData message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns PacketReceiptAbsenceData
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v2.PacketReceiptAbsenceData;

                    /**
                     * Creates a plain object from a PacketReceiptAbsenceData message. Also converts values to other types if specified.
                     * @param message PacketReceiptAbsenceData
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v2.PacketReceiptAbsenceData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this PacketReceiptAbsenceData to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a NextSequenceRecvData. */
                interface INextSequenceRecvData {

                    /** NextSequenceRecvData path */
                    path?: (Uint8Array|null);

                    /** NextSequenceRecvData next_seq_recv */
                    next_seq_recv?: (Long|null);
                }

                /** Represents a NextSequenceRecvData. */
                class NextSequenceRecvData implements INextSequenceRecvData {

                    /**
                     * Constructs a new NextSequenceRecvData.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v2.INextSequenceRecvData);

                    /** NextSequenceRecvData path. */
                    public path: Uint8Array;

                    /** NextSequenceRecvData next_seq_recv. */
                    public next_seq_recv: Long;

                    /**
                     * Encodes the specified NextSequenceRecvData message. Does not implicitly {@link ibc.lightclients.solomachine.v2.NextSequenceRecvData.verify|verify} messages.
                     * @param message NextSequenceRecvData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v2.INextSequenceRecvData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified NextSequenceRecvData message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v2.NextSequenceRecvData.verify|verify} messages.
                     * @param message NextSequenceRecvData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v2.INextSequenceRecvData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a NextSequenceRecvData message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns NextSequenceRecvData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v2.NextSequenceRecvData;

                    /**
                     * Decodes a NextSequenceRecvData message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns NextSequenceRecvData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v2.NextSequenceRecvData;

                    /**
                     * Verifies a NextSequenceRecvData message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a NextSequenceRecvData message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns NextSequenceRecvData
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v2.NextSequenceRecvData;

                    /**
                     * Creates a plain object from a NextSequenceRecvData message. Also converts values to other types if specified.
                     * @param message NextSequenceRecvData
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v2.NextSequenceRecvData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this NextSequenceRecvData to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }

            /** Namespace v3. */
            namespace v3 {

                /** Properties of a ClientState. */
                interface IClientState {

                    /** ClientState sequence */
                    sequence?: (Long|null);

                    /** ClientState is_frozen */
                    is_frozen?: (boolean|null);

                    /** ClientState consensus_state */
                    consensus_state?: (ibc.lightclients.solomachine.v3.IConsensusState|null);
                }

                /** Represents a ClientState. */
                class ClientState implements IClientState {

                    /**
                     * Constructs a new ClientState.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v3.IClientState);

                    /** ClientState sequence. */
                    public sequence: Long;

                    /** ClientState is_frozen. */
                    public is_frozen: boolean;

                    /** ClientState consensus_state. */
                    public consensus_state?: (ibc.lightclients.solomachine.v3.IConsensusState|null);

                    /**
                     * Encodes the specified ClientState message. Does not implicitly {@link ibc.lightclients.solomachine.v3.ClientState.verify|verify} messages.
                     * @param message ClientState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v3.IClientState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ClientState message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v3.ClientState.verify|verify} messages.
                     * @param message ClientState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v3.IClientState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ClientState message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ClientState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v3.ClientState;

                    /**
                     * Decodes a ClientState message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ClientState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v3.ClientState;

                    /**
                     * Verifies a ClientState message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ClientState message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ClientState
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v3.ClientState;

                    /**
                     * Creates a plain object from a ClientState message. Also converts values to other types if specified.
                     * @param message ClientState
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v3.ClientState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ClientState to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a ConsensusState. */
                interface IConsensusState {

                    /** ConsensusState public_key */
                    public_key?: (google.protobuf.IAny|null);

                    /** ConsensusState diversifier */
                    diversifier?: (string|null);

                    /** ConsensusState timestamp */
                    timestamp?: (Long|null);
                }

                /** Represents a ConsensusState. */
                class ConsensusState implements IConsensusState {

                    /**
                     * Constructs a new ConsensusState.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v3.IConsensusState);

                    /** ConsensusState public_key. */
                    public public_key?: (google.protobuf.IAny|null);

                    /** ConsensusState diversifier. */
                    public diversifier: string;

                    /** ConsensusState timestamp. */
                    public timestamp: Long;

                    /**
                     * Encodes the specified ConsensusState message. Does not implicitly {@link ibc.lightclients.solomachine.v3.ConsensusState.verify|verify} messages.
                     * @param message ConsensusState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v3.IConsensusState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ConsensusState message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v3.ConsensusState.verify|verify} messages.
                     * @param message ConsensusState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v3.IConsensusState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ConsensusState message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ConsensusState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v3.ConsensusState;

                    /**
                     * Decodes a ConsensusState message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ConsensusState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v3.ConsensusState;

                    /**
                     * Verifies a ConsensusState message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ConsensusState message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ConsensusState
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v3.ConsensusState;

                    /**
                     * Creates a plain object from a ConsensusState message. Also converts values to other types if specified.
                     * @param message ConsensusState
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v3.ConsensusState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ConsensusState to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Header. */
                interface IHeader {

                    /** Header timestamp */
                    timestamp?: (Long|null);

                    /** Header signature */
                    signature?: (Uint8Array|null);

                    /** Header new_public_key */
                    new_public_key?: (google.protobuf.IAny|null);

                    /** Header new_diversifier */
                    new_diversifier?: (string|null);
                }

                /** Represents a Header. */
                class Header implements IHeader {

                    /**
                     * Constructs a new Header.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v3.IHeader);

                    /** Header timestamp. */
                    public timestamp: Long;

                    /** Header signature. */
                    public signature: Uint8Array;

                    /** Header new_public_key. */
                    public new_public_key?: (google.protobuf.IAny|null);

                    /** Header new_diversifier. */
                    public new_diversifier: string;

                    /**
                     * Encodes the specified Header message. Does not implicitly {@link ibc.lightclients.solomachine.v3.Header.verify|verify} messages.
                     * @param message Header message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v3.IHeader, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Header message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v3.Header.verify|verify} messages.
                     * @param message Header message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v3.IHeader, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Header message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Header
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v3.Header;

                    /**
                     * Decodes a Header message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Header
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v3.Header;

                    /**
                     * Verifies a Header message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Header message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Header
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v3.Header;

                    /**
                     * Creates a plain object from a Header message. Also converts values to other types if specified.
                     * @param message Header
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v3.Header, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Header to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Misbehaviour. */
                interface IMisbehaviour {

                    /** Misbehaviour sequence */
                    sequence?: (Long|null);

                    /** Misbehaviour signature_one */
                    signature_one?: (ibc.lightclients.solomachine.v3.ISignatureAndData|null);

                    /** Misbehaviour signature_two */
                    signature_two?: (ibc.lightclients.solomachine.v3.ISignatureAndData|null);
                }

                /** Represents a Misbehaviour. */
                class Misbehaviour implements IMisbehaviour {

                    /**
                     * Constructs a new Misbehaviour.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v3.IMisbehaviour);

                    /** Misbehaviour sequence. */
                    public sequence: Long;

                    /** Misbehaviour signature_one. */
                    public signature_one?: (ibc.lightclients.solomachine.v3.ISignatureAndData|null);

                    /** Misbehaviour signature_two. */
                    public signature_two?: (ibc.lightclients.solomachine.v3.ISignatureAndData|null);

                    /**
                     * Encodes the specified Misbehaviour message. Does not implicitly {@link ibc.lightclients.solomachine.v3.Misbehaviour.verify|verify} messages.
                     * @param message Misbehaviour message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v3.IMisbehaviour, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Misbehaviour message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v3.Misbehaviour.verify|verify} messages.
                     * @param message Misbehaviour message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v3.IMisbehaviour, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Misbehaviour message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Misbehaviour
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v3.Misbehaviour;

                    /**
                     * Decodes a Misbehaviour message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Misbehaviour
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v3.Misbehaviour;

                    /**
                     * Verifies a Misbehaviour message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Misbehaviour message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Misbehaviour
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v3.Misbehaviour;

                    /**
                     * Creates a plain object from a Misbehaviour message. Also converts values to other types if specified.
                     * @param message Misbehaviour
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v3.Misbehaviour, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Misbehaviour to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a SignatureAndData. */
                interface ISignatureAndData {

                    /** SignatureAndData signature */
                    signature?: (Uint8Array|null);

                    /** SignatureAndData path */
                    path?: (Uint8Array|null);

                    /** SignatureAndData data */
                    data?: (Uint8Array|null);

                    /** SignatureAndData timestamp */
                    timestamp?: (Long|null);
                }

                /** Represents a SignatureAndData. */
                class SignatureAndData implements ISignatureAndData {

                    /**
                     * Constructs a new SignatureAndData.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v3.ISignatureAndData);

                    /** SignatureAndData signature. */
                    public signature: Uint8Array;

                    /** SignatureAndData path. */
                    public path: Uint8Array;

                    /** SignatureAndData data. */
                    public data: Uint8Array;

                    /** SignatureAndData timestamp. */
                    public timestamp: Long;

                    /**
                     * Encodes the specified SignatureAndData message. Does not implicitly {@link ibc.lightclients.solomachine.v3.SignatureAndData.verify|verify} messages.
                     * @param message SignatureAndData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v3.ISignatureAndData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified SignatureAndData message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v3.SignatureAndData.verify|verify} messages.
                     * @param message SignatureAndData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v3.ISignatureAndData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a SignatureAndData message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns SignatureAndData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v3.SignatureAndData;

                    /**
                     * Decodes a SignatureAndData message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns SignatureAndData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v3.SignatureAndData;

                    /**
                     * Verifies a SignatureAndData message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a SignatureAndData message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns SignatureAndData
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v3.SignatureAndData;

                    /**
                     * Creates a plain object from a SignatureAndData message. Also converts values to other types if specified.
                     * @param message SignatureAndData
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v3.SignatureAndData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this SignatureAndData to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a TimestampedSignatureData. */
                interface ITimestampedSignatureData {

                    /** TimestampedSignatureData signature_data */
                    signature_data?: (Uint8Array|null);

                    /** TimestampedSignatureData timestamp */
                    timestamp?: (Long|null);
                }

                /** Represents a TimestampedSignatureData. */
                class TimestampedSignatureData implements ITimestampedSignatureData {

                    /**
                     * Constructs a new TimestampedSignatureData.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v3.ITimestampedSignatureData);

                    /** TimestampedSignatureData signature_data. */
                    public signature_data: Uint8Array;

                    /** TimestampedSignatureData timestamp. */
                    public timestamp: Long;

                    /**
                     * Encodes the specified TimestampedSignatureData message. Does not implicitly {@link ibc.lightclients.solomachine.v3.TimestampedSignatureData.verify|verify} messages.
                     * @param message TimestampedSignatureData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v3.ITimestampedSignatureData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified TimestampedSignatureData message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v3.TimestampedSignatureData.verify|verify} messages.
                     * @param message TimestampedSignatureData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v3.ITimestampedSignatureData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a TimestampedSignatureData message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns TimestampedSignatureData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v3.TimestampedSignatureData;

                    /**
                     * Decodes a TimestampedSignatureData message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns TimestampedSignatureData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v3.TimestampedSignatureData;

                    /**
                     * Verifies a TimestampedSignatureData message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a TimestampedSignatureData message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns TimestampedSignatureData
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v3.TimestampedSignatureData;

                    /**
                     * Creates a plain object from a TimestampedSignatureData message. Also converts values to other types if specified.
                     * @param message TimestampedSignatureData
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v3.TimestampedSignatureData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this TimestampedSignatureData to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a SignBytes. */
                interface ISignBytes {

                    /** SignBytes sequence */
                    sequence?: (Long|null);

                    /** SignBytes timestamp */
                    timestamp?: (Long|null);

                    /** SignBytes diversifier */
                    diversifier?: (string|null);

                    /** SignBytes path */
                    path?: (Uint8Array|null);

                    /** SignBytes data */
                    data?: (Uint8Array|null);
                }

                /** Represents a SignBytes. */
                class SignBytes implements ISignBytes {

                    /**
                     * Constructs a new SignBytes.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v3.ISignBytes);

                    /** SignBytes sequence. */
                    public sequence: Long;

                    /** SignBytes timestamp. */
                    public timestamp: Long;

                    /** SignBytes diversifier. */
                    public diversifier: string;

                    /** SignBytes path. */
                    public path: Uint8Array;

                    /** SignBytes data. */
                    public data: Uint8Array;

                    /**
                     * Encodes the specified SignBytes message. Does not implicitly {@link ibc.lightclients.solomachine.v3.SignBytes.verify|verify} messages.
                     * @param message SignBytes message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v3.ISignBytes, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified SignBytes message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v3.SignBytes.verify|verify} messages.
                     * @param message SignBytes message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v3.ISignBytes, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a SignBytes message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns SignBytes
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v3.SignBytes;

                    /**
                     * Decodes a SignBytes message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns SignBytes
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v3.SignBytes;

                    /**
                     * Verifies a SignBytes message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a SignBytes message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns SignBytes
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v3.SignBytes;

                    /**
                     * Creates a plain object from a SignBytes message. Also converts values to other types if specified.
                     * @param message SignBytes
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v3.SignBytes, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this SignBytes to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a HeaderData. */
                interface IHeaderData {

                    /** HeaderData new_pub_key */
                    new_pub_key?: (google.protobuf.IAny|null);

                    /** HeaderData new_diversifier */
                    new_diversifier?: (string|null);
                }

                /** Represents a HeaderData. */
                class HeaderData implements IHeaderData {

                    /**
                     * Constructs a new HeaderData.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.solomachine.v3.IHeaderData);

                    /** HeaderData new_pub_key. */
                    public new_pub_key?: (google.protobuf.IAny|null);

                    /** HeaderData new_diversifier. */
                    public new_diversifier: string;

                    /**
                     * Encodes the specified HeaderData message. Does not implicitly {@link ibc.lightclients.solomachine.v3.HeaderData.verify|verify} messages.
                     * @param message HeaderData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.solomachine.v3.IHeaderData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified HeaderData message, length delimited. Does not implicitly {@link ibc.lightclients.solomachine.v3.HeaderData.verify|verify} messages.
                     * @param message HeaderData message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.solomachine.v3.IHeaderData, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a HeaderData message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns HeaderData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.solomachine.v3.HeaderData;

                    /**
                     * Decodes a HeaderData message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns HeaderData
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.solomachine.v3.HeaderData;

                    /**
                     * Verifies a HeaderData message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a HeaderData message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns HeaderData
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.solomachine.v3.HeaderData;

                    /**
                     * Creates a plain object from a HeaderData message. Also converts values to other types if specified.
                     * @param message HeaderData
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.solomachine.v3.HeaderData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this HeaderData to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }
        }

        /** Namespace tendermint. */
        namespace tendermint {

            /** Namespace v1. */
            namespace v1 {

                /** Properties of a ClientState. */
                interface IClientState {

                    /** ClientState chain_id */
                    chain_id?: (string|null);

                    /** ClientState trust_level */
                    trust_level?: (ibc.lightclients.tendermint.v1.IFraction|null);

                    /** ClientState trusting_period */
                    trusting_period?: (google.protobuf.IDuration|null);

                    /** ClientState unbonding_period */
                    unbonding_period?: (google.protobuf.IDuration|null);

                    /** ClientState max_clock_drift */
                    max_clock_drift?: (google.protobuf.IDuration|null);

                    /** ClientState frozen_height */
                    frozen_height?: (ibc.core.client.v1.IHeight|null);

                    /** ClientState latest_height */
                    latest_height?: (ibc.core.client.v1.IHeight|null);

                    /** ClientState proof_specs */
                    proof_specs?: (cosmos.ics23.v1.IProofSpec[]|null);

                    /** ClientState upgrade_path */
                    upgrade_path?: (string[]|null);

                    /** ClientState allow_update_after_expiry */
                    allow_update_after_expiry?: (boolean|null);

                    /** ClientState allow_update_after_misbehaviour */
                    allow_update_after_misbehaviour?: (boolean|null);
                }

                /** Represents a ClientState. */
                class ClientState implements IClientState {

                    /**
                     * Constructs a new ClientState.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.tendermint.v1.IClientState);

                    /** ClientState chain_id. */
                    public chain_id: string;

                    /** ClientState trust_level. */
                    public trust_level?: (ibc.lightclients.tendermint.v1.IFraction|null);

                    /** ClientState trusting_period. */
                    public trusting_period?: (google.protobuf.IDuration|null);

                    /** ClientState unbonding_period. */
                    public unbonding_period?: (google.protobuf.IDuration|null);

                    /** ClientState max_clock_drift. */
                    public max_clock_drift?: (google.protobuf.IDuration|null);

                    /** ClientState frozen_height. */
                    public frozen_height?: (ibc.core.client.v1.IHeight|null);

                    /** ClientState latest_height. */
                    public latest_height?: (ibc.core.client.v1.IHeight|null);

                    /** ClientState proof_specs. */
                    public proof_specs: cosmos.ics23.v1.IProofSpec[];

                    /** ClientState upgrade_path. */
                    public upgrade_path: string[];

                    /** ClientState allow_update_after_expiry. */
                    public allow_update_after_expiry: boolean;

                    /** ClientState allow_update_after_misbehaviour. */
                    public allow_update_after_misbehaviour: boolean;

                    /**
                     * Encodes the specified ClientState message. Does not implicitly {@link ibc.lightclients.tendermint.v1.ClientState.verify|verify} messages.
                     * @param message ClientState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.tendermint.v1.IClientState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ClientState message, length delimited. Does not implicitly {@link ibc.lightclients.tendermint.v1.ClientState.verify|verify} messages.
                     * @param message ClientState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.tendermint.v1.IClientState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ClientState message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ClientState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.tendermint.v1.ClientState;

                    /**
                     * Decodes a ClientState message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ClientState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.tendermint.v1.ClientState;

                    /**
                     * Verifies a ClientState message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ClientState message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ClientState
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.tendermint.v1.ClientState;

                    /**
                     * Creates a plain object from a ClientState message. Also converts values to other types if specified.
                     * @param message ClientState
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.tendermint.v1.ClientState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ClientState to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a ConsensusState. */
                interface IConsensusState {

                    /** ConsensusState timestamp */
                    timestamp?: (google.protobuf.ITimestamp|null);

                    /** ConsensusState root */
                    root?: (ibc.core.commitment.v1.IMerkleRoot|null);

                    /** ConsensusState next_validators_hash */
                    next_validators_hash?: (Uint8Array|null);
                }

                /** Represents a ConsensusState. */
                class ConsensusState implements IConsensusState {

                    /**
                     * Constructs a new ConsensusState.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.tendermint.v1.IConsensusState);

                    /** ConsensusState timestamp. */
                    public timestamp?: (google.protobuf.ITimestamp|null);

                    /** ConsensusState root. */
                    public root?: (ibc.core.commitment.v1.IMerkleRoot|null);

                    /** ConsensusState next_validators_hash. */
                    public next_validators_hash: Uint8Array;

                    /**
                     * Encodes the specified ConsensusState message. Does not implicitly {@link ibc.lightclients.tendermint.v1.ConsensusState.verify|verify} messages.
                     * @param message ConsensusState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.tendermint.v1.IConsensusState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified ConsensusState message, length delimited. Does not implicitly {@link ibc.lightclients.tendermint.v1.ConsensusState.verify|verify} messages.
                     * @param message ConsensusState message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.tendermint.v1.IConsensusState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a ConsensusState message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns ConsensusState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.tendermint.v1.ConsensusState;

                    /**
                     * Decodes a ConsensusState message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns ConsensusState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.tendermint.v1.ConsensusState;

                    /**
                     * Verifies a ConsensusState message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a ConsensusState message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns ConsensusState
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.tendermint.v1.ConsensusState;

                    /**
                     * Creates a plain object from a ConsensusState message. Also converts values to other types if specified.
                     * @param message ConsensusState
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.tendermint.v1.ConsensusState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this ConsensusState to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Misbehaviour. */
                interface IMisbehaviour {

                    /** Misbehaviour client_id */
                    client_id?: (string|null);

                    /** Misbehaviour header_1 */
                    header_1?: (ibc.lightclients.tendermint.v1.IHeader|null);

                    /** Misbehaviour header_2 */
                    header_2?: (ibc.lightclients.tendermint.v1.IHeader|null);
                }

                /** Represents a Misbehaviour. */
                class Misbehaviour implements IMisbehaviour {

                    /**
                     * Constructs a new Misbehaviour.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.tendermint.v1.IMisbehaviour);

                    /** Misbehaviour client_id. */
                    public client_id: string;

                    /** Misbehaviour header_1. */
                    public header_1?: (ibc.lightclients.tendermint.v1.IHeader|null);

                    /** Misbehaviour header_2. */
                    public header_2?: (ibc.lightclients.tendermint.v1.IHeader|null);

                    /**
                     * Encodes the specified Misbehaviour message. Does not implicitly {@link ibc.lightclients.tendermint.v1.Misbehaviour.verify|verify} messages.
                     * @param message Misbehaviour message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.tendermint.v1.IMisbehaviour, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Misbehaviour message, length delimited. Does not implicitly {@link ibc.lightclients.tendermint.v1.Misbehaviour.verify|verify} messages.
                     * @param message Misbehaviour message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.tendermint.v1.IMisbehaviour, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Misbehaviour message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Misbehaviour
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.tendermint.v1.Misbehaviour;

                    /**
                     * Decodes a Misbehaviour message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Misbehaviour
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.tendermint.v1.Misbehaviour;

                    /**
                     * Verifies a Misbehaviour message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Misbehaviour message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Misbehaviour
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.tendermint.v1.Misbehaviour;

                    /**
                     * Creates a plain object from a Misbehaviour message. Also converts values to other types if specified.
                     * @param message Misbehaviour
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.tendermint.v1.Misbehaviour, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Misbehaviour to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Header. */
                interface IHeader {

                    /** Header signed_header */
                    signed_header?: (tendermint.types.ISignedHeader|null);

                    /** Header validator_set */
                    validator_set?: (tendermint.types.IValidatorSet|null);

                    /** Header trusted_height */
                    trusted_height?: (ibc.core.client.v1.IHeight|null);

                    /** Header trusted_validators */
                    trusted_validators?: (tendermint.types.IValidatorSet|null);
                }

                /** Represents a Header. */
                class Header implements IHeader {

                    /**
                     * Constructs a new Header.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.tendermint.v1.IHeader);

                    /** Header signed_header. */
                    public signed_header?: (tendermint.types.ISignedHeader|null);

                    /** Header validator_set. */
                    public validator_set?: (tendermint.types.IValidatorSet|null);

                    /** Header trusted_height. */
                    public trusted_height?: (ibc.core.client.v1.IHeight|null);

                    /** Header trusted_validators. */
                    public trusted_validators?: (tendermint.types.IValidatorSet|null);

                    /**
                     * Encodes the specified Header message. Does not implicitly {@link ibc.lightclients.tendermint.v1.Header.verify|verify} messages.
                     * @param message Header message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.tendermint.v1.IHeader, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Header message, length delimited. Does not implicitly {@link ibc.lightclients.tendermint.v1.Header.verify|verify} messages.
                     * @param message Header message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.tendermint.v1.IHeader, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Header message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Header
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.tendermint.v1.Header;

                    /**
                     * Decodes a Header message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Header
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.tendermint.v1.Header;

                    /**
                     * Verifies a Header message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Header message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Header
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.tendermint.v1.Header;

                    /**
                     * Creates a plain object from a Header message. Also converts values to other types if specified.
                     * @param message Header
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.tendermint.v1.Header, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Header to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }

                /** Properties of a Fraction. */
                interface IFraction {

                    /** Fraction numerator */
                    numerator?: (Long|null);

                    /** Fraction denominator */
                    denominator?: (Long|null);
                }

                /** Represents a Fraction. */
                class Fraction implements IFraction {

                    /**
                     * Constructs a new Fraction.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: ibc.lightclients.tendermint.v1.IFraction);

                    /** Fraction numerator. */
                    public numerator: Long;

                    /** Fraction denominator. */
                    public denominator: Long;

                    /**
                     * Encodes the specified Fraction message. Does not implicitly {@link ibc.lightclients.tendermint.v1.Fraction.verify|verify} messages.
                     * @param message Fraction message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: ibc.lightclients.tendermint.v1.IFraction, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Fraction message, length delimited. Does not implicitly {@link ibc.lightclients.tendermint.v1.Fraction.verify|verify} messages.
                     * @param message Fraction message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: ibc.lightclients.tendermint.v1.IFraction, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Fraction message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Fraction
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ibc.lightclients.tendermint.v1.Fraction;

                    /**
                     * Decodes a Fraction message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Fraction
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ibc.lightclients.tendermint.v1.Fraction;

                    /**
                     * Verifies a Fraction message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Fraction message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Fraction
                     */
                    public static fromObject(object: { [k: string]: any }): ibc.lightclients.tendermint.v1.Fraction;

                    /**
                     * Creates a plain object from a Fraction message. Also converts values to other types if specified.
                     * @param message Fraction
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: ibc.lightclients.tendermint.v1.Fraction, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Fraction to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }
        }
    }
}

/** Namespace tendermint. */
export namespace tendermint {

    /** Namespace types. */
    namespace types {

        /** Properties of a ValidatorSet. */
        interface IValidatorSet {

            /** ValidatorSet validators */
            validators?: (tendermint.types.IValidator[]|null);

            /** ValidatorSet proposer */
            proposer?: (tendermint.types.IValidator|null);

            /** ValidatorSet total_voting_power */
            total_voting_power?: (Long|null);
        }

        /** Represents a ValidatorSet. */
        class ValidatorSet implements IValidatorSet {

            /**
             * Constructs a new ValidatorSet.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IValidatorSet);

            /** ValidatorSet validators. */
            public validators: tendermint.types.IValidator[];

            /** ValidatorSet proposer. */
            public proposer?: (tendermint.types.IValidator|null);

            /** ValidatorSet total_voting_power. */
            public total_voting_power: Long;

            /**
             * Encodes the specified ValidatorSet message. Does not implicitly {@link tendermint.types.ValidatorSet.verify|verify} messages.
             * @param message ValidatorSet message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IValidatorSet, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ValidatorSet message, length delimited. Does not implicitly {@link tendermint.types.ValidatorSet.verify|verify} messages.
             * @param message ValidatorSet message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IValidatorSet, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ValidatorSet message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ValidatorSet
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.ValidatorSet;

            /**
             * Decodes a ValidatorSet message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ValidatorSet
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.ValidatorSet;

            /**
             * Verifies a ValidatorSet message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ValidatorSet message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ValidatorSet
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.ValidatorSet;

            /**
             * Creates a plain object from a ValidatorSet message. Also converts values to other types if specified.
             * @param message ValidatorSet
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.ValidatorSet, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ValidatorSet to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Validator. */
        interface IValidator {

            /** Validator address */
            address?: (Uint8Array|null);

            /** Validator pub_key */
            pub_key?: (tendermint.crypto.IPublicKey|null);

            /** Validator voting_power */
            voting_power?: (Long|null);

            /** Validator proposer_priority */
            proposer_priority?: (Long|null);
        }

        /** Represents a Validator. */
        class Validator implements IValidator {

            /**
             * Constructs a new Validator.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IValidator);

            /** Validator address. */
            public address: Uint8Array;

            /** Validator pub_key. */
            public pub_key?: (tendermint.crypto.IPublicKey|null);

            /** Validator voting_power. */
            public voting_power: Long;

            /** Validator proposer_priority. */
            public proposer_priority: Long;

            /**
             * Encodes the specified Validator message. Does not implicitly {@link tendermint.types.Validator.verify|verify} messages.
             * @param message Validator message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IValidator, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Validator message, length delimited. Does not implicitly {@link tendermint.types.Validator.verify|verify} messages.
             * @param message Validator message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IValidator, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Validator message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Validator
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.Validator;

            /**
             * Decodes a Validator message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Validator
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.Validator;

            /**
             * Verifies a Validator message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Validator message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Validator
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.Validator;

            /**
             * Creates a plain object from a Validator message. Also converts values to other types if specified.
             * @param message Validator
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.Validator, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Validator to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SimpleValidator. */
        interface ISimpleValidator {

            /** SimpleValidator pub_key */
            pub_key?: (tendermint.crypto.IPublicKey|null);

            /** SimpleValidator voting_power */
            voting_power?: (Long|null);
        }

        /** Represents a SimpleValidator. */
        class SimpleValidator implements ISimpleValidator {

            /**
             * Constructs a new SimpleValidator.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.ISimpleValidator);

            /** SimpleValidator pub_key. */
            public pub_key?: (tendermint.crypto.IPublicKey|null);

            /** SimpleValidator voting_power. */
            public voting_power: Long;

            /**
             * Encodes the specified SimpleValidator message. Does not implicitly {@link tendermint.types.SimpleValidator.verify|verify} messages.
             * @param message SimpleValidator message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.ISimpleValidator, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SimpleValidator message, length delimited. Does not implicitly {@link tendermint.types.SimpleValidator.verify|verify} messages.
             * @param message SimpleValidator message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.ISimpleValidator, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SimpleValidator message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SimpleValidator
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.SimpleValidator;

            /**
             * Decodes a SimpleValidator message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SimpleValidator
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.SimpleValidator;

            /**
             * Verifies a SimpleValidator message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SimpleValidator message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SimpleValidator
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.SimpleValidator;

            /**
             * Creates a plain object from a SimpleValidator message. Also converts values to other types if specified.
             * @param message SimpleValidator
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.SimpleValidator, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SimpleValidator to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** BlockIDFlag enum. */
        enum BlockIDFlag {
            BLOCK_ID_FLAG_UNKNOWN = 0,
            BLOCK_ID_FLAG_ABSENT = 1,
            BLOCK_ID_FLAG_COMMIT = 2,
            BLOCK_ID_FLAG_NIL = 3
        }

        /** SignedMsgType enum. */
        enum SignedMsgType {
            SIGNED_MSG_TYPE_UNKNOWN = 0,
            SIGNED_MSG_TYPE_PREVOTE = 1,
            SIGNED_MSG_TYPE_PRECOMMIT = 2,
            SIGNED_MSG_TYPE_PROPOSAL = 32
        }

        /** Properties of a PartSetHeader. */
        interface IPartSetHeader {

            /** PartSetHeader total */
            total?: (number|null);

            /** PartSetHeader hash */
            hash?: (Uint8Array|null);
        }

        /** Represents a PartSetHeader. */
        class PartSetHeader implements IPartSetHeader {

            /**
             * Constructs a new PartSetHeader.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IPartSetHeader);

            /** PartSetHeader total. */
            public total: number;

            /** PartSetHeader hash. */
            public hash: Uint8Array;

            /**
             * Encodes the specified PartSetHeader message. Does not implicitly {@link tendermint.types.PartSetHeader.verify|verify} messages.
             * @param message PartSetHeader message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IPartSetHeader, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PartSetHeader message, length delimited. Does not implicitly {@link tendermint.types.PartSetHeader.verify|verify} messages.
             * @param message PartSetHeader message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IPartSetHeader, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PartSetHeader message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PartSetHeader
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.PartSetHeader;

            /**
             * Decodes a PartSetHeader message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PartSetHeader
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.PartSetHeader;

            /**
             * Verifies a PartSetHeader message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PartSetHeader message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PartSetHeader
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.PartSetHeader;

            /**
             * Creates a plain object from a PartSetHeader message. Also converts values to other types if specified.
             * @param message PartSetHeader
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.PartSetHeader, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PartSetHeader to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Part. */
        interface IPart {

            /** Part index */
            index?: (number|null);

            /** Part bytes */
            bytes?: (Uint8Array|null);

            /** Part proof */
            proof?: (tendermint.crypto.IProof|null);
        }

        /** Represents a Part. */
        class Part implements IPart {

            /**
             * Constructs a new Part.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IPart);

            /** Part index. */
            public index: number;

            /** Part bytes. */
            public bytes: Uint8Array;

            /** Part proof. */
            public proof?: (tendermint.crypto.IProof|null);

            /**
             * Encodes the specified Part message. Does not implicitly {@link tendermint.types.Part.verify|verify} messages.
             * @param message Part message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IPart, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Part message, length delimited. Does not implicitly {@link tendermint.types.Part.verify|verify} messages.
             * @param message Part message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IPart, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Part message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Part
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.Part;

            /**
             * Decodes a Part message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Part
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.Part;

            /**
             * Verifies a Part message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Part message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Part
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.Part;

            /**
             * Creates a plain object from a Part message. Also converts values to other types if specified.
             * @param message Part
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.Part, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Part to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a BlockID. */
        interface IBlockID {

            /** BlockID hash */
            hash?: (Uint8Array|null);

            /** BlockID part_set_header */
            part_set_header?: (tendermint.types.IPartSetHeader|null);
        }

        /** Represents a BlockID. */
        class BlockID implements IBlockID {

            /**
             * Constructs a new BlockID.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IBlockID);

            /** BlockID hash. */
            public hash: Uint8Array;

            /** BlockID part_set_header. */
            public part_set_header?: (tendermint.types.IPartSetHeader|null);

            /**
             * Encodes the specified BlockID message. Does not implicitly {@link tendermint.types.BlockID.verify|verify} messages.
             * @param message BlockID message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IBlockID, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified BlockID message, length delimited. Does not implicitly {@link tendermint.types.BlockID.verify|verify} messages.
             * @param message BlockID message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IBlockID, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a BlockID message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BlockID
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.BlockID;

            /**
             * Decodes a BlockID message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns BlockID
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.BlockID;

            /**
             * Verifies a BlockID message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a BlockID message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns BlockID
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.BlockID;

            /**
             * Creates a plain object from a BlockID message. Also converts values to other types if specified.
             * @param message BlockID
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.BlockID, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this BlockID to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Header. */
        interface IHeader {

            /** Header version */
            version?: (tendermint.version.IConsensus|null);

            /** Header chain_id */
            chain_id?: (string|null);

            /** Header height */
            height?: (Long|null);

            /** Header time */
            time?: (google.protobuf.ITimestamp|null);

            /** Header last_block_id */
            last_block_id?: (tendermint.types.IBlockID|null);

            /** Header last_commit_hash */
            last_commit_hash?: (Uint8Array|null);

            /** Header data_hash */
            data_hash?: (Uint8Array|null);

            /** Header validators_hash */
            validators_hash?: (Uint8Array|null);

            /** Header next_validators_hash */
            next_validators_hash?: (Uint8Array|null);

            /** Header consensus_hash */
            consensus_hash?: (Uint8Array|null);

            /** Header app_hash */
            app_hash?: (Uint8Array|null);

            /** Header last_results_hash */
            last_results_hash?: (Uint8Array|null);

            /** Header evidence_hash */
            evidence_hash?: (Uint8Array|null);

            /** Header proposer_address */
            proposer_address?: (Uint8Array|null);
        }

        /** Represents a Header. */
        class Header implements IHeader {

            /**
             * Constructs a new Header.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IHeader);

            /** Header version. */
            public version?: (tendermint.version.IConsensus|null);

            /** Header chain_id. */
            public chain_id: string;

            /** Header height. */
            public height: Long;

            /** Header time. */
            public time?: (google.protobuf.ITimestamp|null);

            /** Header last_block_id. */
            public last_block_id?: (tendermint.types.IBlockID|null);

            /** Header last_commit_hash. */
            public last_commit_hash: Uint8Array;

            /** Header data_hash. */
            public data_hash: Uint8Array;

            /** Header validators_hash. */
            public validators_hash: Uint8Array;

            /** Header next_validators_hash. */
            public next_validators_hash: Uint8Array;

            /** Header consensus_hash. */
            public consensus_hash: Uint8Array;

            /** Header app_hash. */
            public app_hash: Uint8Array;

            /** Header last_results_hash. */
            public last_results_hash: Uint8Array;

            /** Header evidence_hash. */
            public evidence_hash: Uint8Array;

            /** Header proposer_address. */
            public proposer_address: Uint8Array;

            /**
             * Encodes the specified Header message. Does not implicitly {@link tendermint.types.Header.verify|verify} messages.
             * @param message Header message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IHeader, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Header message, length delimited. Does not implicitly {@link tendermint.types.Header.verify|verify} messages.
             * @param message Header message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IHeader, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Header message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Header
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.Header;

            /**
             * Decodes a Header message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Header
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.Header;

            /**
             * Verifies a Header message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Header message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Header
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.Header;

            /**
             * Creates a plain object from a Header message. Also converts values to other types if specified.
             * @param message Header
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.Header, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Header to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Data. */
        interface IData {

            /** Data txs */
            txs?: (Uint8Array[]|null);
        }

        /** Represents a Data. */
        class Data implements IData {

            /**
             * Constructs a new Data.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IData);

            /** Data txs. */
            public txs: Uint8Array[];

            /**
             * Encodes the specified Data message. Does not implicitly {@link tendermint.types.Data.verify|verify} messages.
             * @param message Data message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IData, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Data message, length delimited. Does not implicitly {@link tendermint.types.Data.verify|verify} messages.
             * @param message Data message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IData, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Data message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Data
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.Data;

            /**
             * Decodes a Data message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Data
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.Data;

            /**
             * Verifies a Data message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Data message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Data
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.Data;

            /**
             * Creates a plain object from a Data message. Also converts values to other types if specified.
             * @param message Data
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.Data, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Data to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Vote. */
        interface IVote {

            /** Vote type */
            type?: (tendermint.types.SignedMsgType|null);

            /** Vote height */
            height?: (Long|null);

            /** Vote round */
            round?: (number|null);

            /** Vote block_id */
            block_id?: (tendermint.types.IBlockID|null);

            /** Vote timestamp */
            timestamp?: (google.protobuf.ITimestamp|null);

            /** Vote validator_address */
            validator_address?: (Uint8Array|null);

            /** Vote validator_index */
            validator_index?: (number|null);

            /** Vote signature */
            signature?: (Uint8Array|null);
        }

        /** Represents a Vote. */
        class Vote implements IVote {

            /**
             * Constructs a new Vote.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IVote);

            /** Vote type. */
            public type: tendermint.types.SignedMsgType;

            /** Vote height. */
            public height: Long;

            /** Vote round. */
            public round: number;

            /** Vote block_id. */
            public block_id?: (tendermint.types.IBlockID|null);

            /** Vote timestamp. */
            public timestamp?: (google.protobuf.ITimestamp|null);

            /** Vote validator_address. */
            public validator_address: Uint8Array;

            /** Vote validator_index. */
            public validator_index: number;

            /** Vote signature. */
            public signature: Uint8Array;

            /**
             * Encodes the specified Vote message. Does not implicitly {@link tendermint.types.Vote.verify|verify} messages.
             * @param message Vote message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IVote, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Vote message, length delimited. Does not implicitly {@link tendermint.types.Vote.verify|verify} messages.
             * @param message Vote message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IVote, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Vote message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Vote
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.Vote;

            /**
             * Decodes a Vote message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Vote
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.Vote;

            /**
             * Verifies a Vote message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Vote message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Vote
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.Vote;

            /**
             * Creates a plain object from a Vote message. Also converts values to other types if specified.
             * @param message Vote
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.Vote, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Vote to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Commit. */
        interface ICommit {

            /** Commit height */
            height?: (Long|null);

            /** Commit round */
            round?: (number|null);

            /** Commit block_id */
            block_id?: (tendermint.types.IBlockID|null);

            /** Commit signatures */
            signatures?: (tendermint.types.ICommitSig[]|null);
        }

        /** Represents a Commit. */
        class Commit implements ICommit {

            /**
             * Constructs a new Commit.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.ICommit);

            /** Commit height. */
            public height: Long;

            /** Commit round. */
            public round: number;

            /** Commit block_id. */
            public block_id?: (tendermint.types.IBlockID|null);

            /** Commit signatures. */
            public signatures: tendermint.types.ICommitSig[];

            /**
             * Encodes the specified Commit message. Does not implicitly {@link tendermint.types.Commit.verify|verify} messages.
             * @param message Commit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.ICommit, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Commit message, length delimited. Does not implicitly {@link tendermint.types.Commit.verify|verify} messages.
             * @param message Commit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.ICommit, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Commit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Commit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.Commit;

            /**
             * Decodes a Commit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Commit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.Commit;

            /**
             * Verifies a Commit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Commit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Commit
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.Commit;

            /**
             * Creates a plain object from a Commit message. Also converts values to other types if specified.
             * @param message Commit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.Commit, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Commit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a CommitSig. */
        interface ICommitSig {

            /** CommitSig block_id_flag */
            block_id_flag?: (tendermint.types.BlockIDFlag|null);

            /** CommitSig validator_address */
            validator_address?: (Uint8Array|null);

            /** CommitSig timestamp */
            timestamp?: (google.protobuf.ITimestamp|null);

            /** CommitSig signature */
            signature?: (Uint8Array|null);
        }

        /** Represents a CommitSig. */
        class CommitSig implements ICommitSig {

            /**
             * Constructs a new CommitSig.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.ICommitSig);

            /** CommitSig block_id_flag. */
            public block_id_flag: tendermint.types.BlockIDFlag;

            /** CommitSig validator_address. */
            public validator_address: Uint8Array;

            /** CommitSig timestamp. */
            public timestamp?: (google.protobuf.ITimestamp|null);

            /** CommitSig signature. */
            public signature: Uint8Array;

            /**
             * Encodes the specified CommitSig message. Does not implicitly {@link tendermint.types.CommitSig.verify|verify} messages.
             * @param message CommitSig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.ICommitSig, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CommitSig message, length delimited. Does not implicitly {@link tendermint.types.CommitSig.verify|verify} messages.
             * @param message CommitSig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.ICommitSig, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CommitSig message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CommitSig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.CommitSig;

            /**
             * Decodes a CommitSig message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CommitSig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.CommitSig;

            /**
             * Verifies a CommitSig message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CommitSig message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CommitSig
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.CommitSig;

            /**
             * Creates a plain object from a CommitSig message. Also converts values to other types if specified.
             * @param message CommitSig
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.CommitSig, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CommitSig to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Proposal. */
        interface IProposal {

            /** Proposal type */
            type?: (tendermint.types.SignedMsgType|null);

            /** Proposal height */
            height?: (Long|null);

            /** Proposal round */
            round?: (number|null);

            /** Proposal pol_round */
            pol_round?: (number|null);

            /** Proposal block_id */
            block_id?: (tendermint.types.IBlockID|null);

            /** Proposal timestamp */
            timestamp?: (google.protobuf.ITimestamp|null);

            /** Proposal signature */
            signature?: (Uint8Array|null);
        }

        /** Represents a Proposal. */
        class Proposal implements IProposal {

            /**
             * Constructs a new Proposal.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IProposal);

            /** Proposal type. */
            public type: tendermint.types.SignedMsgType;

            /** Proposal height. */
            public height: Long;

            /** Proposal round. */
            public round: number;

            /** Proposal pol_round. */
            public pol_round: number;

            /** Proposal block_id. */
            public block_id?: (tendermint.types.IBlockID|null);

            /** Proposal timestamp. */
            public timestamp?: (google.protobuf.ITimestamp|null);

            /** Proposal signature. */
            public signature: Uint8Array;

            /**
             * Encodes the specified Proposal message. Does not implicitly {@link tendermint.types.Proposal.verify|verify} messages.
             * @param message Proposal message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IProposal, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Proposal message, length delimited. Does not implicitly {@link tendermint.types.Proposal.verify|verify} messages.
             * @param message Proposal message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IProposal, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Proposal message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Proposal
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.Proposal;

            /**
             * Decodes a Proposal message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Proposal
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.Proposal;

            /**
             * Verifies a Proposal message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Proposal message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Proposal
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.Proposal;

            /**
             * Creates a plain object from a Proposal message. Also converts values to other types if specified.
             * @param message Proposal
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.Proposal, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Proposal to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SignedHeader. */
        interface ISignedHeader {

            /** SignedHeader header */
            header?: (tendermint.types.IHeader|null);

            /** SignedHeader commit */
            commit?: (tendermint.types.ICommit|null);
        }

        /** Represents a SignedHeader. */
        class SignedHeader implements ISignedHeader {

            /**
             * Constructs a new SignedHeader.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.ISignedHeader);

            /** SignedHeader header. */
            public header?: (tendermint.types.IHeader|null);

            /** SignedHeader commit. */
            public commit?: (tendermint.types.ICommit|null);

            /**
             * Encodes the specified SignedHeader message. Does not implicitly {@link tendermint.types.SignedHeader.verify|verify} messages.
             * @param message SignedHeader message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.ISignedHeader, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SignedHeader message, length delimited. Does not implicitly {@link tendermint.types.SignedHeader.verify|verify} messages.
             * @param message SignedHeader message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.ISignedHeader, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SignedHeader message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SignedHeader
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.SignedHeader;

            /**
             * Decodes a SignedHeader message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SignedHeader
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.SignedHeader;

            /**
             * Verifies a SignedHeader message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SignedHeader message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SignedHeader
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.SignedHeader;

            /**
             * Creates a plain object from a SignedHeader message. Also converts values to other types if specified.
             * @param message SignedHeader
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.SignedHeader, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SignedHeader to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a LightBlock. */
        interface ILightBlock {

            /** LightBlock signed_header */
            signed_header?: (tendermint.types.ISignedHeader|null);

            /** LightBlock validator_set */
            validator_set?: (tendermint.types.IValidatorSet|null);
        }

        /** Represents a LightBlock. */
        class LightBlock implements ILightBlock {

            /**
             * Constructs a new LightBlock.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.ILightBlock);

            /** LightBlock signed_header. */
            public signed_header?: (tendermint.types.ISignedHeader|null);

            /** LightBlock validator_set. */
            public validator_set?: (tendermint.types.IValidatorSet|null);

            /**
             * Encodes the specified LightBlock message. Does not implicitly {@link tendermint.types.LightBlock.verify|verify} messages.
             * @param message LightBlock message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.ILightBlock, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LightBlock message, length delimited. Does not implicitly {@link tendermint.types.LightBlock.verify|verify} messages.
             * @param message LightBlock message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.ILightBlock, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LightBlock message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LightBlock
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.LightBlock;

            /**
             * Decodes a LightBlock message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LightBlock
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.LightBlock;

            /**
             * Verifies a LightBlock message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LightBlock message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LightBlock
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.LightBlock;

            /**
             * Creates a plain object from a LightBlock message. Also converts values to other types if specified.
             * @param message LightBlock
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.LightBlock, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LightBlock to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a BlockMeta. */
        interface IBlockMeta {

            /** BlockMeta block_id */
            block_id?: (tendermint.types.IBlockID|null);

            /** BlockMeta block_size */
            block_size?: (Long|null);

            /** BlockMeta header */
            header?: (tendermint.types.IHeader|null);

            /** BlockMeta num_txs */
            num_txs?: (Long|null);
        }

        /** Represents a BlockMeta. */
        class BlockMeta implements IBlockMeta {

            /**
             * Constructs a new BlockMeta.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.IBlockMeta);

            /** BlockMeta block_id. */
            public block_id?: (tendermint.types.IBlockID|null);

            /** BlockMeta block_size. */
            public block_size: Long;

            /** BlockMeta header. */
            public header?: (tendermint.types.IHeader|null);

            /** BlockMeta num_txs. */
            public num_txs: Long;

            /**
             * Encodes the specified BlockMeta message. Does not implicitly {@link tendermint.types.BlockMeta.verify|verify} messages.
             * @param message BlockMeta message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.IBlockMeta, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified BlockMeta message, length delimited. Does not implicitly {@link tendermint.types.BlockMeta.verify|verify} messages.
             * @param message BlockMeta message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.IBlockMeta, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a BlockMeta message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BlockMeta
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.BlockMeta;

            /**
             * Decodes a BlockMeta message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns BlockMeta
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.BlockMeta;

            /**
             * Verifies a BlockMeta message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a BlockMeta message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns BlockMeta
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.BlockMeta;

            /**
             * Creates a plain object from a BlockMeta message. Also converts values to other types if specified.
             * @param message BlockMeta
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.BlockMeta, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this BlockMeta to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TxProof. */
        interface ITxProof {

            /** TxProof root_hash */
            root_hash?: (Uint8Array|null);

            /** TxProof data */
            data?: (Uint8Array|null);

            /** TxProof proof */
            proof?: (tendermint.crypto.IProof|null);
        }

        /** Represents a TxProof. */
        class TxProof implements ITxProof {

            /**
             * Constructs a new TxProof.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.types.ITxProof);

            /** TxProof root_hash. */
            public root_hash: Uint8Array;

            /** TxProof data. */
            public data: Uint8Array;

            /** TxProof proof. */
            public proof?: (tendermint.crypto.IProof|null);

            /**
             * Encodes the specified TxProof message. Does not implicitly {@link tendermint.types.TxProof.verify|verify} messages.
             * @param message TxProof message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.types.ITxProof, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TxProof message, length delimited. Does not implicitly {@link tendermint.types.TxProof.verify|verify} messages.
             * @param message TxProof message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.types.ITxProof, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TxProof message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TxProof
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.types.TxProof;

            /**
             * Decodes a TxProof message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TxProof
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.types.TxProof;

            /**
             * Verifies a TxProof message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TxProof message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TxProof
             */
            public static fromObject(object: { [k: string]: any }): tendermint.types.TxProof;

            /**
             * Creates a plain object from a TxProof message. Also converts values to other types if specified.
             * @param message TxProof
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.types.TxProof, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TxProof to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Namespace crypto. */
    namespace crypto {

        /** Properties of a PublicKey. */
        interface IPublicKey {

            /** PublicKey ed25519 */
            ed25519?: (Uint8Array|null);

            /** PublicKey secp256k1 */
            secp256k1?: (Uint8Array|null);
        }

        /** Represents a PublicKey. */
        class PublicKey implements IPublicKey {

            /**
             * Constructs a new PublicKey.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.crypto.IPublicKey);

            /** PublicKey ed25519. */
            public ed25519?: (Uint8Array|null);

            /** PublicKey secp256k1. */
            public secp256k1?: (Uint8Array|null);

            /** PublicKey sum. */
            public sum?: ("ed25519"|"secp256k1");

            /**
             * Encodes the specified PublicKey message. Does not implicitly {@link tendermint.crypto.PublicKey.verify|verify} messages.
             * @param message PublicKey message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.crypto.IPublicKey, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PublicKey message, length delimited. Does not implicitly {@link tendermint.crypto.PublicKey.verify|verify} messages.
             * @param message PublicKey message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.crypto.IPublicKey, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PublicKey message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PublicKey
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.crypto.PublicKey;

            /**
             * Decodes a PublicKey message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PublicKey
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.crypto.PublicKey;

            /**
             * Verifies a PublicKey message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PublicKey message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PublicKey
             */
            public static fromObject(object: { [k: string]: any }): tendermint.crypto.PublicKey;

            /**
             * Creates a plain object from a PublicKey message. Also converts values to other types if specified.
             * @param message PublicKey
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.crypto.PublicKey, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PublicKey to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Proof. */
        interface IProof {

            /** Proof total */
            total?: (Long|null);

            /** Proof index */
            index?: (Long|null);

            /** Proof leaf_hash */
            leaf_hash?: (Uint8Array|null);

            /** Proof aunts */
            aunts?: (Uint8Array[]|null);
        }

        /** Represents a Proof. */
        class Proof implements IProof {

            /**
             * Constructs a new Proof.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.crypto.IProof);

            /** Proof total. */
            public total: Long;

            /** Proof index. */
            public index: Long;

            /** Proof leaf_hash. */
            public leaf_hash: Uint8Array;

            /** Proof aunts. */
            public aunts: Uint8Array[];

            /**
             * Encodes the specified Proof message. Does not implicitly {@link tendermint.crypto.Proof.verify|verify} messages.
             * @param message Proof message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.crypto.IProof, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Proof message, length delimited. Does not implicitly {@link tendermint.crypto.Proof.verify|verify} messages.
             * @param message Proof message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.crypto.IProof, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Proof message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Proof
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.crypto.Proof;

            /**
             * Decodes a Proof message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Proof
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.crypto.Proof;

            /**
             * Verifies a Proof message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Proof message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Proof
             */
            public static fromObject(object: { [k: string]: any }): tendermint.crypto.Proof;

            /**
             * Creates a plain object from a Proof message. Also converts values to other types if specified.
             * @param message Proof
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.crypto.Proof, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Proof to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ValueOp. */
        interface IValueOp {

            /** ValueOp key */
            key?: (Uint8Array|null);

            /** ValueOp proof */
            proof?: (tendermint.crypto.IProof|null);
        }

        /** Represents a ValueOp. */
        class ValueOp implements IValueOp {

            /**
             * Constructs a new ValueOp.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.crypto.IValueOp);

            /** ValueOp key. */
            public key: Uint8Array;

            /** ValueOp proof. */
            public proof?: (tendermint.crypto.IProof|null);

            /**
             * Encodes the specified ValueOp message. Does not implicitly {@link tendermint.crypto.ValueOp.verify|verify} messages.
             * @param message ValueOp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.crypto.IValueOp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ValueOp message, length delimited. Does not implicitly {@link tendermint.crypto.ValueOp.verify|verify} messages.
             * @param message ValueOp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.crypto.IValueOp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ValueOp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ValueOp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.crypto.ValueOp;

            /**
             * Decodes a ValueOp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ValueOp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.crypto.ValueOp;

            /**
             * Verifies a ValueOp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ValueOp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ValueOp
             */
            public static fromObject(object: { [k: string]: any }): tendermint.crypto.ValueOp;

            /**
             * Creates a plain object from a ValueOp message. Also converts values to other types if specified.
             * @param message ValueOp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.crypto.ValueOp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ValueOp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a DominoOp. */
        interface IDominoOp {

            /** DominoOp key */
            key?: (string|null);

            /** DominoOp input */
            input?: (string|null);

            /** DominoOp output */
            output?: (string|null);
        }

        /** Represents a DominoOp. */
        class DominoOp implements IDominoOp {

            /**
             * Constructs a new DominoOp.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.crypto.IDominoOp);

            /** DominoOp key. */
            public key: string;

            /** DominoOp input. */
            public input: string;

            /** DominoOp output. */
            public output: string;

            /**
             * Encodes the specified DominoOp message. Does not implicitly {@link tendermint.crypto.DominoOp.verify|verify} messages.
             * @param message DominoOp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.crypto.IDominoOp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified DominoOp message, length delimited. Does not implicitly {@link tendermint.crypto.DominoOp.verify|verify} messages.
             * @param message DominoOp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.crypto.IDominoOp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DominoOp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DominoOp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.crypto.DominoOp;

            /**
             * Decodes a DominoOp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DominoOp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.crypto.DominoOp;

            /**
             * Verifies a DominoOp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DominoOp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DominoOp
             */
            public static fromObject(object: { [k: string]: any }): tendermint.crypto.DominoOp;

            /**
             * Creates a plain object from a DominoOp message. Also converts values to other types if specified.
             * @param message DominoOp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.crypto.DominoOp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DominoOp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ProofOp. */
        interface IProofOp {

            /** ProofOp type */
            type?: (string|null);

            /** ProofOp key */
            key?: (Uint8Array|null);

            /** ProofOp data */
            data?: (Uint8Array|null);
        }

        /** Represents a ProofOp. */
        class ProofOp implements IProofOp {

            /**
             * Constructs a new ProofOp.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.crypto.IProofOp);

            /** ProofOp type. */
            public type: string;

            /** ProofOp key. */
            public key: Uint8Array;

            /** ProofOp data. */
            public data: Uint8Array;

            /**
             * Encodes the specified ProofOp message. Does not implicitly {@link tendermint.crypto.ProofOp.verify|verify} messages.
             * @param message ProofOp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.crypto.IProofOp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ProofOp message, length delimited. Does not implicitly {@link tendermint.crypto.ProofOp.verify|verify} messages.
             * @param message ProofOp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.crypto.IProofOp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ProofOp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ProofOp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.crypto.ProofOp;

            /**
             * Decodes a ProofOp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ProofOp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.crypto.ProofOp;

            /**
             * Verifies a ProofOp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ProofOp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ProofOp
             */
            public static fromObject(object: { [k: string]: any }): tendermint.crypto.ProofOp;

            /**
             * Creates a plain object from a ProofOp message. Also converts values to other types if specified.
             * @param message ProofOp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.crypto.ProofOp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ProofOp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ProofOps. */
        interface IProofOps {

            /** ProofOps ops */
            ops?: (tendermint.crypto.IProofOp[]|null);
        }

        /** Represents a ProofOps. */
        class ProofOps implements IProofOps {

            /**
             * Constructs a new ProofOps.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.crypto.IProofOps);

            /** ProofOps ops. */
            public ops: tendermint.crypto.IProofOp[];

            /**
             * Encodes the specified ProofOps message. Does not implicitly {@link tendermint.crypto.ProofOps.verify|verify} messages.
             * @param message ProofOps message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.crypto.IProofOps, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ProofOps message, length delimited. Does not implicitly {@link tendermint.crypto.ProofOps.verify|verify} messages.
             * @param message ProofOps message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.crypto.IProofOps, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ProofOps message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ProofOps
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.crypto.ProofOps;

            /**
             * Decodes a ProofOps message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ProofOps
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.crypto.ProofOps;

            /**
             * Verifies a ProofOps message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ProofOps message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ProofOps
             */
            public static fromObject(object: { [k: string]: any }): tendermint.crypto.ProofOps;

            /**
             * Creates a plain object from a ProofOps message. Also converts values to other types if specified.
             * @param message ProofOps
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.crypto.ProofOps, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ProofOps to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Namespace version. */
    namespace version {

        /** Properties of an App. */
        interface IApp {

            /** App protocol */
            protocol?: (Long|null);

            /** App software */
            software?: (string|null);
        }

        /** Represents an App. */
        class App implements IApp {

            /**
             * Constructs a new App.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.version.IApp);

            /** App protocol. */
            public protocol: Long;

            /** App software. */
            public software: string;

            /**
             * Encodes the specified App message. Does not implicitly {@link tendermint.version.App.verify|verify} messages.
             * @param message App message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.version.IApp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified App message, length delimited. Does not implicitly {@link tendermint.version.App.verify|verify} messages.
             * @param message App message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.version.IApp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an App message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns App
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.version.App;

            /**
             * Decodes an App message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns App
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.version.App;

            /**
             * Verifies an App message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an App message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns App
             */
            public static fromObject(object: { [k: string]: any }): tendermint.version.App;

            /**
             * Creates a plain object from an App message. Also converts values to other types if specified.
             * @param message App
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.version.App, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this App to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Consensus. */
        interface IConsensus {

            /** Consensus block */
            block?: (Long|null);

            /** Consensus app */
            app?: (Long|null);
        }

        /** Represents a Consensus. */
        class Consensus implements IConsensus {

            /**
             * Constructs a new Consensus.
             * @param [properties] Properties to set
             */
            constructor(properties?: tendermint.version.IConsensus);

            /** Consensus block. */
            public block: Long;

            /** Consensus app. */
            public app: Long;

            /**
             * Encodes the specified Consensus message. Does not implicitly {@link tendermint.version.Consensus.verify|verify} messages.
             * @param message Consensus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: tendermint.version.IConsensus, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Consensus message, length delimited. Does not implicitly {@link tendermint.version.Consensus.verify|verify} messages.
             * @param message Consensus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: tendermint.version.IConsensus, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Consensus message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Consensus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tendermint.version.Consensus;

            /**
             * Decodes a Consensus message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Consensus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tendermint.version.Consensus;

            /**
             * Verifies a Consensus message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Consensus message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Consensus
             */
            public static fromObject(object: { [k: string]: any }): tendermint.version.Consensus;

            /**
             * Creates a plain object from a Consensus message. Also converts values to other types if specified.
             * @param message Consensus
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: tendermint.version.Consensus, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Consensus to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }
}
